; Hobby Cross-Assembler HXA68 Test 6800
; 6800\Instruction Set
; ok: 6800 Instruction Set

; generated by MODE68.PY - Wed Jun 12 11:53:55 2024

; no errors to detect

; -------------------------------

		.listfile
		.errfile

		.maxerr	10000		; increase default count

; -------------------------------

		.cpu	6800
		.org	$1000

; -------------------------------

; backward reference

bak08	.equ	$12
bak16	.equ	$1234
bak24	.equ	$456789
bak32	.equ	$89ABCDEF

; -------------------------------

		ABA 			; inh

		ADC 	A #$80	; dual imm
		ADC 	A #bak08
		ADC 	A $32	; dual dir
		ADC 	A bak08
		ADC 	A $D101	; dual ext
		ADC 	A bak16
		ADC 	A fwd16
		ADC 	A X		; dual ndx
		ADC 	A $89,X
		ADC 	A $00AB, X
		ADC 	A bak08, X
		ADC 	A fwd08,X

		ADC 	B #$80	; dual imm
		ADC 	B #bak08
		ADC 	B $32	; dual dir
		ADC 	B bak08
		ADC 	B $D101	; dual ext
		ADC 	B bak16
		ADC 	B fwd16
		ADC 	B X		; dual ndx
		ADC 	B $89,X
		ADC 	B $00AB, X
		ADC 	B bak08, X
		ADC 	B fwd08,X

		ADCA	#$80	; imm
		ADCA	#bak08
		ADCA	#fwd08

		ADCA	$32		; dir
		ADCA	$00EF
		ADCA	bak08

		ADCA	$0021	; (ext -> dir)
		ADCA	$D101	; ext
		ADCA	bak08	; (ext -> dir)
		ADCA	bak16	; ext
		ADCA	fwd16
		ADCA	fwd08

		ADCA	X		; ndx
		ADCA	$89,X
		ADCA	$00AB, X
		ADCA	bak08,X
		ADCA	fwd08, X

		ADCB	#$80	; imm
		ADCB	#bak08
		ADCB	#fwd08

		ADCB	X		; ndx
		ADCB	$89,X
		ADCB	$00AB, X
		ADCB	bak08,X
		ADCB	fwd08, X

		ADCB	$32		; dir
		ADCB	$00EF
		ADCB	bak08

		ADCB	$0021	; (ext -> dir)
		ADCB	$D101	; ext
		ADCB	bak08	; (ext -> dir)
		ADCB	bak16	; ext
		ADCB	fwd16
		ADCB	fwd08

		ADD 	A #$80	; dual imm
		ADD 	A #bak08
		ADD 	A $32	; dual dir
		ADD 	A bak08
		ADD 	A $D101	; dual ext
		ADD 	A bak16
		ADD 	A fwd16
		ADD 	A X		; dual ndx
		ADD 	A $89,X
		ADD 	A $00AB, X
		ADD 	A bak08, X
		ADD 	A fwd08,X

		ADD 	B #$80	; dual imm
		ADD 	B #bak08
		ADD 	B $32	; dual dir
		ADD 	B bak08
		ADD 	B $D101	; dual ext
		ADD 	B bak16
		ADD 	B fwd16
		ADD 	B X		; dual ndx
		ADD 	B $89,X
		ADD 	B $00AB, X
		ADD 	B bak08, X
		ADD 	B fwd08,X

		ADDA	$32		; dir
		ADDA	$00EF
		ADDA	bak08

		ADDA	#$80	; imm
		ADDA	#bak08
		ADDA	#fwd08

		ADDA	X		; ndx
		ADDA	$89,X
		ADDA	$00AB, X
		ADDA	bak08,X
		ADDA	fwd08, X

		ADDA	$0021	; (ext -> dir)
		ADDA	$D101	; ext
		ADDA	bak08	; (ext -> dir)
		ADDA	bak16	; ext
		ADDA	fwd16
		ADDA	fwd08

		ADDB	$32		; dir
		ADDB	$00EF
		ADDB	bak08

		ADDB	X		; ndx
		ADDB	$89,X
		ADDB	$00AB, X
		ADDB	bak08,X
		ADDB	fwd08, X

		ADDB	#$80	; imm
		ADDB	#bak08
		ADDB	#fwd08

		ADDB	$0021	; (ext -> dir)
		ADDB	$D101	; ext
		ADDB	bak08	; (ext -> dir)
		ADDB	bak16	; ext
		ADDB	fwd16
		ADDB	fwd08

		AND 	A #$80	; dual imm
		AND 	A #bak08
		AND 	A $32	; dual dir
		AND 	A bak08
		AND 	A $D101	; dual ext
		AND 	A bak16
		AND 	A fwd16
		AND 	A X		; dual ndx
		AND 	A $89,X
		AND 	A $00AB, X
		AND 	A bak08, X
		AND 	A fwd08,X

		AND 	B #$80	; dual imm
		AND 	B #bak08
		AND 	B $32	; dual dir
		AND 	B bak08
		AND 	B $D101	; dual ext
		AND 	B bak16
		AND 	B fwd16
		AND 	B X		; dual ndx
		AND 	B $89,X
		AND 	B $00AB, X
		AND 	B bak08, X
		AND 	B fwd08,X

		ANDA	$32		; dir
		ANDA	$00EF
		ANDA	bak08

		ANDA	#$80	; imm
		ANDA	#bak08
		ANDA	#fwd08

		ANDA	X		; ndx
		ANDA	$89,X
		ANDA	$00AB, X
		ANDA	bak08,X
		ANDA	fwd08, X

		ANDA	$0021	; (ext -> dir)
		ANDA	$D101	; ext
		ANDA	bak08	; (ext -> dir)
		ANDA	bak16	; ext
		ANDA	fwd16
		ANDA	fwd08

		ANDB	#$80	; imm
		ANDB	#bak08
		ANDB	#fwd08

		ANDB	X		; ndx
		ANDB	$89,X
		ANDB	$00AB, X
		ANDB	bak08,X
		ANDB	fwd08, X

		ANDB	$32		; dir
		ANDB	$00EF
		ANDB	bak08

		ANDB	$0021	; (ext -> dir)
		ANDB	$D101	; ext
		ANDB	bak08	; (ext -> dir)
		ANDB	bak16	; ext
		ANDB	fwd16
		ANDB	fwd08

		ASL 	X		; ndx
		ASL 	$89,X
		ASL 	$00AB, X
		ASL 	bak08,X
		ASL 	fwd08, X

		ASL 	A		; accx
		ASL 	B

		ASL 	$0021	; ext
		ASL 	$D101
		ASL 	bak08
		ASL 	bak16
		ASL 	fwd16
		ASL 	fwd08

		ASLA			; acc

		ASLB			; acc

		ASR 	X		; ndx
		ASR 	$89,X
		ASR 	$00AB, X
		ASR 	bak08,X
		ASR 	fwd08, X

		ASR 	$0021	; ext
		ASR 	$D101
		ASR 	bak08
		ASR 	bak16
		ASR 	fwd16
		ASR 	fwd08

		ASR 	A		; accx
		ASR 	B

		ASRA			; acc

		ASRB			; acc

:	; backward ref for BCC

		BCC 	:+	; rel
		BCC 	:-

:	; forward ref for BCC

:	; backward ref for BCS

		BCS 	:+	; rel
		BCS 	:-

:	; forward ref for BCS

:	; backward ref for BEQ

		BEQ 	:+	; rel
		BEQ 	:-

:	; forward ref for BEQ

:	; backward ref for BGE

		BGE 	:+	; rel
		BGE 	:-

:	; forward ref for BGE

:	; backward ref for BGT

		BGT 	:+	; rel
		BGT 	:-

:	; forward ref for BGT

:	; backward ref for BHI

		BHI 	:+	; rel
		BHI 	:-

:	; forward ref for BHI

		BIT 	A #$80	; dual imm
		BIT 	A #bak08
		BIT 	A $32	; dual dir
		BIT 	A bak08
		BIT 	A $D101	; dual ext
		BIT 	A bak16
		BIT 	A fwd16
		BIT 	A X		; dual ndx
		BIT 	A $89,X
		BIT 	A $00AB, X
		BIT 	A bak08, X
		BIT 	A fwd08,X

		BIT 	B #$80	; dual imm
		BIT 	B #bak08
		BIT 	B $32	; dual dir
		BIT 	B bak08
		BIT 	B $D101	; dual ext
		BIT 	B bak16
		BIT 	B fwd16
		BIT 	B X		; dual ndx
		BIT 	B $89,X
		BIT 	B $00AB, X
		BIT 	B bak08, X
		BIT 	B fwd08,X

		BITA	X		; ndx
		BITA	$89,X
		BITA	$00AB, X
		BITA	bak08,X
		BITA	fwd08, X

		BITA	#$80	; imm
		BITA	#bak08
		BITA	#fwd08

		BITA	$32		; dir
		BITA	$00EF
		BITA	bak08

		BITA	$0021	; (ext -> dir)
		BITA	$D101	; ext
		BITA	bak08	; (ext -> dir)
		BITA	bak16	; ext
		BITA	fwd16
		BITA	fwd08

		BITB	#$80	; imm
		BITB	#bak08
		BITB	#fwd08

		BITB	$32		; dir
		BITB	$00EF
		BITB	bak08

		BITB	X		; ndx
		BITB	$89,X
		BITB	$00AB, X
		BITB	bak08,X
		BITB	fwd08, X

		BITB	$0021	; (ext -> dir)
		BITB	$D101	; ext
		BITB	bak08	; (ext -> dir)
		BITB	bak16	; ext
		BITB	fwd16
		BITB	fwd08

:	; backward ref for BLE

		BLE 	:+	; rel
		BLE 	:-

:	; forward ref for BLE

:	; backward ref for BLS

		BLS 	:+	; rel
		BLS 	:-

:	; forward ref for BLS

:	; backward ref for BLT

		BLT 	:+	; rel
		BLT 	:-

:	; forward ref for BLT

:	; backward ref for BMI

		BMI 	:+	; rel
		BMI 	:-

:	; forward ref for BMI

:	; backward ref for BNE

		BNE 	:+	; rel
		BNE 	:-

:	; forward ref for BNE

:	; backward ref for BPL

		BPL 	:+	; rel
		BPL 	:-

:	; forward ref for BPL

:	; backward ref for BRA

		BRA 	:+	; rel
		BRA 	:-

:	; forward ref for BRA

:	; backward ref for BSR

		BSR 	:+	; rel
		BSR 	:-

:	; forward ref for BSR

:	; backward ref for BVC

		BVC 	:+	; rel
		BVC 	:-

:	; forward ref for BVC

:	; backward ref for BVS

		BVS 	:+	; rel
		BVS 	:-

:	; forward ref for BVS

		CBA 			; inh

		CLC 			; inh

		CLI 			; inh

		CLR 	A		; accx
		CLR 	B

		CLR 	X		; ndx
		CLR 	$89,X
		CLR 	$00AB, X
		CLR 	bak08,X
		CLR 	fwd08, X

		CLR 	$0021	; ext
		CLR 	$D101
		CLR 	bak08
		CLR 	bak16
		CLR 	fwd16
		CLR 	fwd08

		CLRA			; acc

		CLRB			; acc

		CLV 			; inh

		CMP 	A #$80	; dual imm
		CMP 	A #bak08
		CMP 	A $32	; dual dir
		CMP 	A bak08
		CMP 	A $D101	; dual ext
		CMP 	A bak16
		CMP 	A fwd16
		CMP 	A X		; dual ndx
		CMP 	A $89,X
		CMP 	A $00AB, X
		CMP 	A bak08, X
		CMP 	A fwd08,X

		CMP 	B #$80	; dual imm
		CMP 	B #bak08
		CMP 	B $32	; dual dir
		CMP 	B bak08
		CMP 	B $D101	; dual ext
		CMP 	B bak16
		CMP 	B fwd16
		CMP 	B X		; dual ndx
		CMP 	B $89,X
		CMP 	B $00AB, X
		CMP 	B bak08, X
		CMP 	B fwd08,X

		CMPA	$32		; dir
		CMPA	$00EF
		CMPA	bak08

		CMPA	X		; ndx
		CMPA	$89,X
		CMPA	$00AB, X
		CMPA	bak08,X
		CMPA	fwd08, X

		CMPA	#$80	; imm
		CMPA	#bak08
		CMPA	#fwd08

		CMPA	$0021	; (ext -> dir)
		CMPA	$D101	; ext
		CMPA	bak08	; (ext -> dir)
		CMPA	bak16	; ext
		CMPA	fwd16
		CMPA	fwd08

		CMPB	#$80	; imm
		CMPB	#bak08
		CMPB	#fwd08

		CMPB	$32		; dir
		CMPB	$00EF
		CMPB	bak08

		CMPB	$0021	; (ext -> dir)
		CMPB	$D101	; ext
		CMPB	bak08	; (ext -> dir)
		CMPB	bak16	; ext
		CMPB	fwd16
		CMPB	fwd08

		CMPB	X		; ndx
		CMPB	$89,X
		CMPB	$00AB, X
		CMPB	bak08,X
		CMPB	fwd08, X

		COM 	A		; accx
		COM 	B

		COM 	X		; ndx
		COM 	$89,X
		COM 	$00AB, X
		COM 	bak08,X
		COM 	fwd08, X

		COM 	$0021	; ext
		COM 	$D101
		COM 	bak08
		COM 	bak16
		COM 	fwd16
		COM 	fwd08

		COMA			; acc

		COMB			; acc

		CPX 	#$80	; imm
		CPX 	#bak08
		CPX 	#fwd08

		CPX 	X		; ndx
		CPX 	$89,X
		CPX 	$00AB, X
		CPX 	bak08,X
		CPX 	fwd08, X

		CPX 	$0021	; (ext -> dir)
		CPX 	$D101	; ext
		CPX 	bak08	; (ext -> dir)
		CPX 	bak16	; ext
		CPX 	fwd16
		CPX 	fwd08

		CPX 	$32		; dir
		CPX 	$00EF
		CPX 	bak08

		DAA 			; inh

		DEC 	A		; accx
		DEC 	B

		DEC 	X		; ndx
		DEC 	$89,X
		DEC 	$00AB, X
		DEC 	bak08,X
		DEC 	fwd08, X

		DEC 	$0021	; ext
		DEC 	$D101
		DEC 	bak08
		DEC 	bak16
		DEC 	fwd16
		DEC 	fwd08

		DECA			; acc

		DECB			; acc

		DES 			; inh

		DEX 			; inh

		EOR 	A #$80	; dual imm
		EOR 	A #bak08
		EOR 	A $32	; dual dir
		EOR 	A bak08
		EOR 	A $D101	; dual ext
		EOR 	A bak16
		EOR 	A fwd16
		EOR 	A X		; dual ndx
		EOR 	A $89,X
		EOR 	A $00AB, X
		EOR 	A bak08, X
		EOR 	A fwd08,X

		EOR 	B #$80	; dual imm
		EOR 	B #bak08
		EOR 	B $32	; dual dir
		EOR 	B bak08
		EOR 	B $D101	; dual ext
		EOR 	B bak16
		EOR 	B fwd16
		EOR 	B X		; dual ndx
		EOR 	B $89,X
		EOR 	B $00AB, X
		EOR 	B bak08, X
		EOR 	B fwd08,X

		EORA	$32		; dir
		EORA	$00EF
		EORA	bak08

		EORA	$0021	; (ext -> dir)
		EORA	$D101	; ext
		EORA	bak08	; (ext -> dir)
		EORA	bak16	; ext
		EORA	fwd16
		EORA	fwd08

		EORA	X		; ndx
		EORA	$89,X
		EORA	$00AB, X
		EORA	bak08,X
		EORA	fwd08, X

		EORA	#$80	; imm
		EORA	#bak08
		EORA	#fwd08

		EORB	$32		; dir
		EORB	$00EF
		EORB	bak08

		EORB	#$80	; imm
		EORB	#bak08
		EORB	#fwd08

		EORB	X		; ndx
		EORB	$89,X
		EORB	$00AB, X
		EORB	bak08,X
		EORB	fwd08, X

		EORB	$0021	; (ext -> dir)
		EORB	$D101	; ext
		EORB	bak08	; (ext -> dir)
		EORB	bak16	; ext
		EORB	fwd16
		EORB	fwd08

		INC 	X		; ndx
		INC 	$89,X
		INC 	$00AB, X
		INC 	bak08,X
		INC 	fwd08, X

		INC 	$0021	; ext
		INC 	$D101
		INC 	bak08
		INC 	bak16
		INC 	fwd16
		INC 	fwd08

		INC 	A		; accx
		INC 	B

		INCA			; acc

		INCB			; acc

		INS 			; inh

		INX 			; inh

		JMP 	X		; ndx
		JMP 	$89,X
		JMP 	$00AB, X
		JMP 	bak08,X
		JMP 	fwd08, X

		JMP 	$0021	; ext
		JMP 	$D101
		JMP 	bak08
		JMP 	bak16
		JMP 	fwd16
		JMP 	fwd08

		JSR 	$0021	; ext
		JSR 	$D101
		JSR 	bak08
		JSR 	bak16
		JSR 	fwd16
		JSR 	fwd08

		JSR 	X		; ndx
		JSR 	$89,X
		JSR 	$00AB, X
		JSR 	bak08,X
		JSR 	fwd08, X

		LDA 	A #$80	; dual imm
		LDA 	A #bak08
		LDA 	A $32	; dual dir
		LDA 	A bak08
		LDA 	A $D101	; dual ext
		LDA 	A bak16
		LDA 	A fwd16
		LDA 	A X		; dual ndx
		LDA 	A $89,X
		LDA 	A $00AB, X
		LDA 	A bak08, X
		LDA 	A fwd08,X

		LDA 	B #$80	; dual imm
		LDA 	B #bak08
		LDA 	B $32	; dual dir
		LDA 	B bak08
		LDA 	B $D101	; dual ext
		LDA 	B bak16
		LDA 	B fwd16
		LDA 	B X		; dual ndx
		LDA 	B $89,X
		LDA 	B $00AB, X
		LDA 	B bak08, X
		LDA 	B fwd08,X

		LDAA	#$80	; imm
		LDAA	#bak08
		LDAA	#fwd08

		LDAA	X		; ndx
		LDAA	$89,X
		LDAA	$00AB, X
		LDAA	bak08,X
		LDAA	fwd08, X

		LDAA	$0021	; (ext -> dir)
		LDAA	$D101	; ext
		LDAA	bak08	; (ext -> dir)
		LDAA	bak16	; ext
		LDAA	fwd16
		LDAA	fwd08

		LDAA	$32		; dir
		LDAA	$00EF
		LDAA	bak08

		LDAB	$0021	; (ext -> dir)
		LDAB	$D101	; ext
		LDAB	bak08	; (ext -> dir)
		LDAB	bak16	; ext
		LDAB	fwd16
		LDAB	fwd08

		LDAB	$32		; dir
		LDAB	$00EF
		LDAB	bak08

		LDAB	X		; ndx
		LDAB	$89,X
		LDAB	$00AB, X
		LDAB	bak08,X
		LDAB	fwd08, X

		LDAB	#$80	; imm
		LDAB	#bak08
		LDAB	#fwd08

		LDS 	#$80	; imm
		LDS 	#bak08
		LDS 	#fwd08

		LDS 	$32		; dir
		LDS 	$00EF
		LDS 	bak08

		LDS 	X		; ndx
		LDS 	$89,X
		LDS 	$00AB, X
		LDS 	bak08,X
		LDS 	fwd08, X

		LDS 	$0021	; (ext -> dir)
		LDS 	$D101	; ext
		LDS 	bak08	; (ext -> dir)
		LDS 	bak16	; ext
		LDS 	fwd16
		LDS 	fwd08

		LDX 	X		; ndx
		LDX 	$89,X
		LDX 	$00AB, X
		LDX 	bak08,X
		LDX 	fwd08, X

		LDX 	#$80	; imm
		LDX 	#bak08
		LDX 	#fwd08

		LDX 	$32		; dir
		LDX 	$00EF
		LDX 	bak08

		LDX 	$0021	; (ext -> dir)
		LDX 	$D101	; ext
		LDX 	bak08	; (ext -> dir)
		LDX 	bak16	; ext
		LDX 	fwd16
		LDX 	fwd08

		LSR 	A		; accx
		LSR 	B

		LSR 	X		; ndx
		LSR 	$89,X
		LSR 	$00AB, X
		LSR 	bak08,X
		LSR 	fwd08, X

		LSR 	$0021	; ext
		LSR 	$D101
		LSR 	bak08
		LSR 	bak16
		LSR 	fwd16
		LSR 	fwd08

		LSRA			; acc

		LSRB			; acc

		NEG 	$0021	; ext
		NEG 	$D101
		NEG 	bak08
		NEG 	bak16
		NEG 	fwd16
		NEG 	fwd08

		NEG 	A		; accx
		NEG 	B

		NEG 	X		; ndx
		NEG 	$89,X
		NEG 	$00AB, X
		NEG 	bak08,X
		NEG 	fwd08, X

		NEGA			; acc

		NEGB			; acc

		NOP 			; inh

		ORA 	A #$80	; dual imm
		ORA 	A #bak08
		ORA 	A $32	; dual dir
		ORA 	A bak08
		ORA 	A $D101	; dual ext
		ORA 	A bak16
		ORA 	A fwd16
		ORA 	A X		; dual ndx
		ORA 	A $89,X
		ORA 	A $00AB, X
		ORA 	A bak08, X
		ORA 	A fwd08,X

		ORA 	B #$80	; dual imm
		ORA 	B #bak08
		ORA 	B $32	; dual dir
		ORA 	B bak08
		ORA 	B $D101	; dual ext
		ORA 	B bak16
		ORA 	B fwd16
		ORA 	B X		; dual ndx
		ORA 	B $89,X
		ORA 	B $00AB, X
		ORA 	B bak08, X
		ORA 	B fwd08,X

		ORAA	$32		; dir
		ORAA	$00EF
		ORAA	bak08

		ORAA	#$80	; imm
		ORAA	#bak08
		ORAA	#fwd08

		ORAA	$0021	; (ext -> dir)
		ORAA	$D101	; ext
		ORAA	bak08	; (ext -> dir)
		ORAA	bak16	; ext
		ORAA	fwd16
		ORAA	fwd08

		ORAA	X		; ndx
		ORAA	$89,X
		ORAA	$00AB, X
		ORAA	bak08,X
		ORAA	fwd08, X

		ORAB	X		; ndx
		ORAB	$89,X
		ORAB	$00AB, X
		ORAB	bak08,X
		ORAB	fwd08, X

		ORAB	$0021	; (ext -> dir)
		ORAB	$D101	; ext
		ORAB	bak08	; (ext -> dir)
		ORAB	bak16	; ext
		ORAB	fwd16
		ORAB	fwd08

		ORAB	#$80	; imm
		ORAB	#bak08
		ORAB	#fwd08

		ORAB	$32		; dir
		ORAB	$00EF
		ORAB	bak08

		PSH 	A		; accx
		PSH 	B

		PSHA			; acc

		PSHB			; acc

		PUL 	A		; accx
		PUL 	B

		PULA			; acc

		PULB			; acc

		ROL 	A		; accx
		ROL 	B

		ROL 	X		; ndx
		ROL 	$89,X
		ROL 	$00AB, X
		ROL 	bak08,X
		ROL 	fwd08, X

		ROL 	$0021	; ext
		ROL 	$D101
		ROL 	bak08
		ROL 	bak16
		ROL 	fwd16
		ROL 	fwd08

		ROLA			; acc

		ROLB			; acc

		ROR 	X		; ndx
		ROR 	$89,X
		ROR 	$00AB, X
		ROR 	bak08,X
		ROR 	fwd08, X

		ROR 	A		; accx
		ROR 	B

		ROR 	$0021	; ext
		ROR 	$D101
		ROR 	bak08
		ROR 	bak16
		ROR 	fwd16
		ROR 	fwd08

		RORA			; acc

		RORB			; acc

		RTI 			; inh

		RTS 			; inh

		SBA 			; inh

		SBC 	A #$80	; dual imm
		SBC 	A #bak08
		SBC 	A $32	; dual dir
		SBC 	A bak08
		SBC 	A $D101	; dual ext
		SBC 	A bak16
		SBC 	A fwd16
		SBC 	A X		; dual ndx
		SBC 	A $89,X
		SBC 	A $00AB, X
		SBC 	A bak08, X
		SBC 	A fwd08,X

		SBC 	B #$80	; dual imm
		SBC 	B #bak08
		SBC 	B $32	; dual dir
		SBC 	B bak08
		SBC 	B $D101	; dual ext
		SBC 	B bak16
		SBC 	B fwd16
		SBC 	B X		; dual ndx
		SBC 	B $89,X
		SBC 	B $00AB, X
		SBC 	B bak08, X
		SBC 	B fwd08,X

		SBCA	#$80	; imm
		SBCA	#bak08
		SBCA	#fwd08

		SBCA	$32		; dir
		SBCA	$00EF
		SBCA	bak08

		SBCA	X		; ndx
		SBCA	$89,X
		SBCA	$00AB, X
		SBCA	bak08,X
		SBCA	fwd08, X

		SBCA	$0021	; (ext -> dir)
		SBCA	$D101	; ext
		SBCA	bak08	; (ext -> dir)
		SBCA	bak16	; ext
		SBCA	fwd16
		SBCA	fwd08

		SBCB	$32		; dir
		SBCB	$00EF
		SBCB	bak08

		SBCB	#$80	; imm
		SBCB	#bak08
		SBCB	#fwd08

		SBCB	X		; ndx
		SBCB	$89,X
		SBCB	$00AB, X
		SBCB	bak08,X
		SBCB	fwd08, X

		SBCB	$0021	; (ext -> dir)
		SBCB	$D101	; ext
		SBCB	bak08	; (ext -> dir)
		SBCB	bak16	; ext
		SBCB	fwd16
		SBCB	fwd08

		SEC 			; inh

		SEI 			; inh

		SEV 			; inh

		STA 	A $32	; dual dir
		STA 	A bak08
		STA 	A $D101	; dual ext
		STA 	A bak16
		STA 	A fwd16
		STA 	A X		; dual ndx
		STA 	A $89,X
		STA 	A $00AB, X
		STA 	A bak08, X
		STA 	A fwd08,X

		STA 	B $32	; dual dir
		STA 	B bak08
		STA 	B $D101	; dual ext
		STA 	B bak16
		STA 	B fwd16
		STA 	B X		; dual ndx
		STA 	B $89,X
		STA 	B $00AB, X
		STA 	B bak08, X
		STA 	B fwd08,X

		STAA	X		; ndx
		STAA	$89,X
		STAA	$00AB, X
		STAA	bak08,X
		STAA	fwd08, X

		STAA	$32		; dir
		STAA	$00EF
		STAA	bak08

		STAA	$0021	; (ext -> dir)
		STAA	$D101	; ext
		STAA	bak08	; (ext -> dir)
		STAA	bak16	; ext
		STAA	fwd16
		STAA	fwd08

		STAB	$32		; dir
		STAB	$00EF
		STAB	bak08

		STAB	$0021	; (ext -> dir)
		STAB	$D101	; ext
		STAB	bak08	; (ext -> dir)
		STAB	bak16	; ext
		STAB	fwd16
		STAB	fwd08

		STAB	X		; ndx
		STAB	$89,X
		STAB	$00AB, X
		STAB	bak08,X
		STAB	fwd08, X

		STS 	$32		; dir
		STS 	$00EF
		STS 	bak08

		STS 	X		; ndx
		STS 	$89,X
		STS 	$00AB, X
		STS 	bak08,X
		STS 	fwd08, X

		STS 	$0021	; (ext -> dir)
		STS 	$D101	; ext
		STS 	bak08	; (ext -> dir)
		STS 	bak16	; ext
		STS 	fwd16
		STS 	fwd08

		STX 	X		; ndx
		STX 	$89,X
		STX 	$00AB, X
		STX 	bak08,X
		STX 	fwd08, X

		STX 	$32		; dir
		STX 	$00EF
		STX 	bak08

		STX 	$0021	; (ext -> dir)
		STX 	$D101	; ext
		STX 	bak08	; (ext -> dir)
		STX 	bak16	; ext
		STX 	fwd16
		STX 	fwd08

		SUB 	A #$80	; dual imm
		SUB 	A #bak08
		SUB 	A $32	; dual dir
		SUB 	A bak08
		SUB 	A $D101	; dual ext
		SUB 	A bak16
		SUB 	A fwd16
		SUB 	A X		; dual ndx
		SUB 	A $89,X
		SUB 	A $00AB, X
		SUB 	A bak08, X
		SUB 	A fwd08,X

		SUB 	B #$80	; dual imm
		SUB 	B #bak08
		SUB 	B $32	; dual dir
		SUB 	B bak08
		SUB 	B $D101	; dual ext
		SUB 	B bak16
		SUB 	B fwd16
		SUB 	B X		; dual ndx
		SUB 	B $89,X
		SUB 	B $00AB, X
		SUB 	B bak08, X
		SUB 	B fwd08,X

		SUBA	X		; ndx
		SUBA	$89,X
		SUBA	$00AB, X
		SUBA	bak08,X
		SUBA	fwd08, X

		SUBA	#$80	; imm
		SUBA	#bak08
		SUBA	#fwd08

		SUBA	$32		; dir
		SUBA	$00EF
		SUBA	bak08

		SUBA	$0021	; (ext -> dir)
		SUBA	$D101	; ext
		SUBA	bak08	; (ext -> dir)
		SUBA	bak16	; ext
		SUBA	fwd16
		SUBA	fwd08

		SUBB	$0021	; (ext -> dir)
		SUBB	$D101	; ext
		SUBB	bak08	; (ext -> dir)
		SUBB	bak16	; ext
		SUBB	fwd16
		SUBB	fwd08

		SUBB	X		; ndx
		SUBB	$89,X
		SUBB	$00AB, X
		SUBB	bak08,X
		SUBB	fwd08, X

		SUBB	$32		; dir
		SUBB	$00EF
		SUBB	bak08

		SUBB	#$80	; imm
		SUBB	#bak08
		SUBB	#fwd08

		SWI 			; inh

		TAB 			; inh

		TAP 			; inh

		TBA 			; inh

		TPA 			; inh

		TST 	X		; ndx
		TST 	$89,X
		TST 	$00AB, X
		TST 	bak08,X
		TST 	fwd08, X

		TST 	A		; accx
		TST 	B

		TST 	$0021	; ext
		TST 	$D101
		TST 	bak08
		TST 	bak16
		TST 	fwd16
		TST 	fwd08

		TSTA			; acc

		TSTB			; acc

		TSX 			; inh

		TXS 			; inh

		WAI 			; inh


; -------------------------------

; forward reference

fwd32	.equ	$89ABCDEF
fwd24	.equ	$456789
fwd16	.equ	$1234
fwd08	.equ	$12

; -------------------------------

		.end

; -------------------------------

; 959 pass
; 0 fail
