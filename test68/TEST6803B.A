; Hobby Cross-Assembler HXA68 Test 6803b
; 6803\Instruction Set
; ok: 6803 Group Rep Instructions

; generated by MODE68.PY - Sat Jun 15 18:03:32 2024

; no errors to detect

; -------------------------------

		.listfile
		.errfile

		.maxerr	10000		; increase default count

; -------------------------------

		.cpu	6803
		.org	$1000

; -------------------------------

; backward reference

bak08	.equ	$12
bak16	.equ	$1234
bak24	.equ	$456789
bak32	.equ	$89ABCDEF

; -------------------------------

		; check ABA
		; 32 mnemonics with modes ['inh']
		; ABX
		; ASLD
		; CBA
		; CLC
		; CLI
		; CLV
		; DAA
		; DES
		; DEX
		; INS
		; INX
		; LSLD
		; LSRD
		; MUL
		; NOP
		; PSHX
		; PULX
		; RTI
		; RTS
		; SBA
		; SEC
		; SEI
		; SEV
		; SWI
		; TAB
		; TAP
		; TBA
		; TPA
		; TSX
		; TXS
		; WAI

		ABA 			; inh


; -------------------------------

		; check ADC
		; 11 mnemonics with modes ['dual']
		; ADD
		; AND
		; BIT
		; CMP
		; EOR
		; LDA
		; ORA
		; SBC
		; STA
		; SUB

		ADC 	A $32	; dual dir
		ADC 	A bak08

		ADC 	A $D101	; dual ext
		ADC 	A bak16
		ADC 	A fwd16

		ADC 	A #$80	; dual imm
		ADC 	A #bak08

		ADC 	A X		; dual ndx
		ADC 	A $89,X
		ADC 	A $00AB, X
		ADC 	A bak08, X
		ADC 	A fwd08,X

		ADC 	B $32	; dual dir
		ADC 	B bak08

		ADC 	B $D101	; dual ext
		ADC 	B bak16
		ADC 	B fwd16

		ADC 	B #$80	; dual imm
		ADC 	B #bak08

		ADC 	B X		; dual ndx
		ADC 	B $89,X
		ADC 	B $00AB, X
		ADC 	B bak08, X
		ADC 	B fwd08,X


; -------------------------------

		; check ADCA
		; 26 mnemonics with modes ['dir', 'ext', 'imm', 'ndx']
		; ADCB
		; ADDA
		; ADDB
		; ADDD
		; ANDA
		; ANDB
		; BITA
		; BITB
		; CMPA
		; CMPB
		; CPX
		; EORA
		; EORB
		; LDAA
		; LDAB
		; LDD
		; LDS
		; LDX
		; ORAA
		; ORAB
		; SBCA
		; SBCB
		; SUBA
		; SUBB
		; SUBD

		ADCA	$32		; dir
		ADCA	$00EF
		ADCA	bak08

		ADCA	$0021	; (ext -> dir)
		ADCA	$D101	; ext
		ADCA	bak08	; (ext -> dir)
		ADCA	bak16	; ext
		ADCA	fwd16
		ADCA	fwd08

		ADCA	#$80	; imm
		ADCA	#bak08
		ADCA	#fwd08

		ADCA	X		; ndx
		ADCA	$89,X
		ADCA	$00AB, X
		ADCA	bak08,X
		ADCA	fwd08, X


; -------------------------------

		; check ASL
		; 11 mnemonics with modes ['accx', 'ext', 'ndx']
		; ASR
		; CLR
		; COM
		; DEC
		; INC
		; LSR
		; NEG
		; ROL
		; ROR
		; TST

		ASL 	A		; accx
		ASL 	B

		ASL 	$0021	; ext
		ASL 	$D101
		ASL 	bak08
		ASL 	bak16
		ASL 	fwd16
		ASL 	fwd08

		ASL 	X		; ndx
		ASL 	$89,X
		ASL 	$00AB, X
		ASL 	bak08,X
		ASL 	fwd08, X


; -------------------------------

		; check ASLA
		; 26 mnemonics with modes ['acc']
		; ASLB
		; ASRA
		; ASRB
		; CLRA
		; CLRB
		; COMA
		; COMB
		; DECA
		; DECB
		; INCA
		; INCB
		; LSRA
		; LSRB
		; NEGA
		; NEGB
		; PSHA
		; PSHB
		; PULA
		; PULB
		; ROLA
		; ROLB
		; RORA
		; RORB
		; TSTA
		; TSTB

		ASLA			; acc


; -------------------------------

		; check BCC
		; 19 mnemonics with modes ['rel']
		; BCS
		; BEQ
		; BGE
		; BGT
		; BHI
		; BHS
		; BLE
		; BLO
		; BLS
		; BLT
		; BMI
		; BNE
		; BPL
		; BRA
		; BRN
		; BSR
		; BVC
		; BVS

:	; backward ref for BCC

		BCC 	:+	; rel
		BCC 	:-

:	; forward ref for BCC


; -------------------------------

		; check JMP
		; 2 mnemonics with modes ['ext', 'ndx']
		; LSL

		JMP 	$0021	; ext
		JMP 	$D101
		JMP 	bak08
		JMP 	bak16
		JMP 	fwd16
		JMP 	fwd08

		JMP 	X		; ndx
		JMP 	$89,X
		JMP 	$00AB, X
		JMP 	bak08,X
		JMP 	fwd08, X


; -------------------------------

		; check JSR
		; 6 mnemonics with modes ['dir', 'ext', 'ndx']
		; STAA
		; STAB
		; STD
		; STS
		; STX

		JSR 	$32		; dir
		JSR 	$00EF
		JSR 	bak08

		JSR 	$0021	; (ext -> dir)
		JSR 	$D101	; ext
		JSR 	bak08	; (ext -> dir)
		JSR 	bak16	; ext
		JSR 	fwd16
		JSR 	fwd08

		JSR 	X		; ndx
		JSR 	$89,X
		JSR 	$00AB, X
		JSR 	bak08,X
		JSR 	fwd08, X


; -------------------------------

		; check PSH
		; 2 mnemonics with modes ['accx']
		; PUL

		PSH 	A		; accx
		PSH 	B


; -------------------------------

; forward reference

fwd32	.equ	$89ABCDEF
fwd24	.equ	$456789
fwd16	.equ	$1234
fwd08	.equ	$12

; -------------------------------

		.end

; -------------------------------

; 85 pass
; 0 fail
