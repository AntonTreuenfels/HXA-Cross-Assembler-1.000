; Hobby Cross-Assembler HXA68 Error Test 6800g
; 6800\Instruction Set
; error: Group rep instructions, out of range values, caught second pass

; generated by MODE68.PY - Wed Jun 12 12:17:31 2024


; warning(s):

; errors(s): 17
; - value too large
; - value too small

; fatal:

; -------------------------------

		.listfile
		.errfile

		.maxerr	10000		; increase default count

; -------------------------------

		.cpu	6800
		.org	$1000

; -------------------------------

; backward reference

bak08	.equ	$12
bak16	.equ	$1234
bak24	.equ	$456789
bak32	.equ	$89ABCDEF

; -------------------------------

		; check ADCA
		; 23 mnemonics with modes ['dir', 'ext', 'imm', 'ndx']
		; ADCB
		; ADDA
		; ADDB
		; ANDA
		; ANDB
		; BITA
		; BITB
		; CMPA
		; CMPB
		; CPX
		; EORA
		; EORB
		; LDAA
		; LDAB
		; LDS
		; LDX
		; ORAA
		; ORAB
		; SBCA
		; SBCB
		; SUBA
		; SUBB

:	; backward ref for adca

		adca	fwd24	; (rel -> dir/ext)
		adca	bak24

:	; forward ref for adca

		; check ASL
		; 11 mnemonics with modes ['accx', 'ext', 'ndx']
		; ASR
		; CLR
		; COM
		; DEC
		; INC
		; LSR
		; NEG
		; ROL
		; ROR
		; TST

:	; backward ref for asl

		asl 	fwd24	; (rel -> dir/ext)
		asl 	bak24

:	; forward ref for asl

		; check BCC
		; 16 mnemonics with modes ['rel']
		; BCS
		; BEQ
		; BGE
		; BGT
		; BHI
		; BLE
		; BLS
		; BLT
		; BMI
		; BNE
		; BPL
		; BRA
		; BSR
		; BVC
		; BVS

		bcc 	$32		; (dir -> rel)
		bcc 	$00EF
		bcc 	bak08

		bcc 	$0021	; (ext -> rel)
		bcc 	$D101
		bcc 	bak08
		bcc 	bak16
		bcc 	fwd16
		bcc 	fwd08

		; check JMP
		; 2 mnemonics with modes ['ext', 'ndx']
		; JSR

:	; backward ref for jmp

		jmp 	fwd24	; (rel -> dir/ext)
		jmp 	bak24

:	; forward ref for jmp

		; check STAA
		; 4 mnemonics with modes ['dir', 'ext', 'ndx']
		; STAB
		; STS
		; STX

:	; backward ref for staa

		staa	fwd24	; (rel -> dir/ext)
		staa	bak24

:	; forward ref for staa


; -------------------------------

; forward reference

fwd32	.equ	$89ABCDEF
fwd24	.equ	$456789
fwd16	.equ	$1234
fwd08	.equ	$12

; -------------------------------

		.end

; -------------------------------

; 17 pass
; 0 fail
