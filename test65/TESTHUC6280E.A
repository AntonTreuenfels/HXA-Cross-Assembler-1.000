; Hobby Cross-Assembler HXA65 Error Test HUC6280e
; HUC6280\Instruction Set
; error: HUC6280 All Instructions, All Address Modes

; generated by MODE65.PY - Fri Nov 29 15:28:15 2024


; warning(s):

; errors(s):

; fatal:

; -------------------------------

		.listfile
		.errfile

		.maxerr	10000		; increase default count

; -------------------------------

		.cpu	HUC6280
		.org	$1000

; -------------------------------

; backward reference

bak08	.equ	$12
bak16	.equ	$1234
bak24	.equ	$456789
bak32	.equ	$89ABCDEF

; -------------------------------

:	; backward ref for ADC

		.echo **PASS  ADC  ab

		ADC 	$1234
		ADC 	bak16
		ADC 	fwd16

		.echo **PASS  ADC  abi  (as zpi)

		Adc 	($1234)
		Adc 	(bak16)
		Adc 	(fwd16)

		.echo **FAIL  ADC  abimm

		adc 	#12, $1234
		adc 	#bak08, bak16
		adc 	#$82, fwd16

		.echo **FAIL  ADC  abimx

		adc 	#12, $1234,x
		adc 	#bak08, bak16,X
		adc 	#$82, fwd16,x

		.echo **PASS  ADC  abx

		ADC 	$1234,X
		ADC 	bak16,x
		ADC 	fwd16,X

		.echo **FAIL  ADC  abxfr

		adc 	$32, $1234, $5678
		adc 	$1234, bak08, fwd08
		adc 	fwd08, bak16, fwd16

		.echo **PASS  ADC  abxi  (as zpxi)

		Adc 	($1234,X)
		Adc 	(bak16,x)
		Adc 	(fwd16,X)

		.echo **PASS  ADC  aby

		ADC 	$1234,Y
		ADC 	bak16,y
		ADC 	fwd16,Y

		.echo **FAIL  ADC  acc

		adc 	A
		adc 	a

		.echo **PASS  ADC  imm

		ADC 	#$12
		ADC 	#bak08
		ADC 	#fwd08

		.echo **FAIL  ADC  imp

		adc 

		.echo **PASS  ADC  pcr  (as ab)

		Adc 	:+
		Adc 	-
		Adc 	+
		Adc 	:-

		.echo **PASS  ADC  zp

		ADC 	$12
		ADC 	bak08
		Adc 	fwd08   	; (absolute)

		.echo **PASS  ADC  zpi

		ADC 	($12)
		ADC 	(bak08)
		ADC 	(fwd08)

		.echo **FAIL  ADC  zpimm

		adc 	#12, $34
		adc 	#bak08, bak08
		adc 	#$82, fwd08

		.echo **FAIL  ADC  zpimx

		adc 	#12, $34,X
		adc 	#bak08, bak08,x
		adc 	#$82, fwd08,X

		.echo **PASS  ADC  zpiy

		ADC 	($12),Y
		ADC 	(bak08),y
		ADC 	(fwd08),Y

		.echo **FAIL  ADC  zptr

		adc 	$12, :+
		adc 	bak08, -
		adc 	fwd08, +

		.echo **PASS  ADC  zpx

		ADC 	$12,X
		ADC 	bak08,x
		Adc 	fwd08,X 	; (absolute)

		.echo **PASS  ADC  zpxi

		ADC 	($12,X)
		ADC 	(bak08,x)
		ADC 	(fwd08,X)

		.echo **PASS  ADC  zpy  (as aby)

		Adc 	$12,Y
		Adc 	bak08,y
		Adc 	fwd08,Y


:	; forward ref for ADC

; -------------------------------

:	; backward ref for AND

		.echo **PASS  AND  ab

		AND 	$1234
		AND 	bak16
		AND 	fwd16

		.echo **PASS  AND  abi  (as zpi)

		And 	($1234)
		And 	(bak16)
		And 	(fwd16)

		.echo **FAIL  AND  abimm

		and 	#12, $1234
		and 	#bak08, bak16
		and 	#$82, fwd16

		.echo **FAIL  AND  abimx

		and 	#12, $1234,x
		and 	#bak08, bak16,X
		and 	#$82, fwd16,x

		.echo **PASS  AND  abx

		AND 	$1234,X
		AND 	bak16,x
		AND 	fwd16,X

		.echo **FAIL  AND  abxfr

		and 	$32, $1234, $5678
		and 	$1234, bak08, fwd08
		and 	fwd08, bak16, fwd16

		.echo **PASS  AND  abxi  (as zpxi)

		And 	($1234,X)
		And 	(bak16,x)
		And 	(fwd16,X)

		.echo **PASS  AND  aby

		AND 	$1234,Y
		AND 	bak16,y
		AND 	fwd16,Y

		.echo **FAIL  AND  acc

		and 	A
		and 	a

		.echo **PASS  AND  imm

		AND 	#$12
		AND 	#bak08
		AND 	#fwd08

		.echo **FAIL  AND  imp

		and 

		.echo **PASS  AND  pcr  (as ab)

		And 	:+
		And 	-
		And 	+
		And 	:-

		.echo **PASS  AND  zp

		AND 	$12
		AND 	bak08
		And 	fwd08   	; (absolute)

		.echo **PASS  AND  zpi

		AND 	($12)
		AND 	(bak08)
		AND 	(fwd08)

		.echo **FAIL  AND  zpimm

		and 	#12, $34
		and 	#bak08, bak08
		and 	#$82, fwd08

		.echo **FAIL  AND  zpimx

		and 	#12, $34,X
		and 	#bak08, bak08,x
		and 	#$82, fwd08,X

		.echo **PASS  AND  zpiy

		AND 	($12),Y
		AND 	(bak08),y
		AND 	(fwd08),Y

		.echo **FAIL  AND  zptr

		and 	$12, :+
		and 	bak08, -
		and 	fwd08, +

		.echo **PASS  AND  zpx

		AND 	$12,X
		AND 	bak08,x
		And 	fwd08,X 	; (absolute)

		.echo **PASS  AND  zpxi

		AND 	($12,X)
		AND 	(bak08,x)
		AND 	(fwd08,X)

		.echo **PASS  AND  zpy  (as aby)

		And 	$12,Y
		And 	bak08,y
		And 	fwd08,Y


:	; forward ref for AND

; -------------------------------

:	; backward ref for ASL

		.echo **PASS  ASL  ab

		ASL 	$1234
		ASL 	bak16
		ASL 	fwd16

		.echo **FAIL  ASL  abi

		asl 	($1234)
		asl 	(bak16)
		asl 	(fwd16)

		.echo **FAIL  ASL  abimm

		asl 	#12, $1234
		asl 	#bak08, bak16
		asl 	#$82, fwd16

		.echo **FAIL  ASL  abimx

		asl 	#12, $1234,x
		asl 	#bak08, bak16,X
		asl 	#$82, fwd16,x

		.echo **PASS  ASL  abx

		ASL 	$1234,X
		ASL 	bak16,x
		ASL 	fwd16,X

		.echo **FAIL  ASL  abxfr

		asl 	$32, $1234, $5678
		asl 	$1234, bak08, fwd08
		asl 	fwd08, bak16, fwd16

		.echo **FAIL  ASL  abxi

		asl 	($1234,X)
		asl 	(bak16,x)
		asl 	(fwd16,X)

		.echo **FAIL  ASL  aby

		asl 	$1234,Y
		asl 	bak16,y
		asl 	fwd16,Y

		.echo **PASS  ASL  acc

		ASL 	A
		ASL 	a

		.echo **FAIL  ASL  imm

		asl 	#$12
		asl 	#bak08
		asl 	#fwd08

		.echo **PASS  ASL  imp

		ASL 

		.echo **PASS  ASL  pcr  (as ab)

		Asl 	:+
		Asl 	-
		Asl 	+
		Asl 	:-

		.echo **PASS  ASL  zp

		ASL 	$12
		ASL 	bak08
		Asl 	fwd08   	; (absolute)

		.echo **FAIL  ASL  zpi

		asl 	($12)
		asl 	(bak08)
		asl 	(fwd08)

		.echo **FAIL  ASL  zpimm

		asl 	#12, $34
		asl 	#bak08, bak08
		asl 	#$82, fwd08

		.echo **FAIL  ASL  zpimx

		asl 	#12, $34,X
		asl 	#bak08, bak08,x
		asl 	#$82, fwd08,X

		.echo **FAIL  ASL  zpiy

		asl 	($12),Y
		asl 	(bak08),y
		asl 	(fwd08),Y

		.echo **FAIL  ASL  zptr

		asl 	$12, :+
		asl 	bak08, -
		asl 	fwd08, +

		.echo **PASS  ASL  zpx

		ASL 	$12,X
		ASL 	bak08,x
		Asl 	fwd08,X 	; (absolute)

		.echo **FAIL  ASL  zpxi

		asl 	($12,X)
		asl 	(bak08,x)
		asl 	(fwd08,X)

		.echo **FAIL  ASL  zpy

		asl 	$12,Y
		asl 	bak08,y
		asl 	fwd08,Y


:	; forward ref for ASL

; -------------------------------

:	; backward ref for BBR0

		.echo **FAIL  BBR0  ab

		bbr0	$1234
		bbr0	bak16
		bbr0	fwd16

		.echo **FAIL  BBR0  abi

		bbr0	($1234)
		bbr0	(bak16)
		bbr0	(fwd16)

		.echo **FAIL  BBR0  abimm

		bbr0	#12, $1234
		bbr0	#bak08, bak16
		bbr0	#$82, fwd16

		.echo **FAIL  BBR0  abimx

		bbr0	#12, $1234,x
		bbr0	#bak08, bak16,X
		bbr0	#$82, fwd16,x

		.echo **FAIL  BBR0  abx

		bbr0	$1234,X
		bbr0	bak16,x
		bbr0	fwd16,X

		.echo **FAIL  BBR0  abxfr

		bbr0	$32, $1234, $5678
		bbr0	$1234, bak08, fwd08
		bbr0	fwd08, bak16, fwd16

		.echo **FAIL  BBR0  abxi

		bbr0	($1234,X)
		bbr0	(bak16,x)
		bbr0	(fwd16,X)

		.echo **FAIL  BBR0  aby

		bbr0	$1234,Y
		bbr0	bak16,y
		bbr0	fwd16,Y

		.echo **FAIL  BBR0  acc

		bbr0	A
		bbr0	a

		.echo **FAIL  BBR0  imm

		bbr0	#$12
		bbr0	#bak08
		bbr0	#fwd08

		.echo **FAIL  BBR0  imp

		bbr0

		.echo **FAIL  BBR0  pcr

		bbr0	:+
		bbr0	-
		bbr0	+
		bbr0	:-

		.echo **FAIL  BBR0  zp

		bbr0	$12
		bbr0	bak08
		bbr0	fwd08

		.echo **FAIL  BBR0  zpi

		bbr0	($12)
		bbr0	(bak08)
		bbr0	(fwd08)

		.echo **FAIL  BBR0  zpimm

		bbr0	#12, $34
		bbr0	#bak08, bak08
		bbr0	#$82, fwd08

		.echo **FAIL  BBR0  zpimx

		bbr0	#12, $34,X
		bbr0	#bak08, bak08,x
		bbr0	#$82, fwd08,X

		.echo **FAIL  BBR0  zpiy

		bbr0	($12),Y
		bbr0	(bak08),y
		bbr0	(fwd08),Y

		.echo **PASS  BBR0  zptr

		BBR0	$12, :+
		BBR0	bak08, -
		BBR0	fwd08, +

		.echo **FAIL  BBR0  zpx

		bbr0	$12,X
		bbr0	bak08,x
		bbr0	fwd08,X

		.echo **FAIL  BBR0  zpxi

		bbr0	($12,X)
		bbr0	(bak08,x)
		bbr0	(fwd08,X)

		.echo **FAIL  BBR0  zpy

		bbr0	$12,Y
		bbr0	bak08,y
		bbr0	fwd08,Y


:	; forward ref for BBR0

; -------------------------------

:	; backward ref for BBR1

		.echo **FAIL  BBR1  ab

		bbr1	$1234
		bbr1	bak16
		bbr1	fwd16

		.echo **FAIL  BBR1  abi

		bbr1	($1234)
		bbr1	(bak16)
		bbr1	(fwd16)

		.echo **FAIL  BBR1  abimm

		bbr1	#12, $1234
		bbr1	#bak08, bak16
		bbr1	#$82, fwd16

		.echo **FAIL  BBR1  abimx

		bbr1	#12, $1234,x
		bbr1	#bak08, bak16,X
		bbr1	#$82, fwd16,x

		.echo **FAIL  BBR1  abx

		bbr1	$1234,X
		bbr1	bak16,x
		bbr1	fwd16,X

		.echo **FAIL  BBR1  abxfr

		bbr1	$32, $1234, $5678
		bbr1	$1234, bak08, fwd08
		bbr1	fwd08, bak16, fwd16

		.echo **FAIL  BBR1  abxi

		bbr1	($1234,X)
		bbr1	(bak16,x)
		bbr1	(fwd16,X)

		.echo **FAIL  BBR1  aby

		bbr1	$1234,Y
		bbr1	bak16,y
		bbr1	fwd16,Y

		.echo **FAIL  BBR1  acc

		bbr1	A
		bbr1	a

		.echo **FAIL  BBR1  imm

		bbr1	#$12
		bbr1	#bak08
		bbr1	#fwd08

		.echo **FAIL  BBR1  imp

		bbr1

		.echo **FAIL  BBR1  pcr

		bbr1	:+
		bbr1	-
		bbr1	+
		bbr1	:-

		.echo **FAIL  BBR1  zp

		bbr1	$12
		bbr1	bak08
		bbr1	fwd08

		.echo **FAIL  BBR1  zpi

		bbr1	($12)
		bbr1	(bak08)
		bbr1	(fwd08)

		.echo **FAIL  BBR1  zpimm

		bbr1	#12, $34
		bbr1	#bak08, bak08
		bbr1	#$82, fwd08

		.echo **FAIL  BBR1  zpimx

		bbr1	#12, $34,X
		bbr1	#bak08, bak08,x
		bbr1	#$82, fwd08,X

		.echo **FAIL  BBR1  zpiy

		bbr1	($12),Y
		bbr1	(bak08),y
		bbr1	(fwd08),Y

		.echo **PASS  BBR1  zptr

		BBR1	$12, :+
		BBR1	bak08, -
		BBR1	fwd08, +

		.echo **FAIL  BBR1  zpx

		bbr1	$12,X
		bbr1	bak08,x
		bbr1	fwd08,X

		.echo **FAIL  BBR1  zpxi

		bbr1	($12,X)
		bbr1	(bak08,x)
		bbr1	(fwd08,X)

		.echo **FAIL  BBR1  zpy

		bbr1	$12,Y
		bbr1	bak08,y
		bbr1	fwd08,Y


:	; forward ref for BBR1

; -------------------------------

:	; backward ref for BBR2

		.echo **FAIL  BBR2  ab

		bbr2	$1234
		bbr2	bak16
		bbr2	fwd16

		.echo **FAIL  BBR2  abi

		bbr2	($1234)
		bbr2	(bak16)
		bbr2	(fwd16)

		.echo **FAIL  BBR2  abimm

		bbr2	#12, $1234
		bbr2	#bak08, bak16
		bbr2	#$82, fwd16

		.echo **FAIL  BBR2  abimx

		bbr2	#12, $1234,x
		bbr2	#bak08, bak16,X
		bbr2	#$82, fwd16,x

		.echo **FAIL  BBR2  abx

		bbr2	$1234,X
		bbr2	bak16,x
		bbr2	fwd16,X

		.echo **FAIL  BBR2  abxfr

		bbr2	$32, $1234, $5678
		bbr2	$1234, bak08, fwd08
		bbr2	fwd08, bak16, fwd16

		.echo **FAIL  BBR2  abxi

		bbr2	($1234,X)
		bbr2	(bak16,x)
		bbr2	(fwd16,X)

		.echo **FAIL  BBR2  aby

		bbr2	$1234,Y
		bbr2	bak16,y
		bbr2	fwd16,Y

		.echo **FAIL  BBR2  acc

		bbr2	A
		bbr2	a

		.echo **FAIL  BBR2  imm

		bbr2	#$12
		bbr2	#bak08
		bbr2	#fwd08

		.echo **FAIL  BBR2  imp

		bbr2

		.echo **FAIL  BBR2  pcr

		bbr2	:+
		bbr2	-
		bbr2	+
		bbr2	:-

		.echo **FAIL  BBR2  zp

		bbr2	$12
		bbr2	bak08
		bbr2	fwd08

		.echo **FAIL  BBR2  zpi

		bbr2	($12)
		bbr2	(bak08)
		bbr2	(fwd08)

		.echo **FAIL  BBR2  zpimm

		bbr2	#12, $34
		bbr2	#bak08, bak08
		bbr2	#$82, fwd08

		.echo **FAIL  BBR2  zpimx

		bbr2	#12, $34,X
		bbr2	#bak08, bak08,x
		bbr2	#$82, fwd08,X

		.echo **FAIL  BBR2  zpiy

		bbr2	($12),Y
		bbr2	(bak08),y
		bbr2	(fwd08),Y

		.echo **PASS  BBR2  zptr

		BBR2	$12, :+
		BBR2	bak08, -
		BBR2	fwd08, +

		.echo **FAIL  BBR2  zpx

		bbr2	$12,X
		bbr2	bak08,x
		bbr2	fwd08,X

		.echo **FAIL  BBR2  zpxi

		bbr2	($12,X)
		bbr2	(bak08,x)
		bbr2	(fwd08,X)

		.echo **FAIL  BBR2  zpy

		bbr2	$12,Y
		bbr2	bak08,y
		bbr2	fwd08,Y


:	; forward ref for BBR2

; -------------------------------

:	; backward ref for BBR3

		.echo **FAIL  BBR3  ab

		bbr3	$1234
		bbr3	bak16
		bbr3	fwd16

		.echo **FAIL  BBR3  abi

		bbr3	($1234)
		bbr3	(bak16)
		bbr3	(fwd16)

		.echo **FAIL  BBR3  abimm

		bbr3	#12, $1234
		bbr3	#bak08, bak16
		bbr3	#$82, fwd16

		.echo **FAIL  BBR3  abimx

		bbr3	#12, $1234,x
		bbr3	#bak08, bak16,X
		bbr3	#$82, fwd16,x

		.echo **FAIL  BBR3  abx

		bbr3	$1234,X
		bbr3	bak16,x
		bbr3	fwd16,X

		.echo **FAIL  BBR3  abxfr

		bbr3	$32, $1234, $5678
		bbr3	$1234, bak08, fwd08
		bbr3	fwd08, bak16, fwd16

		.echo **FAIL  BBR3  abxi

		bbr3	($1234,X)
		bbr3	(bak16,x)
		bbr3	(fwd16,X)

		.echo **FAIL  BBR3  aby

		bbr3	$1234,Y
		bbr3	bak16,y
		bbr3	fwd16,Y

		.echo **FAIL  BBR3  acc

		bbr3	A
		bbr3	a

		.echo **FAIL  BBR3  imm

		bbr3	#$12
		bbr3	#bak08
		bbr3	#fwd08

		.echo **FAIL  BBR3  imp

		bbr3

		.echo **FAIL  BBR3  pcr

		bbr3	:+
		bbr3	-
		bbr3	+
		bbr3	:-

		.echo **FAIL  BBR3  zp

		bbr3	$12
		bbr3	bak08
		bbr3	fwd08

		.echo **FAIL  BBR3  zpi

		bbr3	($12)
		bbr3	(bak08)
		bbr3	(fwd08)

		.echo **FAIL  BBR3  zpimm

		bbr3	#12, $34
		bbr3	#bak08, bak08
		bbr3	#$82, fwd08

		.echo **FAIL  BBR3  zpimx

		bbr3	#12, $34,X
		bbr3	#bak08, bak08,x
		bbr3	#$82, fwd08,X

		.echo **FAIL  BBR3  zpiy

		bbr3	($12),Y
		bbr3	(bak08),y
		bbr3	(fwd08),Y

		.echo **PASS  BBR3  zptr

		BBR3	$12, :+
		BBR3	bak08, -
		BBR3	fwd08, +

		.echo **FAIL  BBR3  zpx

		bbr3	$12,X
		bbr3	bak08,x
		bbr3	fwd08,X

		.echo **FAIL  BBR3  zpxi

		bbr3	($12,X)
		bbr3	(bak08,x)
		bbr3	(fwd08,X)

		.echo **FAIL  BBR3  zpy

		bbr3	$12,Y
		bbr3	bak08,y
		bbr3	fwd08,Y


:	; forward ref for BBR3

; -------------------------------

:	; backward ref for BBR4

		.echo **FAIL  BBR4  ab

		bbr4	$1234
		bbr4	bak16
		bbr4	fwd16

		.echo **FAIL  BBR4  abi

		bbr4	($1234)
		bbr4	(bak16)
		bbr4	(fwd16)

		.echo **FAIL  BBR4  abimm

		bbr4	#12, $1234
		bbr4	#bak08, bak16
		bbr4	#$82, fwd16

		.echo **FAIL  BBR4  abimx

		bbr4	#12, $1234,x
		bbr4	#bak08, bak16,X
		bbr4	#$82, fwd16,x

		.echo **FAIL  BBR4  abx

		bbr4	$1234,X
		bbr4	bak16,x
		bbr4	fwd16,X

		.echo **FAIL  BBR4  abxfr

		bbr4	$32, $1234, $5678
		bbr4	$1234, bak08, fwd08
		bbr4	fwd08, bak16, fwd16

		.echo **FAIL  BBR4  abxi

		bbr4	($1234,X)
		bbr4	(bak16,x)
		bbr4	(fwd16,X)

		.echo **FAIL  BBR4  aby

		bbr4	$1234,Y
		bbr4	bak16,y
		bbr4	fwd16,Y

		.echo **FAIL  BBR4  acc

		bbr4	A
		bbr4	a

		.echo **FAIL  BBR4  imm

		bbr4	#$12
		bbr4	#bak08
		bbr4	#fwd08

		.echo **FAIL  BBR4  imp

		bbr4

		.echo **FAIL  BBR4  pcr

		bbr4	:+
		bbr4	-
		bbr4	+
		bbr4	:-

		.echo **FAIL  BBR4  zp

		bbr4	$12
		bbr4	bak08
		bbr4	fwd08

		.echo **FAIL  BBR4  zpi

		bbr4	($12)
		bbr4	(bak08)
		bbr4	(fwd08)

		.echo **FAIL  BBR4  zpimm

		bbr4	#12, $34
		bbr4	#bak08, bak08
		bbr4	#$82, fwd08

		.echo **FAIL  BBR4  zpimx

		bbr4	#12, $34,X
		bbr4	#bak08, bak08,x
		bbr4	#$82, fwd08,X

		.echo **FAIL  BBR4  zpiy

		bbr4	($12),Y
		bbr4	(bak08),y
		bbr4	(fwd08),Y

		.echo **PASS  BBR4  zptr

		BBR4	$12, :+
		BBR4	bak08, -
		BBR4	fwd08, +

		.echo **FAIL  BBR4  zpx

		bbr4	$12,X
		bbr4	bak08,x
		bbr4	fwd08,X

		.echo **FAIL  BBR4  zpxi

		bbr4	($12,X)
		bbr4	(bak08,x)
		bbr4	(fwd08,X)

		.echo **FAIL  BBR4  zpy

		bbr4	$12,Y
		bbr4	bak08,y
		bbr4	fwd08,Y


:	; forward ref for BBR4

; -------------------------------

:	; backward ref for BBR5

		.echo **FAIL  BBR5  ab

		bbr5	$1234
		bbr5	bak16
		bbr5	fwd16

		.echo **FAIL  BBR5  abi

		bbr5	($1234)
		bbr5	(bak16)
		bbr5	(fwd16)

		.echo **FAIL  BBR5  abimm

		bbr5	#12, $1234
		bbr5	#bak08, bak16
		bbr5	#$82, fwd16

		.echo **FAIL  BBR5  abimx

		bbr5	#12, $1234,x
		bbr5	#bak08, bak16,X
		bbr5	#$82, fwd16,x

		.echo **FAIL  BBR5  abx

		bbr5	$1234,X
		bbr5	bak16,x
		bbr5	fwd16,X

		.echo **FAIL  BBR5  abxfr

		bbr5	$32, $1234, $5678
		bbr5	$1234, bak08, fwd08
		bbr5	fwd08, bak16, fwd16

		.echo **FAIL  BBR5  abxi

		bbr5	($1234,X)
		bbr5	(bak16,x)
		bbr5	(fwd16,X)

		.echo **FAIL  BBR5  aby

		bbr5	$1234,Y
		bbr5	bak16,y
		bbr5	fwd16,Y

		.echo **FAIL  BBR5  acc

		bbr5	A
		bbr5	a

		.echo **FAIL  BBR5  imm

		bbr5	#$12
		bbr5	#bak08
		bbr5	#fwd08

		.echo **FAIL  BBR5  imp

		bbr5

		.echo **FAIL  BBR5  pcr

		bbr5	:+
		bbr5	-
		bbr5	+
		bbr5	:-

		.echo **FAIL  BBR5  zp

		bbr5	$12
		bbr5	bak08
		bbr5	fwd08

		.echo **FAIL  BBR5  zpi

		bbr5	($12)
		bbr5	(bak08)
		bbr5	(fwd08)

		.echo **FAIL  BBR5  zpimm

		bbr5	#12, $34
		bbr5	#bak08, bak08
		bbr5	#$82, fwd08

		.echo **FAIL  BBR5  zpimx

		bbr5	#12, $34,X
		bbr5	#bak08, bak08,x
		bbr5	#$82, fwd08,X

		.echo **FAIL  BBR5  zpiy

		bbr5	($12),Y
		bbr5	(bak08),y
		bbr5	(fwd08),Y

		.echo **PASS  BBR5  zptr

		BBR5	$12, :+
		BBR5	bak08, -
		BBR5	fwd08, +

		.echo **FAIL  BBR5  zpx

		bbr5	$12,X
		bbr5	bak08,x
		bbr5	fwd08,X

		.echo **FAIL  BBR5  zpxi

		bbr5	($12,X)
		bbr5	(bak08,x)
		bbr5	(fwd08,X)

		.echo **FAIL  BBR5  zpy

		bbr5	$12,Y
		bbr5	bak08,y
		bbr5	fwd08,Y


:	; forward ref for BBR5

; -------------------------------

:	; backward ref for BBR6

		.echo **FAIL  BBR6  ab

		bbr6	$1234
		bbr6	bak16
		bbr6	fwd16

		.echo **FAIL  BBR6  abi

		bbr6	($1234)
		bbr6	(bak16)
		bbr6	(fwd16)

		.echo **FAIL  BBR6  abimm

		bbr6	#12, $1234
		bbr6	#bak08, bak16
		bbr6	#$82, fwd16

		.echo **FAIL  BBR6  abimx

		bbr6	#12, $1234,x
		bbr6	#bak08, bak16,X
		bbr6	#$82, fwd16,x

		.echo **FAIL  BBR6  abx

		bbr6	$1234,X
		bbr6	bak16,x
		bbr6	fwd16,X

		.echo **FAIL  BBR6  abxfr

		bbr6	$32, $1234, $5678
		bbr6	$1234, bak08, fwd08
		bbr6	fwd08, bak16, fwd16

		.echo **FAIL  BBR6  abxi

		bbr6	($1234,X)
		bbr6	(bak16,x)
		bbr6	(fwd16,X)

		.echo **FAIL  BBR6  aby

		bbr6	$1234,Y
		bbr6	bak16,y
		bbr6	fwd16,Y

		.echo **FAIL  BBR6  acc

		bbr6	A
		bbr6	a

		.echo **FAIL  BBR6  imm

		bbr6	#$12
		bbr6	#bak08
		bbr6	#fwd08

		.echo **FAIL  BBR6  imp

		bbr6

		.echo **FAIL  BBR6  pcr

		bbr6	:+
		bbr6	-
		bbr6	+
		bbr6	:-

		.echo **FAIL  BBR6  zp

		bbr6	$12
		bbr6	bak08
		bbr6	fwd08

		.echo **FAIL  BBR6  zpi

		bbr6	($12)
		bbr6	(bak08)
		bbr6	(fwd08)

		.echo **FAIL  BBR6  zpimm

		bbr6	#12, $34
		bbr6	#bak08, bak08
		bbr6	#$82, fwd08

		.echo **FAIL  BBR6  zpimx

		bbr6	#12, $34,X
		bbr6	#bak08, bak08,x
		bbr6	#$82, fwd08,X

		.echo **FAIL  BBR6  zpiy

		bbr6	($12),Y
		bbr6	(bak08),y
		bbr6	(fwd08),Y

		.echo **PASS  BBR6  zptr

		BBR6	$12, :+
		BBR6	bak08, -
		BBR6	fwd08, +

		.echo **FAIL  BBR6  zpx

		bbr6	$12,X
		bbr6	bak08,x
		bbr6	fwd08,X

		.echo **FAIL  BBR6  zpxi

		bbr6	($12,X)
		bbr6	(bak08,x)
		bbr6	(fwd08,X)

		.echo **FAIL  BBR6  zpy

		bbr6	$12,Y
		bbr6	bak08,y
		bbr6	fwd08,Y


:	; forward ref for BBR6

; -------------------------------

:	; backward ref for BBR7

		.echo **FAIL  BBR7  ab

		bbr7	$1234
		bbr7	bak16
		bbr7	fwd16

		.echo **FAIL  BBR7  abi

		bbr7	($1234)
		bbr7	(bak16)
		bbr7	(fwd16)

		.echo **FAIL  BBR7  abimm

		bbr7	#12, $1234
		bbr7	#bak08, bak16
		bbr7	#$82, fwd16

		.echo **FAIL  BBR7  abimx

		bbr7	#12, $1234,x
		bbr7	#bak08, bak16,X
		bbr7	#$82, fwd16,x

		.echo **FAIL  BBR7  abx

		bbr7	$1234,X
		bbr7	bak16,x
		bbr7	fwd16,X

		.echo **FAIL  BBR7  abxfr

		bbr7	$32, $1234, $5678
		bbr7	$1234, bak08, fwd08
		bbr7	fwd08, bak16, fwd16

		.echo **FAIL  BBR7  abxi

		bbr7	($1234,X)
		bbr7	(bak16,x)
		bbr7	(fwd16,X)

		.echo **FAIL  BBR7  aby

		bbr7	$1234,Y
		bbr7	bak16,y
		bbr7	fwd16,Y

		.echo **FAIL  BBR7  acc

		bbr7	A
		bbr7	a

		.echo **FAIL  BBR7  imm

		bbr7	#$12
		bbr7	#bak08
		bbr7	#fwd08

		.echo **FAIL  BBR7  imp

		bbr7

		.echo **FAIL  BBR7  pcr

		bbr7	:+
		bbr7	-
		bbr7	+
		bbr7	:-

		.echo **FAIL  BBR7  zp

		bbr7	$12
		bbr7	bak08
		bbr7	fwd08

		.echo **FAIL  BBR7  zpi

		bbr7	($12)
		bbr7	(bak08)
		bbr7	(fwd08)

		.echo **FAIL  BBR7  zpimm

		bbr7	#12, $34
		bbr7	#bak08, bak08
		bbr7	#$82, fwd08

		.echo **FAIL  BBR7  zpimx

		bbr7	#12, $34,X
		bbr7	#bak08, bak08,x
		bbr7	#$82, fwd08,X

		.echo **FAIL  BBR7  zpiy

		bbr7	($12),Y
		bbr7	(bak08),y
		bbr7	(fwd08),Y

		.echo **PASS  BBR7  zptr

		BBR7	$12, :+
		BBR7	bak08, -
		BBR7	fwd08, +

		.echo **FAIL  BBR7  zpx

		bbr7	$12,X
		bbr7	bak08,x
		bbr7	fwd08,X

		.echo **FAIL  BBR7  zpxi

		bbr7	($12,X)
		bbr7	(bak08,x)
		bbr7	(fwd08,X)

		.echo **FAIL  BBR7  zpy

		bbr7	$12,Y
		bbr7	bak08,y
		bbr7	fwd08,Y


:	; forward ref for BBR7

; -------------------------------

:	; backward ref for BBS0

		.echo **FAIL  BBS0  ab

		bbs0	$1234
		bbs0	bak16
		bbs0	fwd16

		.echo **FAIL  BBS0  abi

		bbs0	($1234)
		bbs0	(bak16)
		bbs0	(fwd16)

		.echo **FAIL  BBS0  abimm

		bbs0	#12, $1234
		bbs0	#bak08, bak16
		bbs0	#$82, fwd16

		.echo **FAIL  BBS0  abimx

		bbs0	#12, $1234,x
		bbs0	#bak08, bak16,X
		bbs0	#$82, fwd16,x

		.echo **FAIL  BBS0  abx

		bbs0	$1234,X
		bbs0	bak16,x
		bbs0	fwd16,X

		.echo **FAIL  BBS0  abxfr

		bbs0	$32, $1234, $5678
		bbs0	$1234, bak08, fwd08
		bbs0	fwd08, bak16, fwd16

		.echo **FAIL  BBS0  abxi

		bbs0	($1234,X)
		bbs0	(bak16,x)
		bbs0	(fwd16,X)

		.echo **FAIL  BBS0  aby

		bbs0	$1234,Y
		bbs0	bak16,y
		bbs0	fwd16,Y

		.echo **FAIL  BBS0  acc

		bbs0	A
		bbs0	a

		.echo **FAIL  BBS0  imm

		bbs0	#$12
		bbs0	#bak08
		bbs0	#fwd08

		.echo **FAIL  BBS0  imp

		bbs0

		.echo **FAIL  BBS0  pcr

		bbs0	:+
		bbs0	-
		bbs0	+
		bbs0	:-

		.echo **FAIL  BBS0  zp

		bbs0	$12
		bbs0	bak08
		bbs0	fwd08

		.echo **FAIL  BBS0  zpi

		bbs0	($12)
		bbs0	(bak08)
		bbs0	(fwd08)

		.echo **FAIL  BBS0  zpimm

		bbs0	#12, $34
		bbs0	#bak08, bak08
		bbs0	#$82, fwd08

		.echo **FAIL  BBS0  zpimx

		bbs0	#12, $34,X
		bbs0	#bak08, bak08,x
		bbs0	#$82, fwd08,X

		.echo **FAIL  BBS0  zpiy

		bbs0	($12),Y
		bbs0	(bak08),y
		bbs0	(fwd08),Y

		.echo **PASS  BBS0  zptr

		BBS0	$12, :+
		BBS0	bak08, -
		BBS0	fwd08, +

		.echo **FAIL  BBS0  zpx

		bbs0	$12,X
		bbs0	bak08,x
		bbs0	fwd08,X

		.echo **FAIL  BBS0  zpxi

		bbs0	($12,X)
		bbs0	(bak08,x)
		bbs0	(fwd08,X)

		.echo **FAIL  BBS0  zpy

		bbs0	$12,Y
		bbs0	bak08,y
		bbs0	fwd08,Y


:	; forward ref for BBS0

; -------------------------------

:	; backward ref for BBS1

		.echo **FAIL  BBS1  ab

		bbs1	$1234
		bbs1	bak16
		bbs1	fwd16

		.echo **FAIL  BBS1  abi

		bbs1	($1234)
		bbs1	(bak16)
		bbs1	(fwd16)

		.echo **FAIL  BBS1  abimm

		bbs1	#12, $1234
		bbs1	#bak08, bak16
		bbs1	#$82, fwd16

		.echo **FAIL  BBS1  abimx

		bbs1	#12, $1234,x
		bbs1	#bak08, bak16,X
		bbs1	#$82, fwd16,x

		.echo **FAIL  BBS1  abx

		bbs1	$1234,X
		bbs1	bak16,x
		bbs1	fwd16,X

		.echo **FAIL  BBS1  abxfr

		bbs1	$32, $1234, $5678
		bbs1	$1234, bak08, fwd08
		bbs1	fwd08, bak16, fwd16

		.echo **FAIL  BBS1  abxi

		bbs1	($1234,X)
		bbs1	(bak16,x)
		bbs1	(fwd16,X)

		.echo **FAIL  BBS1  aby

		bbs1	$1234,Y
		bbs1	bak16,y
		bbs1	fwd16,Y

		.echo **FAIL  BBS1  acc

		bbs1	A
		bbs1	a

		.echo **FAIL  BBS1  imm

		bbs1	#$12
		bbs1	#bak08
		bbs1	#fwd08

		.echo **FAIL  BBS1  imp

		bbs1

		.echo **FAIL  BBS1  pcr

		bbs1	:+
		bbs1	-
		bbs1	+
		bbs1	:-

		.echo **FAIL  BBS1  zp

		bbs1	$12
		bbs1	bak08
		bbs1	fwd08

		.echo **FAIL  BBS1  zpi

		bbs1	($12)
		bbs1	(bak08)
		bbs1	(fwd08)

		.echo **FAIL  BBS1  zpimm

		bbs1	#12, $34
		bbs1	#bak08, bak08
		bbs1	#$82, fwd08

		.echo **FAIL  BBS1  zpimx

		bbs1	#12, $34,X
		bbs1	#bak08, bak08,x
		bbs1	#$82, fwd08,X

		.echo **FAIL  BBS1  zpiy

		bbs1	($12),Y
		bbs1	(bak08),y
		bbs1	(fwd08),Y

		.echo **PASS  BBS1  zptr

		BBS1	$12, :+
		BBS1	bak08, -
		BBS1	fwd08, +

		.echo **FAIL  BBS1  zpx

		bbs1	$12,X
		bbs1	bak08,x
		bbs1	fwd08,X

		.echo **FAIL  BBS1  zpxi

		bbs1	($12,X)
		bbs1	(bak08,x)
		bbs1	(fwd08,X)

		.echo **FAIL  BBS1  zpy

		bbs1	$12,Y
		bbs1	bak08,y
		bbs1	fwd08,Y


:	; forward ref for BBS1

; -------------------------------

:	; backward ref for BBS2

		.echo **FAIL  BBS2  ab

		bbs2	$1234
		bbs2	bak16
		bbs2	fwd16

		.echo **FAIL  BBS2  abi

		bbs2	($1234)
		bbs2	(bak16)
		bbs2	(fwd16)

		.echo **FAIL  BBS2  abimm

		bbs2	#12, $1234
		bbs2	#bak08, bak16
		bbs2	#$82, fwd16

		.echo **FAIL  BBS2  abimx

		bbs2	#12, $1234,x
		bbs2	#bak08, bak16,X
		bbs2	#$82, fwd16,x

		.echo **FAIL  BBS2  abx

		bbs2	$1234,X
		bbs2	bak16,x
		bbs2	fwd16,X

		.echo **FAIL  BBS2  abxfr

		bbs2	$32, $1234, $5678
		bbs2	$1234, bak08, fwd08
		bbs2	fwd08, bak16, fwd16

		.echo **FAIL  BBS2  abxi

		bbs2	($1234,X)
		bbs2	(bak16,x)
		bbs2	(fwd16,X)

		.echo **FAIL  BBS2  aby

		bbs2	$1234,Y
		bbs2	bak16,y
		bbs2	fwd16,Y

		.echo **FAIL  BBS2  acc

		bbs2	A
		bbs2	a

		.echo **FAIL  BBS2  imm

		bbs2	#$12
		bbs2	#bak08
		bbs2	#fwd08

		.echo **FAIL  BBS2  imp

		bbs2

		.echo **FAIL  BBS2  pcr

		bbs2	:+
		bbs2	-
		bbs2	+
		bbs2	:-

		.echo **FAIL  BBS2  zp

		bbs2	$12
		bbs2	bak08
		bbs2	fwd08

		.echo **FAIL  BBS2  zpi

		bbs2	($12)
		bbs2	(bak08)
		bbs2	(fwd08)

		.echo **FAIL  BBS2  zpimm

		bbs2	#12, $34
		bbs2	#bak08, bak08
		bbs2	#$82, fwd08

		.echo **FAIL  BBS2  zpimx

		bbs2	#12, $34,X
		bbs2	#bak08, bak08,x
		bbs2	#$82, fwd08,X

		.echo **FAIL  BBS2  zpiy

		bbs2	($12),Y
		bbs2	(bak08),y
		bbs2	(fwd08),Y

		.echo **PASS  BBS2  zptr

		BBS2	$12, :+
		BBS2	bak08, -
		BBS2	fwd08, +

		.echo **FAIL  BBS2  zpx

		bbs2	$12,X
		bbs2	bak08,x
		bbs2	fwd08,X

		.echo **FAIL  BBS2  zpxi

		bbs2	($12,X)
		bbs2	(bak08,x)
		bbs2	(fwd08,X)

		.echo **FAIL  BBS2  zpy

		bbs2	$12,Y
		bbs2	bak08,y
		bbs2	fwd08,Y


:	; forward ref for BBS2

; -------------------------------

:	; backward ref for BBS3

		.echo **FAIL  BBS3  ab

		bbs3	$1234
		bbs3	bak16
		bbs3	fwd16

		.echo **FAIL  BBS3  abi

		bbs3	($1234)
		bbs3	(bak16)
		bbs3	(fwd16)

		.echo **FAIL  BBS3  abimm

		bbs3	#12, $1234
		bbs3	#bak08, bak16
		bbs3	#$82, fwd16

		.echo **FAIL  BBS3  abimx

		bbs3	#12, $1234,x
		bbs3	#bak08, bak16,X
		bbs3	#$82, fwd16,x

		.echo **FAIL  BBS3  abx

		bbs3	$1234,X
		bbs3	bak16,x
		bbs3	fwd16,X

		.echo **FAIL  BBS3  abxfr

		bbs3	$32, $1234, $5678
		bbs3	$1234, bak08, fwd08
		bbs3	fwd08, bak16, fwd16

		.echo **FAIL  BBS3  abxi

		bbs3	($1234,X)
		bbs3	(bak16,x)
		bbs3	(fwd16,X)

		.echo **FAIL  BBS3  aby

		bbs3	$1234,Y
		bbs3	bak16,y
		bbs3	fwd16,Y

		.echo **FAIL  BBS3  acc

		bbs3	A
		bbs3	a

		.echo **FAIL  BBS3  imm

		bbs3	#$12
		bbs3	#bak08
		bbs3	#fwd08

		.echo **FAIL  BBS3  imp

		bbs3

		.echo **FAIL  BBS3  pcr

		bbs3	:+
		bbs3	-
		bbs3	+
		bbs3	:-

		.echo **FAIL  BBS3  zp

		bbs3	$12
		bbs3	bak08
		bbs3	fwd08

		.echo **FAIL  BBS3  zpi

		bbs3	($12)
		bbs3	(bak08)
		bbs3	(fwd08)

		.echo **FAIL  BBS3  zpimm

		bbs3	#12, $34
		bbs3	#bak08, bak08
		bbs3	#$82, fwd08

		.echo **FAIL  BBS3  zpimx

		bbs3	#12, $34,X
		bbs3	#bak08, bak08,x
		bbs3	#$82, fwd08,X

		.echo **FAIL  BBS3  zpiy

		bbs3	($12),Y
		bbs3	(bak08),y
		bbs3	(fwd08),Y

		.echo **PASS  BBS3  zptr

		BBS3	$12, :+
		BBS3	bak08, -
		BBS3	fwd08, +

		.echo **FAIL  BBS3  zpx

		bbs3	$12,X
		bbs3	bak08,x
		bbs3	fwd08,X

		.echo **FAIL  BBS3  zpxi

		bbs3	($12,X)
		bbs3	(bak08,x)
		bbs3	(fwd08,X)

		.echo **FAIL  BBS3  zpy

		bbs3	$12,Y
		bbs3	bak08,y
		bbs3	fwd08,Y


:	; forward ref for BBS3

; -------------------------------

:	; backward ref for BBS4

		.echo **FAIL  BBS4  ab

		bbs4	$1234
		bbs4	bak16
		bbs4	fwd16

		.echo **FAIL  BBS4  abi

		bbs4	($1234)
		bbs4	(bak16)
		bbs4	(fwd16)

		.echo **FAIL  BBS4  abimm

		bbs4	#12, $1234
		bbs4	#bak08, bak16
		bbs4	#$82, fwd16

		.echo **FAIL  BBS4  abimx

		bbs4	#12, $1234,x
		bbs4	#bak08, bak16,X
		bbs4	#$82, fwd16,x

		.echo **FAIL  BBS4  abx

		bbs4	$1234,X
		bbs4	bak16,x
		bbs4	fwd16,X

		.echo **FAIL  BBS4  abxfr

		bbs4	$32, $1234, $5678
		bbs4	$1234, bak08, fwd08
		bbs4	fwd08, bak16, fwd16

		.echo **FAIL  BBS4  abxi

		bbs4	($1234,X)
		bbs4	(bak16,x)
		bbs4	(fwd16,X)

		.echo **FAIL  BBS4  aby

		bbs4	$1234,Y
		bbs4	bak16,y
		bbs4	fwd16,Y

		.echo **FAIL  BBS4  acc

		bbs4	A
		bbs4	a

		.echo **FAIL  BBS4  imm

		bbs4	#$12
		bbs4	#bak08
		bbs4	#fwd08

		.echo **FAIL  BBS4  imp

		bbs4

		.echo **FAIL  BBS4  pcr

		bbs4	:+
		bbs4	-
		bbs4	+
		bbs4	:-

		.echo **FAIL  BBS4  zp

		bbs4	$12
		bbs4	bak08
		bbs4	fwd08

		.echo **FAIL  BBS4  zpi

		bbs4	($12)
		bbs4	(bak08)
		bbs4	(fwd08)

		.echo **FAIL  BBS4  zpimm

		bbs4	#12, $34
		bbs4	#bak08, bak08
		bbs4	#$82, fwd08

		.echo **FAIL  BBS4  zpimx

		bbs4	#12, $34,X
		bbs4	#bak08, bak08,x
		bbs4	#$82, fwd08,X

		.echo **FAIL  BBS4  zpiy

		bbs4	($12),Y
		bbs4	(bak08),y
		bbs4	(fwd08),Y

		.echo **PASS  BBS4  zptr

		BBS4	$12, :+
		BBS4	bak08, -
		BBS4	fwd08, +

		.echo **FAIL  BBS4  zpx

		bbs4	$12,X
		bbs4	bak08,x
		bbs4	fwd08,X

		.echo **FAIL  BBS4  zpxi

		bbs4	($12,X)
		bbs4	(bak08,x)
		bbs4	(fwd08,X)

		.echo **FAIL  BBS4  zpy

		bbs4	$12,Y
		bbs4	bak08,y
		bbs4	fwd08,Y


:	; forward ref for BBS4

; -------------------------------

:	; backward ref for BBS5

		.echo **FAIL  BBS5  ab

		bbs5	$1234
		bbs5	bak16
		bbs5	fwd16

		.echo **FAIL  BBS5  abi

		bbs5	($1234)
		bbs5	(bak16)
		bbs5	(fwd16)

		.echo **FAIL  BBS5  abimm

		bbs5	#12, $1234
		bbs5	#bak08, bak16
		bbs5	#$82, fwd16

		.echo **FAIL  BBS5  abimx

		bbs5	#12, $1234,x
		bbs5	#bak08, bak16,X
		bbs5	#$82, fwd16,x

		.echo **FAIL  BBS5  abx

		bbs5	$1234,X
		bbs5	bak16,x
		bbs5	fwd16,X

		.echo **FAIL  BBS5  abxfr

		bbs5	$32, $1234, $5678
		bbs5	$1234, bak08, fwd08
		bbs5	fwd08, bak16, fwd16

		.echo **FAIL  BBS5  abxi

		bbs5	($1234,X)
		bbs5	(bak16,x)
		bbs5	(fwd16,X)

		.echo **FAIL  BBS5  aby

		bbs5	$1234,Y
		bbs5	bak16,y
		bbs5	fwd16,Y

		.echo **FAIL  BBS5  acc

		bbs5	A
		bbs5	a

		.echo **FAIL  BBS5  imm

		bbs5	#$12
		bbs5	#bak08
		bbs5	#fwd08

		.echo **FAIL  BBS5  imp

		bbs5

		.echo **FAIL  BBS5  pcr

		bbs5	:+
		bbs5	-
		bbs5	+
		bbs5	:-

		.echo **FAIL  BBS5  zp

		bbs5	$12
		bbs5	bak08
		bbs5	fwd08

		.echo **FAIL  BBS5  zpi

		bbs5	($12)
		bbs5	(bak08)
		bbs5	(fwd08)

		.echo **FAIL  BBS5  zpimm

		bbs5	#12, $34
		bbs5	#bak08, bak08
		bbs5	#$82, fwd08

		.echo **FAIL  BBS5  zpimx

		bbs5	#12, $34,X
		bbs5	#bak08, bak08,x
		bbs5	#$82, fwd08,X

		.echo **FAIL  BBS5  zpiy

		bbs5	($12),Y
		bbs5	(bak08),y
		bbs5	(fwd08),Y

		.echo **PASS  BBS5  zptr

		BBS5	$12, :+
		BBS5	bak08, -
		BBS5	fwd08, +

		.echo **FAIL  BBS5  zpx

		bbs5	$12,X
		bbs5	bak08,x
		bbs5	fwd08,X

		.echo **FAIL  BBS5  zpxi

		bbs5	($12,X)
		bbs5	(bak08,x)
		bbs5	(fwd08,X)

		.echo **FAIL  BBS5  zpy

		bbs5	$12,Y
		bbs5	bak08,y
		bbs5	fwd08,Y


:	; forward ref for BBS5

; -------------------------------

:	; backward ref for BBS6

		.echo **FAIL  BBS6  ab

		bbs6	$1234
		bbs6	bak16
		bbs6	fwd16

		.echo **FAIL  BBS6  abi

		bbs6	($1234)
		bbs6	(bak16)
		bbs6	(fwd16)

		.echo **FAIL  BBS6  abimm

		bbs6	#12, $1234
		bbs6	#bak08, bak16
		bbs6	#$82, fwd16

		.echo **FAIL  BBS6  abimx

		bbs6	#12, $1234,x
		bbs6	#bak08, bak16,X
		bbs6	#$82, fwd16,x

		.echo **FAIL  BBS6  abx

		bbs6	$1234,X
		bbs6	bak16,x
		bbs6	fwd16,X

		.echo **FAIL  BBS6  abxfr

		bbs6	$32, $1234, $5678
		bbs6	$1234, bak08, fwd08
		bbs6	fwd08, bak16, fwd16

		.echo **FAIL  BBS6  abxi

		bbs6	($1234,X)
		bbs6	(bak16,x)
		bbs6	(fwd16,X)

		.echo **FAIL  BBS6  aby

		bbs6	$1234,Y
		bbs6	bak16,y
		bbs6	fwd16,Y

		.echo **FAIL  BBS6  acc

		bbs6	A
		bbs6	a

		.echo **FAIL  BBS6  imm

		bbs6	#$12
		bbs6	#bak08
		bbs6	#fwd08

		.echo **FAIL  BBS6  imp

		bbs6

		.echo **FAIL  BBS6  pcr

		bbs6	:+
		bbs6	-
		bbs6	+
		bbs6	:-

		.echo **FAIL  BBS6  zp

		bbs6	$12
		bbs6	bak08
		bbs6	fwd08

		.echo **FAIL  BBS6  zpi

		bbs6	($12)
		bbs6	(bak08)
		bbs6	(fwd08)

		.echo **FAIL  BBS6  zpimm

		bbs6	#12, $34
		bbs6	#bak08, bak08
		bbs6	#$82, fwd08

		.echo **FAIL  BBS6  zpimx

		bbs6	#12, $34,X
		bbs6	#bak08, bak08,x
		bbs6	#$82, fwd08,X

		.echo **FAIL  BBS6  zpiy

		bbs6	($12),Y
		bbs6	(bak08),y
		bbs6	(fwd08),Y

		.echo **PASS  BBS6  zptr

		BBS6	$12, :+
		BBS6	bak08, -
		BBS6	fwd08, +

		.echo **FAIL  BBS6  zpx

		bbs6	$12,X
		bbs6	bak08,x
		bbs6	fwd08,X

		.echo **FAIL  BBS6  zpxi

		bbs6	($12,X)
		bbs6	(bak08,x)
		bbs6	(fwd08,X)

		.echo **FAIL  BBS6  zpy

		bbs6	$12,Y
		bbs6	bak08,y
		bbs6	fwd08,Y


:	; forward ref for BBS6

; -------------------------------

:	; backward ref for BBS7

		.echo **FAIL  BBS7  ab

		bbs7	$1234
		bbs7	bak16
		bbs7	fwd16

		.echo **FAIL  BBS7  abi

		bbs7	($1234)
		bbs7	(bak16)
		bbs7	(fwd16)

		.echo **FAIL  BBS7  abimm

		bbs7	#12, $1234
		bbs7	#bak08, bak16
		bbs7	#$82, fwd16

		.echo **FAIL  BBS7  abimx

		bbs7	#12, $1234,x
		bbs7	#bak08, bak16,X
		bbs7	#$82, fwd16,x

		.echo **FAIL  BBS7  abx

		bbs7	$1234,X
		bbs7	bak16,x
		bbs7	fwd16,X

		.echo **FAIL  BBS7  abxfr

		bbs7	$32, $1234, $5678
		bbs7	$1234, bak08, fwd08
		bbs7	fwd08, bak16, fwd16

		.echo **FAIL  BBS7  abxi

		bbs7	($1234,X)
		bbs7	(bak16,x)
		bbs7	(fwd16,X)

		.echo **FAIL  BBS7  aby

		bbs7	$1234,Y
		bbs7	bak16,y
		bbs7	fwd16,Y

		.echo **FAIL  BBS7  acc

		bbs7	A
		bbs7	a

		.echo **FAIL  BBS7  imm

		bbs7	#$12
		bbs7	#bak08
		bbs7	#fwd08

		.echo **FAIL  BBS7  imp

		bbs7

		.echo **FAIL  BBS7  pcr

		bbs7	:+
		bbs7	-
		bbs7	+
		bbs7	:-

		.echo **FAIL  BBS7  zp

		bbs7	$12
		bbs7	bak08
		bbs7	fwd08

		.echo **FAIL  BBS7  zpi

		bbs7	($12)
		bbs7	(bak08)
		bbs7	(fwd08)

		.echo **FAIL  BBS7  zpimm

		bbs7	#12, $34
		bbs7	#bak08, bak08
		bbs7	#$82, fwd08

		.echo **FAIL  BBS7  zpimx

		bbs7	#12, $34,X
		bbs7	#bak08, bak08,x
		bbs7	#$82, fwd08,X

		.echo **FAIL  BBS7  zpiy

		bbs7	($12),Y
		bbs7	(bak08),y
		bbs7	(fwd08),Y

		.echo **PASS  BBS7  zptr

		BBS7	$12, :+
		BBS7	bak08, -
		BBS7	fwd08, +

		.echo **FAIL  BBS7  zpx

		bbs7	$12,X
		bbs7	bak08,x
		bbs7	fwd08,X

		.echo **FAIL  BBS7  zpxi

		bbs7	($12,X)
		bbs7	(bak08,x)
		bbs7	(fwd08,X)

		.echo **FAIL  BBS7  zpy

		bbs7	$12,Y
		bbs7	bak08,y
		bbs7	fwd08,Y


:	; forward ref for BBS7

; -------------------------------

:	; backward ref for BCC

		.echo **PASS  BCC  ab  (as pcr)

		Bcc 	$1234
		Bcc 	bak16
		Bcc 	fwd16

		.echo **FAIL  BCC  abi

		bcc 	($1234)
		bcc 	(bak16)
		bcc 	(fwd16)

		.echo **FAIL  BCC  abimm

		bcc 	#12, $1234
		bcc 	#bak08, bak16
		bcc 	#$82, fwd16

		.echo **FAIL  BCC  abimx

		bcc 	#12, $1234,x
		bcc 	#bak08, bak16,X
		bcc 	#$82, fwd16,x

		.echo **FAIL  BCC  abx

		bcc 	$1234,X
		bcc 	bak16,x
		bcc 	fwd16,X

		.echo **FAIL  BCC  abxfr

		bcc 	$32, $1234, $5678
		bcc 	$1234, bak08, fwd08
		bcc 	fwd08, bak16, fwd16

		.echo **FAIL  BCC  abxi

		bcc 	($1234,X)
		bcc 	(bak16,x)
		bcc 	(fwd16,X)

		.echo **FAIL  BCC  aby

		bcc 	$1234,Y
		bcc 	bak16,y
		bcc 	fwd16,Y

		.echo **FAIL  BCC  acc

		bcc 	A
		bcc 	a

		.echo **FAIL  BCC  imm

		bcc 	#$12
		bcc 	#bak08
		bcc 	#fwd08

		.echo **FAIL  BCC  imp

		bcc 

		.echo **PASS  BCC  pcr

		BCC 	:+
		BCC 	-
		BCC 	+
		BCC 	:-

		.echo **PASS  BCC  zp  (as pcr)

		Bcc 	$12
		Bcc 	bak08
		Bcc 	fwd08

		.echo **FAIL  BCC  zpi

		bcc 	($12)
		bcc 	(bak08)
		bcc 	(fwd08)

		.echo **FAIL  BCC  zpimm

		bcc 	#12, $34
		bcc 	#bak08, bak08
		bcc 	#$82, fwd08

		.echo **FAIL  BCC  zpimx

		bcc 	#12, $34,X
		bcc 	#bak08, bak08,x
		bcc 	#$82, fwd08,X

		.echo **FAIL  BCC  zpiy

		bcc 	($12),Y
		bcc 	(bak08),y
		bcc 	(fwd08),Y

		.echo **FAIL  BCC  zptr

		bcc 	$12, :+
		bcc 	bak08, -
		bcc 	fwd08, +

		.echo **FAIL  BCC  zpx

		bcc 	$12,X
		bcc 	bak08,x
		bcc 	fwd08,X

		.echo **FAIL  BCC  zpxi

		bcc 	($12,X)
		bcc 	(bak08,x)
		bcc 	(fwd08,X)

		.echo **FAIL  BCC  zpy

		bcc 	$12,Y
		bcc 	bak08,y
		bcc 	fwd08,Y


:	; forward ref for BCC

; -------------------------------

:	; backward ref for BCS

		.echo **PASS  BCS  ab  (as pcr)

		Bcs 	$1234
		Bcs 	bak16
		Bcs 	fwd16

		.echo **FAIL  BCS  abi

		bcs 	($1234)
		bcs 	(bak16)
		bcs 	(fwd16)

		.echo **FAIL  BCS  abimm

		bcs 	#12, $1234
		bcs 	#bak08, bak16
		bcs 	#$82, fwd16

		.echo **FAIL  BCS  abimx

		bcs 	#12, $1234,x
		bcs 	#bak08, bak16,X
		bcs 	#$82, fwd16,x

		.echo **FAIL  BCS  abx

		bcs 	$1234,X
		bcs 	bak16,x
		bcs 	fwd16,X

		.echo **FAIL  BCS  abxfr

		bcs 	$32, $1234, $5678
		bcs 	$1234, bak08, fwd08
		bcs 	fwd08, bak16, fwd16

		.echo **FAIL  BCS  abxi

		bcs 	($1234,X)
		bcs 	(bak16,x)
		bcs 	(fwd16,X)

		.echo **FAIL  BCS  aby

		bcs 	$1234,Y
		bcs 	bak16,y
		bcs 	fwd16,Y

		.echo **FAIL  BCS  acc

		bcs 	A
		bcs 	a

		.echo **FAIL  BCS  imm

		bcs 	#$12
		bcs 	#bak08
		bcs 	#fwd08

		.echo **FAIL  BCS  imp

		bcs 

		.echo **PASS  BCS  pcr

		BCS 	:+
		BCS 	-
		BCS 	+
		BCS 	:-

		.echo **PASS  BCS  zp  (as pcr)

		Bcs 	$12
		Bcs 	bak08
		Bcs 	fwd08

		.echo **FAIL  BCS  zpi

		bcs 	($12)
		bcs 	(bak08)
		bcs 	(fwd08)

		.echo **FAIL  BCS  zpimm

		bcs 	#12, $34
		bcs 	#bak08, bak08
		bcs 	#$82, fwd08

		.echo **FAIL  BCS  zpimx

		bcs 	#12, $34,X
		bcs 	#bak08, bak08,x
		bcs 	#$82, fwd08,X

		.echo **FAIL  BCS  zpiy

		bcs 	($12),Y
		bcs 	(bak08),y
		bcs 	(fwd08),Y

		.echo **FAIL  BCS  zptr

		bcs 	$12, :+
		bcs 	bak08, -
		bcs 	fwd08, +

		.echo **FAIL  BCS  zpx

		bcs 	$12,X
		bcs 	bak08,x
		bcs 	fwd08,X

		.echo **FAIL  BCS  zpxi

		bcs 	($12,X)
		bcs 	(bak08,x)
		bcs 	(fwd08,X)

		.echo **FAIL  BCS  zpy

		bcs 	$12,Y
		bcs 	bak08,y
		bcs 	fwd08,Y


:	; forward ref for BCS

; -------------------------------

:	; backward ref for BEQ

		.echo **PASS  BEQ  ab  (as pcr)

		Beq 	$1234
		Beq 	bak16
		Beq 	fwd16

		.echo **FAIL  BEQ  abi

		beq 	($1234)
		beq 	(bak16)
		beq 	(fwd16)

		.echo **FAIL  BEQ  abimm

		beq 	#12, $1234
		beq 	#bak08, bak16
		beq 	#$82, fwd16

		.echo **FAIL  BEQ  abimx

		beq 	#12, $1234,x
		beq 	#bak08, bak16,X
		beq 	#$82, fwd16,x

		.echo **FAIL  BEQ  abx

		beq 	$1234,X
		beq 	bak16,x
		beq 	fwd16,X

		.echo **FAIL  BEQ  abxfr

		beq 	$32, $1234, $5678
		beq 	$1234, bak08, fwd08
		beq 	fwd08, bak16, fwd16

		.echo **FAIL  BEQ  abxi

		beq 	($1234,X)
		beq 	(bak16,x)
		beq 	(fwd16,X)

		.echo **FAIL  BEQ  aby

		beq 	$1234,Y
		beq 	bak16,y
		beq 	fwd16,Y

		.echo **FAIL  BEQ  acc

		beq 	A
		beq 	a

		.echo **FAIL  BEQ  imm

		beq 	#$12
		beq 	#bak08
		beq 	#fwd08

		.echo **FAIL  BEQ  imp

		beq 

		.echo **PASS  BEQ  pcr

		BEQ 	:+
		BEQ 	-
		BEQ 	+
		BEQ 	:-

		.echo **PASS  BEQ  zp  (as pcr)

		Beq 	$12
		Beq 	bak08
		Beq 	fwd08

		.echo **FAIL  BEQ  zpi

		beq 	($12)
		beq 	(bak08)
		beq 	(fwd08)

		.echo **FAIL  BEQ  zpimm

		beq 	#12, $34
		beq 	#bak08, bak08
		beq 	#$82, fwd08

		.echo **FAIL  BEQ  zpimx

		beq 	#12, $34,X
		beq 	#bak08, bak08,x
		beq 	#$82, fwd08,X

		.echo **FAIL  BEQ  zpiy

		beq 	($12),Y
		beq 	(bak08),y
		beq 	(fwd08),Y

		.echo **FAIL  BEQ  zptr

		beq 	$12, :+
		beq 	bak08, -
		beq 	fwd08, +

		.echo **FAIL  BEQ  zpx

		beq 	$12,X
		beq 	bak08,x
		beq 	fwd08,X

		.echo **FAIL  BEQ  zpxi

		beq 	($12,X)
		beq 	(bak08,x)
		beq 	(fwd08,X)

		.echo **FAIL  BEQ  zpy

		beq 	$12,Y
		beq 	bak08,y
		beq 	fwd08,Y


:	; forward ref for BEQ

; -------------------------------

:	; backward ref for BGE

		.echo **PASS  BGE  ab  (as pcr)

		Bge 	$1234
		Bge 	bak16
		Bge 	fwd16

		.echo **FAIL  BGE  abi

		bge 	($1234)
		bge 	(bak16)
		bge 	(fwd16)

		.echo **FAIL  BGE  abimm

		bge 	#12, $1234
		bge 	#bak08, bak16
		bge 	#$82, fwd16

		.echo **FAIL  BGE  abimx

		bge 	#12, $1234,x
		bge 	#bak08, bak16,X
		bge 	#$82, fwd16,x

		.echo **FAIL  BGE  abx

		bge 	$1234,X
		bge 	bak16,x
		bge 	fwd16,X

		.echo **FAIL  BGE  abxfr

		bge 	$32, $1234, $5678
		bge 	$1234, bak08, fwd08
		bge 	fwd08, bak16, fwd16

		.echo **FAIL  BGE  abxi

		bge 	($1234,X)
		bge 	(bak16,x)
		bge 	(fwd16,X)

		.echo **FAIL  BGE  aby

		bge 	$1234,Y
		bge 	bak16,y
		bge 	fwd16,Y

		.echo **FAIL  BGE  acc

		bge 	A
		bge 	a

		.echo **FAIL  BGE  imm

		bge 	#$12
		bge 	#bak08
		bge 	#fwd08

		.echo **FAIL  BGE  imp

		bge 

		.echo **PASS  BGE  pcr

		BGE 	:+
		BGE 	-
		BGE 	+
		BGE 	:-

		.echo **PASS  BGE  zp  (as pcr)

		Bge 	$12
		Bge 	bak08
		Bge 	fwd08

		.echo **FAIL  BGE  zpi

		bge 	($12)
		bge 	(bak08)
		bge 	(fwd08)

		.echo **FAIL  BGE  zpimm

		bge 	#12, $34
		bge 	#bak08, bak08
		bge 	#$82, fwd08

		.echo **FAIL  BGE  zpimx

		bge 	#12, $34,X
		bge 	#bak08, bak08,x
		bge 	#$82, fwd08,X

		.echo **FAIL  BGE  zpiy

		bge 	($12),Y
		bge 	(bak08),y
		bge 	(fwd08),Y

		.echo **FAIL  BGE  zptr

		bge 	$12, :+
		bge 	bak08, -
		bge 	fwd08, +

		.echo **FAIL  BGE  zpx

		bge 	$12,X
		bge 	bak08,x
		bge 	fwd08,X

		.echo **FAIL  BGE  zpxi

		bge 	($12,X)
		bge 	(bak08,x)
		bge 	(fwd08,X)

		.echo **FAIL  BGE  zpy

		bge 	$12,Y
		bge 	bak08,y
		bge 	fwd08,Y


:	; forward ref for BGE

; -------------------------------

:	; backward ref for BIT

		.echo **PASS  BIT  ab

		BIT 	$1234
		BIT 	bak16
		BIT 	fwd16

		.echo **FAIL  BIT  abi

		bit 	($1234)
		bit 	(bak16)
		bit 	(fwd16)

		.echo **FAIL  BIT  abimm

		bit 	#12, $1234
		bit 	#bak08, bak16
		bit 	#$82, fwd16

		.echo **FAIL  BIT  abimx

		bit 	#12, $1234,x
		bit 	#bak08, bak16,X
		bit 	#$82, fwd16,x

		.echo **PASS  BIT  abx

		BIT 	$1234,X
		BIT 	bak16,x
		BIT 	fwd16,X

		.echo **FAIL  BIT  abxfr

		bit 	$32, $1234, $5678
		bit 	$1234, bak08, fwd08
		bit 	fwd08, bak16, fwd16

		.echo **FAIL  BIT  abxi

		bit 	($1234,X)
		bit 	(bak16,x)
		bit 	(fwd16,X)

		.echo **FAIL  BIT  aby

		bit 	$1234,Y
		bit 	bak16,y
		bit 	fwd16,Y

		.echo **FAIL  BIT  acc

		bit 	A
		bit 	a

		.echo **PASS  BIT  imm

		BIT 	#$12
		BIT 	#bak08
		BIT 	#fwd08

		.echo **FAIL  BIT  imp

		bit 

		.echo **PASS  BIT  pcr  (as ab)

		Bit 	:+
		Bit 	-
		Bit 	+
		Bit 	:-

		.echo **PASS  BIT  zp

		BIT 	$12
		BIT 	bak08
		Bit 	fwd08   	; (absolute)

		.echo **FAIL  BIT  zpi

		bit 	($12)
		bit 	(bak08)
		bit 	(fwd08)

		.echo **FAIL  BIT  zpimm

		bit 	#12, $34
		bit 	#bak08, bak08
		bit 	#$82, fwd08

		.echo **FAIL  BIT  zpimx

		bit 	#12, $34,X
		bit 	#bak08, bak08,x
		bit 	#$82, fwd08,X

		.echo **FAIL  BIT  zpiy

		bit 	($12),Y
		bit 	(bak08),y
		bit 	(fwd08),Y

		.echo **FAIL  BIT  zptr

		bit 	$12, :+
		bit 	bak08, -
		bit 	fwd08, +

		.echo **PASS  BIT  zpx

		BIT 	$12,X
		BIT 	bak08,x
		Bit 	fwd08,X 	; (absolute)

		.echo **FAIL  BIT  zpxi

		bit 	($12,X)
		bit 	(bak08,x)
		bit 	(fwd08,X)

		.echo **FAIL  BIT  zpy

		bit 	$12,Y
		bit 	bak08,y
		bit 	fwd08,Y


:	; forward ref for BIT

; -------------------------------

:	; backward ref for BLT

		.echo **PASS  BLT  ab  (as pcr)

		Blt 	$1234
		Blt 	bak16
		Blt 	fwd16

		.echo **FAIL  BLT  abi

		blt 	($1234)
		blt 	(bak16)
		blt 	(fwd16)

		.echo **FAIL  BLT  abimm

		blt 	#12, $1234
		blt 	#bak08, bak16
		blt 	#$82, fwd16

		.echo **FAIL  BLT  abimx

		blt 	#12, $1234,x
		blt 	#bak08, bak16,X
		blt 	#$82, fwd16,x

		.echo **FAIL  BLT  abx

		blt 	$1234,X
		blt 	bak16,x
		blt 	fwd16,X

		.echo **FAIL  BLT  abxfr

		blt 	$32, $1234, $5678
		blt 	$1234, bak08, fwd08
		blt 	fwd08, bak16, fwd16

		.echo **FAIL  BLT  abxi

		blt 	($1234,X)
		blt 	(bak16,x)
		blt 	(fwd16,X)

		.echo **FAIL  BLT  aby

		blt 	$1234,Y
		blt 	bak16,y
		blt 	fwd16,Y

		.echo **FAIL  BLT  acc

		blt 	A
		blt 	a

		.echo **FAIL  BLT  imm

		blt 	#$12
		blt 	#bak08
		blt 	#fwd08

		.echo **FAIL  BLT  imp

		blt 

		.echo **PASS  BLT  pcr

		BLT 	:+
		BLT 	-
		BLT 	+
		BLT 	:-

		.echo **PASS  BLT  zp  (as pcr)

		Blt 	$12
		Blt 	bak08
		Blt 	fwd08

		.echo **FAIL  BLT  zpi

		blt 	($12)
		blt 	(bak08)
		blt 	(fwd08)

		.echo **FAIL  BLT  zpimm

		blt 	#12, $34
		blt 	#bak08, bak08
		blt 	#$82, fwd08

		.echo **FAIL  BLT  zpimx

		blt 	#12, $34,X
		blt 	#bak08, bak08,x
		blt 	#$82, fwd08,X

		.echo **FAIL  BLT  zpiy

		blt 	($12),Y
		blt 	(bak08),y
		blt 	(fwd08),Y

		.echo **FAIL  BLT  zptr

		blt 	$12, :+
		blt 	bak08, -
		blt 	fwd08, +

		.echo **FAIL  BLT  zpx

		blt 	$12,X
		blt 	bak08,x
		blt 	fwd08,X

		.echo **FAIL  BLT  zpxi

		blt 	($12,X)
		blt 	(bak08,x)
		blt 	(fwd08,X)

		.echo **FAIL  BLT  zpy

		blt 	$12,Y
		blt 	bak08,y
		blt 	fwd08,Y


:	; forward ref for BLT

; -------------------------------

:	; backward ref for BMI

		.echo **PASS  BMI  ab  (as pcr)

		Bmi 	$1234
		Bmi 	bak16
		Bmi 	fwd16

		.echo **FAIL  BMI  abi

		bmi 	($1234)
		bmi 	(bak16)
		bmi 	(fwd16)

		.echo **FAIL  BMI  abimm

		bmi 	#12, $1234
		bmi 	#bak08, bak16
		bmi 	#$82, fwd16

		.echo **FAIL  BMI  abimx

		bmi 	#12, $1234,x
		bmi 	#bak08, bak16,X
		bmi 	#$82, fwd16,x

		.echo **FAIL  BMI  abx

		bmi 	$1234,X
		bmi 	bak16,x
		bmi 	fwd16,X

		.echo **FAIL  BMI  abxfr

		bmi 	$32, $1234, $5678
		bmi 	$1234, bak08, fwd08
		bmi 	fwd08, bak16, fwd16

		.echo **FAIL  BMI  abxi

		bmi 	($1234,X)
		bmi 	(bak16,x)
		bmi 	(fwd16,X)

		.echo **FAIL  BMI  aby

		bmi 	$1234,Y
		bmi 	bak16,y
		bmi 	fwd16,Y

		.echo **FAIL  BMI  acc

		bmi 	A
		bmi 	a

		.echo **FAIL  BMI  imm

		bmi 	#$12
		bmi 	#bak08
		bmi 	#fwd08

		.echo **FAIL  BMI  imp

		bmi 

		.echo **PASS  BMI  pcr

		BMI 	:+
		BMI 	-
		BMI 	+
		BMI 	:-

		.echo **PASS  BMI  zp  (as pcr)

		Bmi 	$12
		Bmi 	bak08
		Bmi 	fwd08

		.echo **FAIL  BMI  zpi

		bmi 	($12)
		bmi 	(bak08)
		bmi 	(fwd08)

		.echo **FAIL  BMI  zpimm

		bmi 	#12, $34
		bmi 	#bak08, bak08
		bmi 	#$82, fwd08

		.echo **FAIL  BMI  zpimx

		bmi 	#12, $34,X
		bmi 	#bak08, bak08,x
		bmi 	#$82, fwd08,X

		.echo **FAIL  BMI  zpiy

		bmi 	($12),Y
		bmi 	(bak08),y
		bmi 	(fwd08),Y

		.echo **FAIL  BMI  zptr

		bmi 	$12, :+
		bmi 	bak08, -
		bmi 	fwd08, +

		.echo **FAIL  BMI  zpx

		bmi 	$12,X
		bmi 	bak08,x
		bmi 	fwd08,X

		.echo **FAIL  BMI  zpxi

		bmi 	($12,X)
		bmi 	(bak08,x)
		bmi 	(fwd08,X)

		.echo **FAIL  BMI  zpy

		bmi 	$12,Y
		bmi 	bak08,y
		bmi 	fwd08,Y


:	; forward ref for BMI

; -------------------------------

:	; backward ref for BNE

		.echo **PASS  BNE  ab  (as pcr)

		Bne 	$1234
		Bne 	bak16
		Bne 	fwd16

		.echo **FAIL  BNE  abi

		bne 	($1234)
		bne 	(bak16)
		bne 	(fwd16)

		.echo **FAIL  BNE  abimm

		bne 	#12, $1234
		bne 	#bak08, bak16
		bne 	#$82, fwd16

		.echo **FAIL  BNE  abimx

		bne 	#12, $1234,x
		bne 	#bak08, bak16,X
		bne 	#$82, fwd16,x

		.echo **FAIL  BNE  abx

		bne 	$1234,X
		bne 	bak16,x
		bne 	fwd16,X

		.echo **FAIL  BNE  abxfr

		bne 	$32, $1234, $5678
		bne 	$1234, bak08, fwd08
		bne 	fwd08, bak16, fwd16

		.echo **FAIL  BNE  abxi

		bne 	($1234,X)
		bne 	(bak16,x)
		bne 	(fwd16,X)

		.echo **FAIL  BNE  aby

		bne 	$1234,Y
		bne 	bak16,y
		bne 	fwd16,Y

		.echo **FAIL  BNE  acc

		bne 	A
		bne 	a

		.echo **FAIL  BNE  imm

		bne 	#$12
		bne 	#bak08
		bne 	#fwd08

		.echo **FAIL  BNE  imp

		bne 

		.echo **PASS  BNE  pcr

		BNE 	:+
		BNE 	-
		BNE 	+
		BNE 	:-

		.echo **PASS  BNE  zp  (as pcr)

		Bne 	$12
		Bne 	bak08
		Bne 	fwd08

		.echo **FAIL  BNE  zpi

		bne 	($12)
		bne 	(bak08)
		bne 	(fwd08)

		.echo **FAIL  BNE  zpimm

		bne 	#12, $34
		bne 	#bak08, bak08
		bne 	#$82, fwd08

		.echo **FAIL  BNE  zpimx

		bne 	#12, $34,X
		bne 	#bak08, bak08,x
		bne 	#$82, fwd08,X

		.echo **FAIL  BNE  zpiy

		bne 	($12),Y
		bne 	(bak08),y
		bne 	(fwd08),Y

		.echo **FAIL  BNE  zptr

		bne 	$12, :+
		bne 	bak08, -
		bne 	fwd08, +

		.echo **FAIL  BNE  zpx

		bne 	$12,X
		bne 	bak08,x
		bne 	fwd08,X

		.echo **FAIL  BNE  zpxi

		bne 	($12,X)
		bne 	(bak08,x)
		bne 	(fwd08,X)

		.echo **FAIL  BNE  zpy

		bne 	$12,Y
		bne 	bak08,y
		bne 	fwd08,Y


:	; forward ref for BNE

; -------------------------------

:	; backward ref for BPL

		.echo **PASS  BPL  ab  (as pcr)

		Bpl 	$1234
		Bpl 	bak16
		Bpl 	fwd16

		.echo **FAIL  BPL  abi

		bpl 	($1234)
		bpl 	(bak16)
		bpl 	(fwd16)

		.echo **FAIL  BPL  abimm

		bpl 	#12, $1234
		bpl 	#bak08, bak16
		bpl 	#$82, fwd16

		.echo **FAIL  BPL  abimx

		bpl 	#12, $1234,x
		bpl 	#bak08, bak16,X
		bpl 	#$82, fwd16,x

		.echo **FAIL  BPL  abx

		bpl 	$1234,X
		bpl 	bak16,x
		bpl 	fwd16,X

		.echo **FAIL  BPL  abxfr

		bpl 	$32, $1234, $5678
		bpl 	$1234, bak08, fwd08
		bpl 	fwd08, bak16, fwd16

		.echo **FAIL  BPL  abxi

		bpl 	($1234,X)
		bpl 	(bak16,x)
		bpl 	(fwd16,X)

		.echo **FAIL  BPL  aby

		bpl 	$1234,Y
		bpl 	bak16,y
		bpl 	fwd16,Y

		.echo **FAIL  BPL  acc

		bpl 	A
		bpl 	a

		.echo **FAIL  BPL  imm

		bpl 	#$12
		bpl 	#bak08
		bpl 	#fwd08

		.echo **FAIL  BPL  imp

		bpl 

		.echo **PASS  BPL  pcr

		BPL 	:+
		BPL 	-
		BPL 	+
		BPL 	:-

		.echo **PASS  BPL  zp  (as pcr)

		Bpl 	$12
		Bpl 	bak08
		Bpl 	fwd08

		.echo **FAIL  BPL  zpi

		bpl 	($12)
		bpl 	(bak08)
		bpl 	(fwd08)

		.echo **FAIL  BPL  zpimm

		bpl 	#12, $34
		bpl 	#bak08, bak08
		bpl 	#$82, fwd08

		.echo **FAIL  BPL  zpimx

		bpl 	#12, $34,X
		bpl 	#bak08, bak08,x
		bpl 	#$82, fwd08,X

		.echo **FAIL  BPL  zpiy

		bpl 	($12),Y
		bpl 	(bak08),y
		bpl 	(fwd08),Y

		.echo **FAIL  BPL  zptr

		bpl 	$12, :+
		bpl 	bak08, -
		bpl 	fwd08, +

		.echo **FAIL  BPL  zpx

		bpl 	$12,X
		bpl 	bak08,x
		bpl 	fwd08,X

		.echo **FAIL  BPL  zpxi

		bpl 	($12,X)
		bpl 	(bak08,x)
		bpl 	(fwd08,X)

		.echo **FAIL  BPL  zpy

		bpl 	$12,Y
		bpl 	bak08,y
		bpl 	fwd08,Y


:	; forward ref for BPL

; -------------------------------

:	; backward ref for BRA

		.echo **PASS  BRA  ab  (as pcr)

		Bra 	$1234
		Bra 	bak16
		Bra 	fwd16

		.echo **FAIL  BRA  abi

		bra 	($1234)
		bra 	(bak16)
		bra 	(fwd16)

		.echo **FAIL  BRA  abimm

		bra 	#12, $1234
		bra 	#bak08, bak16
		bra 	#$82, fwd16

		.echo **FAIL  BRA  abimx

		bra 	#12, $1234,x
		bra 	#bak08, bak16,X
		bra 	#$82, fwd16,x

		.echo **FAIL  BRA  abx

		bra 	$1234,X
		bra 	bak16,x
		bra 	fwd16,X

		.echo **FAIL  BRA  abxfr

		bra 	$32, $1234, $5678
		bra 	$1234, bak08, fwd08
		bra 	fwd08, bak16, fwd16

		.echo **FAIL  BRA  abxi

		bra 	($1234,X)
		bra 	(bak16,x)
		bra 	(fwd16,X)

		.echo **FAIL  BRA  aby

		bra 	$1234,Y
		bra 	bak16,y
		bra 	fwd16,Y

		.echo **FAIL  BRA  acc

		bra 	A
		bra 	a

		.echo **FAIL  BRA  imm

		bra 	#$12
		bra 	#bak08
		bra 	#fwd08

		.echo **FAIL  BRA  imp

		bra 

		.echo **PASS  BRA  pcr

		BRA 	:+
		BRA 	-
		BRA 	+
		BRA 	:-

		.echo **PASS  BRA  zp  (as pcr)

		Bra 	$12
		Bra 	bak08
		Bra 	fwd08

		.echo **FAIL  BRA  zpi

		bra 	($12)
		bra 	(bak08)
		bra 	(fwd08)

		.echo **FAIL  BRA  zpimm

		bra 	#12, $34
		bra 	#bak08, bak08
		bra 	#$82, fwd08

		.echo **FAIL  BRA  zpimx

		bra 	#12, $34,X
		bra 	#bak08, bak08,x
		bra 	#$82, fwd08,X

		.echo **FAIL  BRA  zpiy

		bra 	($12),Y
		bra 	(bak08),y
		bra 	(fwd08),Y

		.echo **FAIL  BRA  zptr

		bra 	$12, :+
		bra 	bak08, -
		bra 	fwd08, +

		.echo **FAIL  BRA  zpx

		bra 	$12,X
		bra 	bak08,x
		bra 	fwd08,X

		.echo **FAIL  BRA  zpxi

		bra 	($12,X)
		bra 	(bak08,x)
		bra 	(fwd08,X)

		.echo **FAIL  BRA  zpy

		bra 	$12,Y
		bra 	bak08,y
		bra 	fwd08,Y


:	; forward ref for BRA

; -------------------------------

:	; backward ref for BRK

		.echo **PASS  BRK  ab  (as zp)

		Brk 	$1234
		Brk 	bak16
		Brk 	fwd16

		.echo **FAIL  BRK  abi

		brk 	($1234)
		brk 	(bak16)
		brk 	(fwd16)

		.echo **FAIL  BRK  abimm

		brk 	#12, $1234
		brk 	#bak08, bak16
		brk 	#$82, fwd16

		.echo **FAIL  BRK  abimx

		brk 	#12, $1234,x
		brk 	#bak08, bak16,X
		brk 	#$82, fwd16,x

		.echo **FAIL  BRK  abx

		brk 	$1234,X
		brk 	bak16,x
		brk 	fwd16,X

		.echo **FAIL  BRK  abxfr

		brk 	$32, $1234, $5678
		brk 	$1234, bak08, fwd08
		brk 	fwd08, bak16, fwd16

		.echo **FAIL  BRK  abxi

		brk 	($1234,X)
		brk 	(bak16,x)
		brk 	(fwd16,X)

		.echo **FAIL  BRK  aby

		brk 	$1234,Y
		brk 	bak16,y
		brk 	fwd16,Y

		.echo **FAIL  BRK  acc

		brk 	A
		brk 	a

		.echo **PASS  BRK  imm

		BRK 	#$12
		BRK 	#bak08
		BRK 	#fwd08

		.echo **PASS  BRK  imp

		BRK 

		.echo **PASS  BRK  pcr  (as zp)

		Brk 	:+
		Brk 	-
		Brk 	+
		Brk 	:-

		.echo **PASS  BRK  zp

		BRK 	$12
		BRK 	bak08
		BRK 	fwd08

		.echo **FAIL  BRK  zpi

		brk 	($12)
		brk 	(bak08)
		brk 	(fwd08)

		.echo **FAIL  BRK  zpimm

		brk 	#12, $34
		brk 	#bak08, bak08
		brk 	#$82, fwd08

		.echo **FAIL  BRK  zpimx

		brk 	#12, $34,X
		brk 	#bak08, bak08,x
		brk 	#$82, fwd08,X

		.echo **FAIL  BRK  zpiy

		brk 	($12),Y
		brk 	(bak08),y
		brk 	(fwd08),Y

		.echo **FAIL  BRK  zptr

		brk 	$12, :+
		brk 	bak08, -
		brk 	fwd08, +

		.echo **FAIL  BRK  zpx

		brk 	$12,X
		brk 	bak08,x
		brk 	fwd08,X

		.echo **FAIL  BRK  zpxi

		brk 	($12,X)
		brk 	(bak08,x)
		brk 	(fwd08,X)

		.echo **FAIL  BRK  zpy

		brk 	$12,Y
		brk 	bak08,y
		brk 	fwd08,Y


:	; forward ref for BRK

; -------------------------------

:	; backward ref for BSR

		.echo **PASS  BSR  ab  (as pcr)

		Bsr 	$1234
		Bsr 	bak16
		Bsr 	fwd16

		.echo **FAIL  BSR  abi

		bsr 	($1234)
		bsr 	(bak16)
		bsr 	(fwd16)

		.echo **FAIL  BSR  abimm

		bsr 	#12, $1234
		bsr 	#bak08, bak16
		bsr 	#$82, fwd16

		.echo **FAIL  BSR  abimx

		bsr 	#12, $1234,x
		bsr 	#bak08, bak16,X
		bsr 	#$82, fwd16,x

		.echo **FAIL  BSR  abx

		bsr 	$1234,X
		bsr 	bak16,x
		bsr 	fwd16,X

		.echo **FAIL  BSR  abxfr

		bsr 	$32, $1234, $5678
		bsr 	$1234, bak08, fwd08
		bsr 	fwd08, bak16, fwd16

		.echo **FAIL  BSR  abxi

		bsr 	($1234,X)
		bsr 	(bak16,x)
		bsr 	(fwd16,X)

		.echo **FAIL  BSR  aby

		bsr 	$1234,Y
		bsr 	bak16,y
		bsr 	fwd16,Y

		.echo **FAIL  BSR  acc

		bsr 	A
		bsr 	a

		.echo **FAIL  BSR  imm

		bsr 	#$12
		bsr 	#bak08
		bsr 	#fwd08

		.echo **FAIL  BSR  imp

		bsr 

		.echo **PASS  BSR  pcr

		BSR 	:+
		BSR 	-
		BSR 	+
		BSR 	:-

		.echo **PASS  BSR  zp  (as pcr)

		Bsr 	$12
		Bsr 	bak08
		Bsr 	fwd08

		.echo **FAIL  BSR  zpi

		bsr 	($12)
		bsr 	(bak08)
		bsr 	(fwd08)

		.echo **FAIL  BSR  zpimm

		bsr 	#12, $34
		bsr 	#bak08, bak08
		bsr 	#$82, fwd08

		.echo **FAIL  BSR  zpimx

		bsr 	#12, $34,X
		bsr 	#bak08, bak08,x
		bsr 	#$82, fwd08,X

		.echo **FAIL  BSR  zpiy

		bsr 	($12),Y
		bsr 	(bak08),y
		bsr 	(fwd08),Y

		.echo **FAIL  BSR  zptr

		bsr 	$12, :+
		bsr 	bak08, -
		bsr 	fwd08, +

		.echo **FAIL  BSR  zpx

		bsr 	$12,X
		bsr 	bak08,x
		bsr 	fwd08,X

		.echo **FAIL  BSR  zpxi

		bsr 	($12,X)
		bsr 	(bak08,x)
		bsr 	(fwd08,X)

		.echo **FAIL  BSR  zpy

		bsr 	$12,Y
		bsr 	bak08,y
		bsr 	fwd08,Y


:	; forward ref for BSR

; -------------------------------

:	; backward ref for BVC

		.echo **PASS  BVC  ab  (as pcr)

		Bvc 	$1234
		Bvc 	bak16
		Bvc 	fwd16

		.echo **FAIL  BVC  abi

		bvc 	($1234)
		bvc 	(bak16)
		bvc 	(fwd16)

		.echo **FAIL  BVC  abimm

		bvc 	#12, $1234
		bvc 	#bak08, bak16
		bvc 	#$82, fwd16

		.echo **FAIL  BVC  abimx

		bvc 	#12, $1234,x
		bvc 	#bak08, bak16,X
		bvc 	#$82, fwd16,x

		.echo **FAIL  BVC  abx

		bvc 	$1234,X
		bvc 	bak16,x
		bvc 	fwd16,X

		.echo **FAIL  BVC  abxfr

		bvc 	$32, $1234, $5678
		bvc 	$1234, bak08, fwd08
		bvc 	fwd08, bak16, fwd16

		.echo **FAIL  BVC  abxi

		bvc 	($1234,X)
		bvc 	(bak16,x)
		bvc 	(fwd16,X)

		.echo **FAIL  BVC  aby

		bvc 	$1234,Y
		bvc 	bak16,y
		bvc 	fwd16,Y

		.echo **FAIL  BVC  acc

		bvc 	A
		bvc 	a

		.echo **FAIL  BVC  imm

		bvc 	#$12
		bvc 	#bak08
		bvc 	#fwd08

		.echo **FAIL  BVC  imp

		bvc 

		.echo **PASS  BVC  pcr

		BVC 	:+
		BVC 	-
		BVC 	+
		BVC 	:-

		.echo **PASS  BVC  zp  (as pcr)

		Bvc 	$12
		Bvc 	bak08
		Bvc 	fwd08

		.echo **FAIL  BVC  zpi

		bvc 	($12)
		bvc 	(bak08)
		bvc 	(fwd08)

		.echo **FAIL  BVC  zpimm

		bvc 	#12, $34
		bvc 	#bak08, bak08
		bvc 	#$82, fwd08

		.echo **FAIL  BVC  zpimx

		bvc 	#12, $34,X
		bvc 	#bak08, bak08,x
		bvc 	#$82, fwd08,X

		.echo **FAIL  BVC  zpiy

		bvc 	($12),Y
		bvc 	(bak08),y
		bvc 	(fwd08),Y

		.echo **FAIL  BVC  zptr

		bvc 	$12, :+
		bvc 	bak08, -
		bvc 	fwd08, +

		.echo **FAIL  BVC  zpx

		bvc 	$12,X
		bvc 	bak08,x
		bvc 	fwd08,X

		.echo **FAIL  BVC  zpxi

		bvc 	($12,X)
		bvc 	(bak08,x)
		bvc 	(fwd08,X)

		.echo **FAIL  BVC  zpy

		bvc 	$12,Y
		bvc 	bak08,y
		bvc 	fwd08,Y


:	; forward ref for BVC

; -------------------------------

:	; backward ref for BVS

		.echo **PASS  BVS  ab  (as pcr)

		Bvs 	$1234
		Bvs 	bak16
		Bvs 	fwd16

		.echo **FAIL  BVS  abi

		bvs 	($1234)
		bvs 	(bak16)
		bvs 	(fwd16)

		.echo **FAIL  BVS  abimm

		bvs 	#12, $1234
		bvs 	#bak08, bak16
		bvs 	#$82, fwd16

		.echo **FAIL  BVS  abimx

		bvs 	#12, $1234,x
		bvs 	#bak08, bak16,X
		bvs 	#$82, fwd16,x

		.echo **FAIL  BVS  abx

		bvs 	$1234,X
		bvs 	bak16,x
		bvs 	fwd16,X

		.echo **FAIL  BVS  abxfr

		bvs 	$32, $1234, $5678
		bvs 	$1234, bak08, fwd08
		bvs 	fwd08, bak16, fwd16

		.echo **FAIL  BVS  abxi

		bvs 	($1234,X)
		bvs 	(bak16,x)
		bvs 	(fwd16,X)

		.echo **FAIL  BVS  aby

		bvs 	$1234,Y
		bvs 	bak16,y
		bvs 	fwd16,Y

		.echo **FAIL  BVS  acc

		bvs 	A
		bvs 	a

		.echo **FAIL  BVS  imm

		bvs 	#$12
		bvs 	#bak08
		bvs 	#fwd08

		.echo **FAIL  BVS  imp

		bvs 

		.echo **PASS  BVS  pcr

		BVS 	:+
		BVS 	-
		BVS 	+
		BVS 	:-

		.echo **PASS  BVS  zp  (as pcr)

		Bvs 	$12
		Bvs 	bak08
		Bvs 	fwd08

		.echo **FAIL  BVS  zpi

		bvs 	($12)
		bvs 	(bak08)
		bvs 	(fwd08)

		.echo **FAIL  BVS  zpimm

		bvs 	#12, $34
		bvs 	#bak08, bak08
		bvs 	#$82, fwd08

		.echo **FAIL  BVS  zpimx

		bvs 	#12, $34,X
		bvs 	#bak08, bak08,x
		bvs 	#$82, fwd08,X

		.echo **FAIL  BVS  zpiy

		bvs 	($12),Y
		bvs 	(bak08),y
		bvs 	(fwd08),Y

		.echo **FAIL  BVS  zptr

		bvs 	$12, :+
		bvs 	bak08, -
		bvs 	fwd08, +

		.echo **FAIL  BVS  zpx

		bvs 	$12,X
		bvs 	bak08,x
		bvs 	fwd08,X

		.echo **FAIL  BVS  zpxi

		bvs 	($12,X)
		bvs 	(bak08,x)
		bvs 	(fwd08,X)

		.echo **FAIL  BVS  zpy

		bvs 	$12,Y
		bvs 	bak08,y
		bvs 	fwd08,Y


:	; forward ref for BVS

; -------------------------------

:	; backward ref for CLA

		.echo **FAIL  CLA  ab

		cla 	$1234
		cla 	bak16
		cla 	fwd16

		.echo **FAIL  CLA  abi

		cla 	($1234)
		cla 	(bak16)
		cla 	(fwd16)

		.echo **FAIL  CLA  abimm

		cla 	#12, $1234
		cla 	#bak08, bak16
		cla 	#$82, fwd16

		.echo **FAIL  CLA  abimx

		cla 	#12, $1234,x
		cla 	#bak08, bak16,X
		cla 	#$82, fwd16,x

		.echo **FAIL  CLA  abx

		cla 	$1234,X
		cla 	bak16,x
		cla 	fwd16,X

		.echo **FAIL  CLA  abxfr

		cla 	$32, $1234, $5678
		cla 	$1234, bak08, fwd08
		cla 	fwd08, bak16, fwd16

		.echo **FAIL  CLA  abxi

		cla 	($1234,X)
		cla 	(bak16,x)
		cla 	(fwd16,X)

		.echo **FAIL  CLA  aby

		cla 	$1234,Y
		cla 	bak16,y
		cla 	fwd16,Y

		.echo **FAIL  CLA  acc

		cla 	A
		cla 	a

		.echo **FAIL  CLA  imm

		cla 	#$12
		cla 	#bak08
		cla 	#fwd08

		.echo **PASS  CLA  imp

		CLA 

		.echo **FAIL  CLA  pcr

		cla 	:+
		cla 	-
		cla 	+
		cla 	:-

		.echo **FAIL  CLA  zp

		cla 	$12
		cla 	bak08
		cla 	fwd08

		.echo **FAIL  CLA  zpi

		cla 	($12)
		cla 	(bak08)
		cla 	(fwd08)

		.echo **FAIL  CLA  zpimm

		cla 	#12, $34
		cla 	#bak08, bak08
		cla 	#$82, fwd08

		.echo **FAIL  CLA  zpimx

		cla 	#12, $34,X
		cla 	#bak08, bak08,x
		cla 	#$82, fwd08,X

		.echo **FAIL  CLA  zpiy

		cla 	($12),Y
		cla 	(bak08),y
		cla 	(fwd08),Y

		.echo **FAIL  CLA  zptr

		cla 	$12, :+
		cla 	bak08, -
		cla 	fwd08, +

		.echo **FAIL  CLA  zpx

		cla 	$12,X
		cla 	bak08,x
		cla 	fwd08,X

		.echo **FAIL  CLA  zpxi

		cla 	($12,X)
		cla 	(bak08,x)
		cla 	(fwd08,X)

		.echo **FAIL  CLA  zpy

		cla 	$12,Y
		cla 	bak08,y
		cla 	fwd08,Y


:	; forward ref for CLA

; -------------------------------

:	; backward ref for CLC

		.echo **FAIL  CLC  ab

		clc 	$1234
		clc 	bak16
		clc 	fwd16

		.echo **FAIL  CLC  abi

		clc 	($1234)
		clc 	(bak16)
		clc 	(fwd16)

		.echo **FAIL  CLC  abimm

		clc 	#12, $1234
		clc 	#bak08, bak16
		clc 	#$82, fwd16

		.echo **FAIL  CLC  abimx

		clc 	#12, $1234,x
		clc 	#bak08, bak16,X
		clc 	#$82, fwd16,x

		.echo **FAIL  CLC  abx

		clc 	$1234,X
		clc 	bak16,x
		clc 	fwd16,X

		.echo **FAIL  CLC  abxfr

		clc 	$32, $1234, $5678
		clc 	$1234, bak08, fwd08
		clc 	fwd08, bak16, fwd16

		.echo **FAIL  CLC  abxi

		clc 	($1234,X)
		clc 	(bak16,x)
		clc 	(fwd16,X)

		.echo **FAIL  CLC  aby

		clc 	$1234,Y
		clc 	bak16,y
		clc 	fwd16,Y

		.echo **FAIL  CLC  acc

		clc 	A
		clc 	a

		.echo **FAIL  CLC  imm

		clc 	#$12
		clc 	#bak08
		clc 	#fwd08

		.echo **PASS  CLC  imp

		CLC 

		.echo **FAIL  CLC  pcr

		clc 	:+
		clc 	-
		clc 	+
		clc 	:-

		.echo **FAIL  CLC  zp

		clc 	$12
		clc 	bak08
		clc 	fwd08

		.echo **FAIL  CLC  zpi

		clc 	($12)
		clc 	(bak08)
		clc 	(fwd08)

		.echo **FAIL  CLC  zpimm

		clc 	#12, $34
		clc 	#bak08, bak08
		clc 	#$82, fwd08

		.echo **FAIL  CLC  zpimx

		clc 	#12, $34,X
		clc 	#bak08, bak08,x
		clc 	#$82, fwd08,X

		.echo **FAIL  CLC  zpiy

		clc 	($12),Y
		clc 	(bak08),y
		clc 	(fwd08),Y

		.echo **FAIL  CLC  zptr

		clc 	$12, :+
		clc 	bak08, -
		clc 	fwd08, +

		.echo **FAIL  CLC  zpx

		clc 	$12,X
		clc 	bak08,x
		clc 	fwd08,X

		.echo **FAIL  CLC  zpxi

		clc 	($12,X)
		clc 	(bak08,x)
		clc 	(fwd08,X)

		.echo **FAIL  CLC  zpy

		clc 	$12,Y
		clc 	bak08,y
		clc 	fwd08,Y


:	; forward ref for CLC

; -------------------------------

:	; backward ref for CLD

		.echo **FAIL  CLD  ab

		cld 	$1234
		cld 	bak16
		cld 	fwd16

		.echo **FAIL  CLD  abi

		cld 	($1234)
		cld 	(bak16)
		cld 	(fwd16)

		.echo **FAIL  CLD  abimm

		cld 	#12, $1234
		cld 	#bak08, bak16
		cld 	#$82, fwd16

		.echo **FAIL  CLD  abimx

		cld 	#12, $1234,x
		cld 	#bak08, bak16,X
		cld 	#$82, fwd16,x

		.echo **FAIL  CLD  abx

		cld 	$1234,X
		cld 	bak16,x
		cld 	fwd16,X

		.echo **FAIL  CLD  abxfr

		cld 	$32, $1234, $5678
		cld 	$1234, bak08, fwd08
		cld 	fwd08, bak16, fwd16

		.echo **FAIL  CLD  abxi

		cld 	($1234,X)
		cld 	(bak16,x)
		cld 	(fwd16,X)

		.echo **FAIL  CLD  aby

		cld 	$1234,Y
		cld 	bak16,y
		cld 	fwd16,Y

		.echo **FAIL  CLD  acc

		cld 	A
		cld 	a

		.echo **FAIL  CLD  imm

		cld 	#$12
		cld 	#bak08
		cld 	#fwd08

		.echo **PASS  CLD  imp

		CLD 

		.echo **FAIL  CLD  pcr

		cld 	:+
		cld 	-
		cld 	+
		cld 	:-

		.echo **FAIL  CLD  zp

		cld 	$12
		cld 	bak08
		cld 	fwd08

		.echo **FAIL  CLD  zpi

		cld 	($12)
		cld 	(bak08)
		cld 	(fwd08)

		.echo **FAIL  CLD  zpimm

		cld 	#12, $34
		cld 	#bak08, bak08
		cld 	#$82, fwd08

		.echo **FAIL  CLD  zpimx

		cld 	#12, $34,X
		cld 	#bak08, bak08,x
		cld 	#$82, fwd08,X

		.echo **FAIL  CLD  zpiy

		cld 	($12),Y
		cld 	(bak08),y
		cld 	(fwd08),Y

		.echo **FAIL  CLD  zptr

		cld 	$12, :+
		cld 	bak08, -
		cld 	fwd08, +

		.echo **FAIL  CLD  zpx

		cld 	$12,X
		cld 	bak08,x
		cld 	fwd08,X

		.echo **FAIL  CLD  zpxi

		cld 	($12,X)
		cld 	(bak08,x)
		cld 	(fwd08,X)

		.echo **FAIL  CLD  zpy

		cld 	$12,Y
		cld 	bak08,y
		cld 	fwd08,Y


:	; forward ref for CLD

; -------------------------------

:	; backward ref for CLI

		.echo **FAIL  CLI  ab

		cli 	$1234
		cli 	bak16
		cli 	fwd16

		.echo **FAIL  CLI  abi

		cli 	($1234)
		cli 	(bak16)
		cli 	(fwd16)

		.echo **FAIL  CLI  abimm

		cli 	#12, $1234
		cli 	#bak08, bak16
		cli 	#$82, fwd16

		.echo **FAIL  CLI  abimx

		cli 	#12, $1234,x
		cli 	#bak08, bak16,X
		cli 	#$82, fwd16,x

		.echo **FAIL  CLI  abx

		cli 	$1234,X
		cli 	bak16,x
		cli 	fwd16,X

		.echo **FAIL  CLI  abxfr

		cli 	$32, $1234, $5678
		cli 	$1234, bak08, fwd08
		cli 	fwd08, bak16, fwd16

		.echo **FAIL  CLI  abxi

		cli 	($1234,X)
		cli 	(bak16,x)
		cli 	(fwd16,X)

		.echo **FAIL  CLI  aby

		cli 	$1234,Y
		cli 	bak16,y
		cli 	fwd16,Y

		.echo **FAIL  CLI  acc

		cli 	A
		cli 	a

		.echo **FAIL  CLI  imm

		cli 	#$12
		cli 	#bak08
		cli 	#fwd08

		.echo **PASS  CLI  imp

		CLI 

		.echo **FAIL  CLI  pcr

		cli 	:+
		cli 	-
		cli 	+
		cli 	:-

		.echo **FAIL  CLI  zp

		cli 	$12
		cli 	bak08
		cli 	fwd08

		.echo **FAIL  CLI  zpi

		cli 	($12)
		cli 	(bak08)
		cli 	(fwd08)

		.echo **FAIL  CLI  zpimm

		cli 	#12, $34
		cli 	#bak08, bak08
		cli 	#$82, fwd08

		.echo **FAIL  CLI  zpimx

		cli 	#12, $34,X
		cli 	#bak08, bak08,x
		cli 	#$82, fwd08,X

		.echo **FAIL  CLI  zpiy

		cli 	($12),Y
		cli 	(bak08),y
		cli 	(fwd08),Y

		.echo **FAIL  CLI  zptr

		cli 	$12, :+
		cli 	bak08, -
		cli 	fwd08, +

		.echo **FAIL  CLI  zpx

		cli 	$12,X
		cli 	bak08,x
		cli 	fwd08,X

		.echo **FAIL  CLI  zpxi

		cli 	($12,X)
		cli 	(bak08,x)
		cli 	(fwd08,X)

		.echo **FAIL  CLI  zpy

		cli 	$12,Y
		cli 	bak08,y
		cli 	fwd08,Y


:	; forward ref for CLI

; -------------------------------

:	; backward ref for CLV

		.echo **FAIL  CLV  ab

		clv 	$1234
		clv 	bak16
		clv 	fwd16

		.echo **FAIL  CLV  abi

		clv 	($1234)
		clv 	(bak16)
		clv 	(fwd16)

		.echo **FAIL  CLV  abimm

		clv 	#12, $1234
		clv 	#bak08, bak16
		clv 	#$82, fwd16

		.echo **FAIL  CLV  abimx

		clv 	#12, $1234,x
		clv 	#bak08, bak16,X
		clv 	#$82, fwd16,x

		.echo **FAIL  CLV  abx

		clv 	$1234,X
		clv 	bak16,x
		clv 	fwd16,X

		.echo **FAIL  CLV  abxfr

		clv 	$32, $1234, $5678
		clv 	$1234, bak08, fwd08
		clv 	fwd08, bak16, fwd16

		.echo **FAIL  CLV  abxi

		clv 	($1234,X)
		clv 	(bak16,x)
		clv 	(fwd16,X)

		.echo **FAIL  CLV  aby

		clv 	$1234,Y
		clv 	bak16,y
		clv 	fwd16,Y

		.echo **FAIL  CLV  acc

		clv 	A
		clv 	a

		.echo **FAIL  CLV  imm

		clv 	#$12
		clv 	#bak08
		clv 	#fwd08

		.echo **PASS  CLV  imp

		CLV 

		.echo **FAIL  CLV  pcr

		clv 	:+
		clv 	-
		clv 	+
		clv 	:-

		.echo **FAIL  CLV  zp

		clv 	$12
		clv 	bak08
		clv 	fwd08

		.echo **FAIL  CLV  zpi

		clv 	($12)
		clv 	(bak08)
		clv 	(fwd08)

		.echo **FAIL  CLV  zpimm

		clv 	#12, $34
		clv 	#bak08, bak08
		clv 	#$82, fwd08

		.echo **FAIL  CLV  zpimx

		clv 	#12, $34,X
		clv 	#bak08, bak08,x
		clv 	#$82, fwd08,X

		.echo **FAIL  CLV  zpiy

		clv 	($12),Y
		clv 	(bak08),y
		clv 	(fwd08),Y

		.echo **FAIL  CLV  zptr

		clv 	$12, :+
		clv 	bak08, -
		clv 	fwd08, +

		.echo **FAIL  CLV  zpx

		clv 	$12,X
		clv 	bak08,x
		clv 	fwd08,X

		.echo **FAIL  CLV  zpxi

		clv 	($12,X)
		clv 	(bak08,x)
		clv 	(fwd08,X)

		.echo **FAIL  CLV  zpy

		clv 	$12,Y
		clv 	bak08,y
		clv 	fwd08,Y


:	; forward ref for CLV

; -------------------------------

:	; backward ref for CLX

		.echo **FAIL  CLX  ab

		clx 	$1234
		clx 	bak16
		clx 	fwd16

		.echo **FAIL  CLX  abi

		clx 	($1234)
		clx 	(bak16)
		clx 	(fwd16)

		.echo **FAIL  CLX  abimm

		clx 	#12, $1234
		clx 	#bak08, bak16
		clx 	#$82, fwd16

		.echo **FAIL  CLX  abimx

		clx 	#12, $1234,x
		clx 	#bak08, bak16,X
		clx 	#$82, fwd16,x

		.echo **FAIL  CLX  abx

		clx 	$1234,X
		clx 	bak16,x
		clx 	fwd16,X

		.echo **FAIL  CLX  abxfr

		clx 	$32, $1234, $5678
		clx 	$1234, bak08, fwd08
		clx 	fwd08, bak16, fwd16

		.echo **FAIL  CLX  abxi

		clx 	($1234,X)
		clx 	(bak16,x)
		clx 	(fwd16,X)

		.echo **FAIL  CLX  aby

		clx 	$1234,Y
		clx 	bak16,y
		clx 	fwd16,Y

		.echo **FAIL  CLX  acc

		clx 	A
		clx 	a

		.echo **FAIL  CLX  imm

		clx 	#$12
		clx 	#bak08
		clx 	#fwd08

		.echo **PASS  CLX  imp

		CLX 

		.echo **FAIL  CLX  pcr

		clx 	:+
		clx 	-
		clx 	+
		clx 	:-

		.echo **FAIL  CLX  zp

		clx 	$12
		clx 	bak08
		clx 	fwd08

		.echo **FAIL  CLX  zpi

		clx 	($12)
		clx 	(bak08)
		clx 	(fwd08)

		.echo **FAIL  CLX  zpimm

		clx 	#12, $34
		clx 	#bak08, bak08
		clx 	#$82, fwd08

		.echo **FAIL  CLX  zpimx

		clx 	#12, $34,X
		clx 	#bak08, bak08,x
		clx 	#$82, fwd08,X

		.echo **FAIL  CLX  zpiy

		clx 	($12),Y
		clx 	(bak08),y
		clx 	(fwd08),Y

		.echo **FAIL  CLX  zptr

		clx 	$12, :+
		clx 	bak08, -
		clx 	fwd08, +

		.echo **FAIL  CLX  zpx

		clx 	$12,X
		clx 	bak08,x
		clx 	fwd08,X

		.echo **FAIL  CLX  zpxi

		clx 	($12,X)
		clx 	(bak08,x)
		clx 	(fwd08,X)

		.echo **FAIL  CLX  zpy

		clx 	$12,Y
		clx 	bak08,y
		clx 	fwd08,Y


:	; forward ref for CLX

; -------------------------------

:	; backward ref for CLY

		.echo **FAIL  CLY  ab

		cly 	$1234
		cly 	bak16
		cly 	fwd16

		.echo **FAIL  CLY  abi

		cly 	($1234)
		cly 	(bak16)
		cly 	(fwd16)

		.echo **FAIL  CLY  abimm

		cly 	#12, $1234
		cly 	#bak08, bak16
		cly 	#$82, fwd16

		.echo **FAIL  CLY  abimx

		cly 	#12, $1234,x
		cly 	#bak08, bak16,X
		cly 	#$82, fwd16,x

		.echo **FAIL  CLY  abx

		cly 	$1234,X
		cly 	bak16,x
		cly 	fwd16,X

		.echo **FAIL  CLY  abxfr

		cly 	$32, $1234, $5678
		cly 	$1234, bak08, fwd08
		cly 	fwd08, bak16, fwd16

		.echo **FAIL  CLY  abxi

		cly 	($1234,X)
		cly 	(bak16,x)
		cly 	(fwd16,X)

		.echo **FAIL  CLY  aby

		cly 	$1234,Y
		cly 	bak16,y
		cly 	fwd16,Y

		.echo **FAIL  CLY  acc

		cly 	A
		cly 	a

		.echo **FAIL  CLY  imm

		cly 	#$12
		cly 	#bak08
		cly 	#fwd08

		.echo **PASS  CLY  imp

		CLY 

		.echo **FAIL  CLY  pcr

		cly 	:+
		cly 	-
		cly 	+
		cly 	:-

		.echo **FAIL  CLY  zp

		cly 	$12
		cly 	bak08
		cly 	fwd08

		.echo **FAIL  CLY  zpi

		cly 	($12)
		cly 	(bak08)
		cly 	(fwd08)

		.echo **FAIL  CLY  zpimm

		cly 	#12, $34
		cly 	#bak08, bak08
		cly 	#$82, fwd08

		.echo **FAIL  CLY  zpimx

		cly 	#12, $34,X
		cly 	#bak08, bak08,x
		cly 	#$82, fwd08,X

		.echo **FAIL  CLY  zpiy

		cly 	($12),Y
		cly 	(bak08),y
		cly 	(fwd08),Y

		.echo **FAIL  CLY  zptr

		cly 	$12, :+
		cly 	bak08, -
		cly 	fwd08, +

		.echo **FAIL  CLY  zpx

		cly 	$12,X
		cly 	bak08,x
		cly 	fwd08,X

		.echo **FAIL  CLY  zpxi

		cly 	($12,X)
		cly 	(bak08,x)
		cly 	(fwd08,X)

		.echo **FAIL  CLY  zpy

		cly 	$12,Y
		cly 	bak08,y
		cly 	fwd08,Y


:	; forward ref for CLY

; -------------------------------

:	; backward ref for CMP

		.echo **PASS  CMP  ab

		CMP 	$1234
		CMP 	bak16
		CMP 	fwd16

		.echo **PASS  CMP  abi  (as zpi)

		Cmp 	($1234)
		Cmp 	(bak16)
		Cmp 	(fwd16)

		.echo **FAIL  CMP  abimm

		cmp 	#12, $1234
		cmp 	#bak08, bak16
		cmp 	#$82, fwd16

		.echo **FAIL  CMP  abimx

		cmp 	#12, $1234,x
		cmp 	#bak08, bak16,X
		cmp 	#$82, fwd16,x

		.echo **PASS  CMP  abx

		CMP 	$1234,X
		CMP 	bak16,x
		CMP 	fwd16,X

		.echo **FAIL  CMP  abxfr

		cmp 	$32, $1234, $5678
		cmp 	$1234, bak08, fwd08
		cmp 	fwd08, bak16, fwd16

		.echo **PASS  CMP  abxi  (as zpxi)

		Cmp 	($1234,X)
		Cmp 	(bak16,x)
		Cmp 	(fwd16,X)

		.echo **PASS  CMP  aby

		CMP 	$1234,Y
		CMP 	bak16,y
		CMP 	fwd16,Y

		.echo **FAIL  CMP  acc

		cmp 	A
		cmp 	a

		.echo **PASS  CMP  imm

		CMP 	#$12
		CMP 	#bak08
		CMP 	#fwd08

		.echo **FAIL  CMP  imp

		cmp 

		.echo **PASS  CMP  pcr  (as ab)

		Cmp 	:+
		Cmp 	-
		Cmp 	+
		Cmp 	:-

		.echo **PASS  CMP  zp

		CMP 	$12
		CMP 	bak08
		Cmp 	fwd08   	; (absolute)

		.echo **PASS  CMP  zpi

		CMP 	($12)
		CMP 	(bak08)
		CMP 	(fwd08)

		.echo **FAIL  CMP  zpimm

		cmp 	#12, $34
		cmp 	#bak08, bak08
		cmp 	#$82, fwd08

		.echo **FAIL  CMP  zpimx

		cmp 	#12, $34,X
		cmp 	#bak08, bak08,x
		cmp 	#$82, fwd08,X

		.echo **PASS  CMP  zpiy

		CMP 	($12),Y
		CMP 	(bak08),y
		CMP 	(fwd08),Y

		.echo **FAIL  CMP  zptr

		cmp 	$12, :+
		cmp 	bak08, -
		cmp 	fwd08, +

		.echo **PASS  CMP  zpx

		CMP 	$12,X
		CMP 	bak08,x
		Cmp 	fwd08,X 	; (absolute)

		.echo **PASS  CMP  zpxi

		CMP 	($12,X)
		CMP 	(bak08,x)
		CMP 	(fwd08,X)

		.echo **PASS  CMP  zpy  (as aby)

		Cmp 	$12,Y
		Cmp 	bak08,y
		Cmp 	fwd08,Y


:	; forward ref for CMP

; -------------------------------

:	; backward ref for CPX

		.echo **PASS  CPX  ab

		CPX 	$1234
		CPX 	bak16
		CPX 	fwd16

		.echo **FAIL  CPX  abi

		cpx 	($1234)
		cpx 	(bak16)
		cpx 	(fwd16)

		.echo **FAIL  CPX  abimm

		cpx 	#12, $1234
		cpx 	#bak08, bak16
		cpx 	#$82, fwd16

		.echo **FAIL  CPX  abimx

		cpx 	#12, $1234,x
		cpx 	#bak08, bak16,X
		cpx 	#$82, fwd16,x

		.echo **FAIL  CPX  abx

		cpx 	$1234,X
		cpx 	bak16,x
		cpx 	fwd16,X

		.echo **FAIL  CPX  abxfr

		cpx 	$32, $1234, $5678
		cpx 	$1234, bak08, fwd08
		cpx 	fwd08, bak16, fwd16

		.echo **FAIL  CPX  abxi

		cpx 	($1234,X)
		cpx 	(bak16,x)
		cpx 	(fwd16,X)

		.echo **FAIL  CPX  aby

		cpx 	$1234,Y
		cpx 	bak16,y
		cpx 	fwd16,Y

		.echo **FAIL  CPX  acc

		cpx 	A
		cpx 	a

		.echo **PASS  CPX  imm

		CPX 	#$12
		CPX 	#bak08
		CPX 	#fwd08

		.echo **FAIL  CPX  imp

		cpx 

		.echo **PASS  CPX  pcr  (as ab)

		Cpx 	:+
		Cpx 	-
		Cpx 	+
		Cpx 	:-

		.echo **PASS  CPX  zp

		CPX 	$12
		CPX 	bak08
		Cpx 	fwd08   	; (absolute)

		.echo **FAIL  CPX  zpi

		cpx 	($12)
		cpx 	(bak08)
		cpx 	(fwd08)

		.echo **FAIL  CPX  zpimm

		cpx 	#12, $34
		cpx 	#bak08, bak08
		cpx 	#$82, fwd08

		.echo **FAIL  CPX  zpimx

		cpx 	#12, $34,X
		cpx 	#bak08, bak08,x
		cpx 	#$82, fwd08,X

		.echo **FAIL  CPX  zpiy

		cpx 	($12),Y
		cpx 	(bak08),y
		cpx 	(fwd08),Y

		.echo **FAIL  CPX  zptr

		cpx 	$12, :+
		cpx 	bak08, -
		cpx 	fwd08, +

		.echo **FAIL  CPX  zpx

		cpx 	$12,X
		cpx 	bak08,x
		cpx 	fwd08,X

		.echo **FAIL  CPX  zpxi

		cpx 	($12,X)
		cpx 	(bak08,x)
		cpx 	(fwd08,X)

		.echo **FAIL  CPX  zpy

		cpx 	$12,Y
		cpx 	bak08,y
		cpx 	fwd08,Y


:	; forward ref for CPX

; -------------------------------

:	; backward ref for CPY

		.echo **PASS  CPY  ab

		CPY 	$1234
		CPY 	bak16
		CPY 	fwd16

		.echo **FAIL  CPY  abi

		cpy 	($1234)
		cpy 	(bak16)
		cpy 	(fwd16)

		.echo **FAIL  CPY  abimm

		cpy 	#12, $1234
		cpy 	#bak08, bak16
		cpy 	#$82, fwd16

		.echo **FAIL  CPY  abimx

		cpy 	#12, $1234,x
		cpy 	#bak08, bak16,X
		cpy 	#$82, fwd16,x

		.echo **FAIL  CPY  abx

		cpy 	$1234,X
		cpy 	bak16,x
		cpy 	fwd16,X

		.echo **FAIL  CPY  abxfr

		cpy 	$32, $1234, $5678
		cpy 	$1234, bak08, fwd08
		cpy 	fwd08, bak16, fwd16

		.echo **FAIL  CPY  abxi

		cpy 	($1234,X)
		cpy 	(bak16,x)
		cpy 	(fwd16,X)

		.echo **FAIL  CPY  aby

		cpy 	$1234,Y
		cpy 	bak16,y
		cpy 	fwd16,Y

		.echo **FAIL  CPY  acc

		cpy 	A
		cpy 	a

		.echo **PASS  CPY  imm

		CPY 	#$12
		CPY 	#bak08
		CPY 	#fwd08

		.echo **FAIL  CPY  imp

		cpy 

		.echo **PASS  CPY  pcr  (as ab)

		Cpy 	:+
		Cpy 	-
		Cpy 	+
		Cpy 	:-

		.echo **PASS  CPY  zp

		CPY 	$12
		CPY 	bak08
		Cpy 	fwd08   	; (absolute)

		.echo **FAIL  CPY  zpi

		cpy 	($12)
		cpy 	(bak08)
		cpy 	(fwd08)

		.echo **FAIL  CPY  zpimm

		cpy 	#12, $34
		cpy 	#bak08, bak08
		cpy 	#$82, fwd08

		.echo **FAIL  CPY  zpimx

		cpy 	#12, $34,X
		cpy 	#bak08, bak08,x
		cpy 	#$82, fwd08,X

		.echo **FAIL  CPY  zpiy

		cpy 	($12),Y
		cpy 	(bak08),y
		cpy 	(fwd08),Y

		.echo **FAIL  CPY  zptr

		cpy 	$12, :+
		cpy 	bak08, -
		cpy 	fwd08, +

		.echo **FAIL  CPY  zpx

		cpy 	$12,X
		cpy 	bak08,x
		cpy 	fwd08,X

		.echo **FAIL  CPY  zpxi

		cpy 	($12,X)
		cpy 	(bak08,x)
		cpy 	(fwd08,X)

		.echo **FAIL  CPY  zpy

		cpy 	$12,Y
		cpy 	bak08,y
		cpy 	fwd08,Y


:	; forward ref for CPY

; -------------------------------

:	; backward ref for CSH

		.echo **FAIL  CSH  ab

		csh 	$1234
		csh 	bak16
		csh 	fwd16

		.echo **FAIL  CSH  abi

		csh 	($1234)
		csh 	(bak16)
		csh 	(fwd16)

		.echo **FAIL  CSH  abimm

		csh 	#12, $1234
		csh 	#bak08, bak16
		csh 	#$82, fwd16

		.echo **FAIL  CSH  abimx

		csh 	#12, $1234,x
		csh 	#bak08, bak16,X
		csh 	#$82, fwd16,x

		.echo **FAIL  CSH  abx

		csh 	$1234,X
		csh 	bak16,x
		csh 	fwd16,X

		.echo **FAIL  CSH  abxfr

		csh 	$32, $1234, $5678
		csh 	$1234, bak08, fwd08
		csh 	fwd08, bak16, fwd16

		.echo **FAIL  CSH  abxi

		csh 	($1234,X)
		csh 	(bak16,x)
		csh 	(fwd16,X)

		.echo **FAIL  CSH  aby

		csh 	$1234,Y
		csh 	bak16,y
		csh 	fwd16,Y

		.echo **FAIL  CSH  acc

		csh 	A
		csh 	a

		.echo **FAIL  CSH  imm

		csh 	#$12
		csh 	#bak08
		csh 	#fwd08

		.echo **PASS  CSH  imp

		CSH 

		.echo **FAIL  CSH  pcr

		csh 	:+
		csh 	-
		csh 	+
		csh 	:-

		.echo **FAIL  CSH  zp

		csh 	$12
		csh 	bak08
		csh 	fwd08

		.echo **FAIL  CSH  zpi

		csh 	($12)
		csh 	(bak08)
		csh 	(fwd08)

		.echo **FAIL  CSH  zpimm

		csh 	#12, $34
		csh 	#bak08, bak08
		csh 	#$82, fwd08

		.echo **FAIL  CSH  zpimx

		csh 	#12, $34,X
		csh 	#bak08, bak08,x
		csh 	#$82, fwd08,X

		.echo **FAIL  CSH  zpiy

		csh 	($12),Y
		csh 	(bak08),y
		csh 	(fwd08),Y

		.echo **FAIL  CSH  zptr

		csh 	$12, :+
		csh 	bak08, -
		csh 	fwd08, +

		.echo **FAIL  CSH  zpx

		csh 	$12,X
		csh 	bak08,x
		csh 	fwd08,X

		.echo **FAIL  CSH  zpxi

		csh 	($12,X)
		csh 	(bak08,x)
		csh 	(fwd08,X)

		.echo **FAIL  CSH  zpy

		csh 	$12,Y
		csh 	bak08,y
		csh 	fwd08,Y


:	; forward ref for CSH

; -------------------------------

:	; backward ref for CSL

		.echo **FAIL  CSL  ab

		csl 	$1234
		csl 	bak16
		csl 	fwd16

		.echo **FAIL  CSL  abi

		csl 	($1234)
		csl 	(bak16)
		csl 	(fwd16)

		.echo **FAIL  CSL  abimm

		csl 	#12, $1234
		csl 	#bak08, bak16
		csl 	#$82, fwd16

		.echo **FAIL  CSL  abimx

		csl 	#12, $1234,x
		csl 	#bak08, bak16,X
		csl 	#$82, fwd16,x

		.echo **FAIL  CSL  abx

		csl 	$1234,X
		csl 	bak16,x
		csl 	fwd16,X

		.echo **FAIL  CSL  abxfr

		csl 	$32, $1234, $5678
		csl 	$1234, bak08, fwd08
		csl 	fwd08, bak16, fwd16

		.echo **FAIL  CSL  abxi

		csl 	($1234,X)
		csl 	(bak16,x)
		csl 	(fwd16,X)

		.echo **FAIL  CSL  aby

		csl 	$1234,Y
		csl 	bak16,y
		csl 	fwd16,Y

		.echo **FAIL  CSL  acc

		csl 	A
		csl 	a

		.echo **FAIL  CSL  imm

		csl 	#$12
		csl 	#bak08
		csl 	#fwd08

		.echo **PASS  CSL  imp

		CSL 

		.echo **FAIL  CSL  pcr

		csl 	:+
		csl 	-
		csl 	+
		csl 	:-

		.echo **FAIL  CSL  zp

		csl 	$12
		csl 	bak08
		csl 	fwd08

		.echo **FAIL  CSL  zpi

		csl 	($12)
		csl 	(bak08)
		csl 	(fwd08)

		.echo **FAIL  CSL  zpimm

		csl 	#12, $34
		csl 	#bak08, bak08
		csl 	#$82, fwd08

		.echo **FAIL  CSL  zpimx

		csl 	#12, $34,X
		csl 	#bak08, bak08,x
		csl 	#$82, fwd08,X

		.echo **FAIL  CSL  zpiy

		csl 	($12),Y
		csl 	(bak08),y
		csl 	(fwd08),Y

		.echo **FAIL  CSL  zptr

		csl 	$12, :+
		csl 	bak08, -
		csl 	fwd08, +

		.echo **FAIL  CSL  zpx

		csl 	$12,X
		csl 	bak08,x
		csl 	fwd08,X

		.echo **FAIL  CSL  zpxi

		csl 	($12,X)
		csl 	(bak08,x)
		csl 	(fwd08,X)

		.echo **FAIL  CSL  zpy

		csl 	$12,Y
		csl 	bak08,y
		csl 	fwd08,Y


:	; forward ref for CSL

; -------------------------------

:	; backward ref for DEA

		.echo **FAIL  DEA  ab

		dea 	$1234
		dea 	bak16
		dea 	fwd16

		.echo **FAIL  DEA  abi

		dea 	($1234)
		dea 	(bak16)
		dea 	(fwd16)

		.echo **FAIL  DEA  abimm

		dea 	#12, $1234
		dea 	#bak08, bak16
		dea 	#$82, fwd16

		.echo **FAIL  DEA  abimx

		dea 	#12, $1234,x
		dea 	#bak08, bak16,X
		dea 	#$82, fwd16,x

		.echo **FAIL  DEA  abx

		dea 	$1234,X
		dea 	bak16,x
		dea 	fwd16,X

		.echo **FAIL  DEA  abxfr

		dea 	$32, $1234, $5678
		dea 	$1234, bak08, fwd08
		dea 	fwd08, bak16, fwd16

		.echo **FAIL  DEA  abxi

		dea 	($1234,X)
		dea 	(bak16,x)
		dea 	(fwd16,X)

		.echo **FAIL  DEA  aby

		dea 	$1234,Y
		dea 	bak16,y
		dea 	fwd16,Y

		.echo **FAIL  DEA  acc

		dea 	A
		dea 	a

		.echo **FAIL  DEA  imm

		dea 	#$12
		dea 	#bak08
		dea 	#fwd08

		.echo **PASS  DEA  imp

		DEA 

		.echo **FAIL  DEA  pcr

		dea 	:+
		dea 	-
		dea 	+
		dea 	:-

		.echo **FAIL  DEA  zp

		dea 	$12
		dea 	bak08
		dea 	fwd08

		.echo **FAIL  DEA  zpi

		dea 	($12)
		dea 	(bak08)
		dea 	(fwd08)

		.echo **FAIL  DEA  zpimm

		dea 	#12, $34
		dea 	#bak08, bak08
		dea 	#$82, fwd08

		.echo **FAIL  DEA  zpimx

		dea 	#12, $34,X
		dea 	#bak08, bak08,x
		dea 	#$82, fwd08,X

		.echo **FAIL  DEA  zpiy

		dea 	($12),Y
		dea 	(bak08),y
		dea 	(fwd08),Y

		.echo **FAIL  DEA  zptr

		dea 	$12, :+
		dea 	bak08, -
		dea 	fwd08, +

		.echo **FAIL  DEA  zpx

		dea 	$12,X
		dea 	bak08,x
		dea 	fwd08,X

		.echo **FAIL  DEA  zpxi

		dea 	($12,X)
		dea 	(bak08,x)
		dea 	(fwd08,X)

		.echo **FAIL  DEA  zpy

		dea 	$12,Y
		dea 	bak08,y
		dea 	fwd08,Y


:	; forward ref for DEA

; -------------------------------

:	; backward ref for DEC

		.echo **PASS  DEC  ab

		DEC 	$1234
		DEC 	bak16
		DEC 	fwd16

		.echo **FAIL  DEC  abi

		dec 	($1234)
		dec 	(bak16)
		dec 	(fwd16)

		.echo **FAIL  DEC  abimm

		dec 	#12, $1234
		dec 	#bak08, bak16
		dec 	#$82, fwd16

		.echo **FAIL  DEC  abimx

		dec 	#12, $1234,x
		dec 	#bak08, bak16,X
		dec 	#$82, fwd16,x

		.echo **PASS  DEC  abx

		DEC 	$1234,X
		DEC 	bak16,x
		DEC 	fwd16,X

		.echo **FAIL  DEC  abxfr

		dec 	$32, $1234, $5678
		dec 	$1234, bak08, fwd08
		dec 	fwd08, bak16, fwd16

		.echo **FAIL  DEC  abxi

		dec 	($1234,X)
		dec 	(bak16,x)
		dec 	(fwd16,X)

		.echo **FAIL  DEC  aby

		dec 	$1234,Y
		dec 	bak16,y
		dec 	fwd16,Y

		.echo **PASS  DEC  acc

		DEC 	A
		DEC 	a

		.echo **FAIL  DEC  imm

		dec 	#$12
		dec 	#bak08
		dec 	#fwd08

		.echo **PASS  DEC  imp

		DEC 

		.echo **PASS  DEC  pcr  (as ab)

		Dec 	:+
		Dec 	-
		Dec 	+
		Dec 	:-

		.echo **PASS  DEC  zp

		DEC 	$12
		DEC 	bak08
		Dec 	fwd08   	; (absolute)

		.echo **FAIL  DEC  zpi

		dec 	($12)
		dec 	(bak08)
		dec 	(fwd08)

		.echo **FAIL  DEC  zpimm

		dec 	#12, $34
		dec 	#bak08, bak08
		dec 	#$82, fwd08

		.echo **FAIL  DEC  zpimx

		dec 	#12, $34,X
		dec 	#bak08, bak08,x
		dec 	#$82, fwd08,X

		.echo **FAIL  DEC  zpiy

		dec 	($12),Y
		dec 	(bak08),y
		dec 	(fwd08),Y

		.echo **FAIL  DEC  zptr

		dec 	$12, :+
		dec 	bak08, -
		dec 	fwd08, +

		.echo **PASS  DEC  zpx

		DEC 	$12,X
		DEC 	bak08,x
		Dec 	fwd08,X 	; (absolute)

		.echo **FAIL  DEC  zpxi

		dec 	($12,X)
		dec 	(bak08,x)
		dec 	(fwd08,X)

		.echo **FAIL  DEC  zpy

		dec 	$12,Y
		dec 	bak08,y
		dec 	fwd08,Y


:	; forward ref for DEC

; -------------------------------

:	; backward ref for DEX

		.echo **FAIL  DEX  ab

		dex 	$1234
		dex 	bak16
		dex 	fwd16

		.echo **FAIL  DEX  abi

		dex 	($1234)
		dex 	(bak16)
		dex 	(fwd16)

		.echo **FAIL  DEX  abimm

		dex 	#12, $1234
		dex 	#bak08, bak16
		dex 	#$82, fwd16

		.echo **FAIL  DEX  abimx

		dex 	#12, $1234,x
		dex 	#bak08, bak16,X
		dex 	#$82, fwd16,x

		.echo **FAIL  DEX  abx

		dex 	$1234,X
		dex 	bak16,x
		dex 	fwd16,X

		.echo **FAIL  DEX  abxfr

		dex 	$32, $1234, $5678
		dex 	$1234, bak08, fwd08
		dex 	fwd08, bak16, fwd16

		.echo **FAIL  DEX  abxi

		dex 	($1234,X)
		dex 	(bak16,x)
		dex 	(fwd16,X)

		.echo **FAIL  DEX  aby

		dex 	$1234,Y
		dex 	bak16,y
		dex 	fwd16,Y

		.echo **FAIL  DEX  acc

		dex 	A
		dex 	a

		.echo **FAIL  DEX  imm

		dex 	#$12
		dex 	#bak08
		dex 	#fwd08

		.echo **PASS  DEX  imp

		DEX 

		.echo **FAIL  DEX  pcr

		dex 	:+
		dex 	-
		dex 	+
		dex 	:-

		.echo **FAIL  DEX  zp

		dex 	$12
		dex 	bak08
		dex 	fwd08

		.echo **FAIL  DEX  zpi

		dex 	($12)
		dex 	(bak08)
		dex 	(fwd08)

		.echo **FAIL  DEX  zpimm

		dex 	#12, $34
		dex 	#bak08, bak08
		dex 	#$82, fwd08

		.echo **FAIL  DEX  zpimx

		dex 	#12, $34,X
		dex 	#bak08, bak08,x
		dex 	#$82, fwd08,X

		.echo **FAIL  DEX  zpiy

		dex 	($12),Y
		dex 	(bak08),y
		dex 	(fwd08),Y

		.echo **FAIL  DEX  zptr

		dex 	$12, :+
		dex 	bak08, -
		dex 	fwd08, +

		.echo **FAIL  DEX  zpx

		dex 	$12,X
		dex 	bak08,x
		dex 	fwd08,X

		.echo **FAIL  DEX  zpxi

		dex 	($12,X)
		dex 	(bak08,x)
		dex 	(fwd08,X)

		.echo **FAIL  DEX  zpy

		dex 	$12,Y
		dex 	bak08,y
		dex 	fwd08,Y


:	; forward ref for DEX

; -------------------------------

:	; backward ref for DEY

		.echo **FAIL  DEY  ab

		dey 	$1234
		dey 	bak16
		dey 	fwd16

		.echo **FAIL  DEY  abi

		dey 	($1234)
		dey 	(bak16)
		dey 	(fwd16)

		.echo **FAIL  DEY  abimm

		dey 	#12, $1234
		dey 	#bak08, bak16
		dey 	#$82, fwd16

		.echo **FAIL  DEY  abimx

		dey 	#12, $1234,x
		dey 	#bak08, bak16,X
		dey 	#$82, fwd16,x

		.echo **FAIL  DEY  abx

		dey 	$1234,X
		dey 	bak16,x
		dey 	fwd16,X

		.echo **FAIL  DEY  abxfr

		dey 	$32, $1234, $5678
		dey 	$1234, bak08, fwd08
		dey 	fwd08, bak16, fwd16

		.echo **FAIL  DEY  abxi

		dey 	($1234,X)
		dey 	(bak16,x)
		dey 	(fwd16,X)

		.echo **FAIL  DEY  aby

		dey 	$1234,Y
		dey 	bak16,y
		dey 	fwd16,Y

		.echo **FAIL  DEY  acc

		dey 	A
		dey 	a

		.echo **FAIL  DEY  imm

		dey 	#$12
		dey 	#bak08
		dey 	#fwd08

		.echo **PASS  DEY  imp

		DEY 

		.echo **FAIL  DEY  pcr

		dey 	:+
		dey 	-
		dey 	+
		dey 	:-

		.echo **FAIL  DEY  zp

		dey 	$12
		dey 	bak08
		dey 	fwd08

		.echo **FAIL  DEY  zpi

		dey 	($12)
		dey 	(bak08)
		dey 	(fwd08)

		.echo **FAIL  DEY  zpimm

		dey 	#12, $34
		dey 	#bak08, bak08
		dey 	#$82, fwd08

		.echo **FAIL  DEY  zpimx

		dey 	#12, $34,X
		dey 	#bak08, bak08,x
		dey 	#$82, fwd08,X

		.echo **FAIL  DEY  zpiy

		dey 	($12),Y
		dey 	(bak08),y
		dey 	(fwd08),Y

		.echo **FAIL  DEY  zptr

		dey 	$12, :+
		dey 	bak08, -
		dey 	fwd08, +

		.echo **FAIL  DEY  zpx

		dey 	$12,X
		dey 	bak08,x
		dey 	fwd08,X

		.echo **FAIL  DEY  zpxi

		dey 	($12,X)
		dey 	(bak08,x)
		dey 	(fwd08,X)

		.echo **FAIL  DEY  zpy

		dey 	$12,Y
		dey 	bak08,y
		dey 	fwd08,Y


:	; forward ref for DEY

; -------------------------------

:	; backward ref for EOR

		.echo **PASS  EOR  ab

		EOR 	$1234
		EOR 	bak16
		EOR 	fwd16

		.echo **PASS  EOR  abi  (as zpi)

		Eor 	($1234)
		Eor 	(bak16)
		Eor 	(fwd16)

		.echo **FAIL  EOR  abimm

		eor 	#12, $1234
		eor 	#bak08, bak16
		eor 	#$82, fwd16

		.echo **FAIL  EOR  abimx

		eor 	#12, $1234,x
		eor 	#bak08, bak16,X
		eor 	#$82, fwd16,x

		.echo **PASS  EOR  abx

		EOR 	$1234,X
		EOR 	bak16,x
		EOR 	fwd16,X

		.echo **FAIL  EOR  abxfr

		eor 	$32, $1234, $5678
		eor 	$1234, bak08, fwd08
		eor 	fwd08, bak16, fwd16

		.echo **PASS  EOR  abxi  (as zpxi)

		Eor 	($1234,X)
		Eor 	(bak16,x)
		Eor 	(fwd16,X)

		.echo **PASS  EOR  aby

		EOR 	$1234,Y
		EOR 	bak16,y
		EOR 	fwd16,Y

		.echo **FAIL  EOR  acc

		eor 	A
		eor 	a

		.echo **PASS  EOR  imm

		EOR 	#$12
		EOR 	#bak08
		EOR 	#fwd08

		.echo **FAIL  EOR  imp

		eor 

		.echo **PASS  EOR  pcr  (as ab)

		Eor 	:+
		Eor 	-
		Eor 	+
		Eor 	:-

		.echo **PASS  EOR  zp

		EOR 	$12
		EOR 	bak08
		Eor 	fwd08   	; (absolute)

		.echo **PASS  EOR  zpi

		EOR 	($12)
		EOR 	(bak08)
		EOR 	(fwd08)

		.echo **FAIL  EOR  zpimm

		eor 	#12, $34
		eor 	#bak08, bak08
		eor 	#$82, fwd08

		.echo **FAIL  EOR  zpimx

		eor 	#12, $34,X
		eor 	#bak08, bak08,x
		eor 	#$82, fwd08,X

		.echo **PASS  EOR  zpiy

		EOR 	($12),Y
		EOR 	(bak08),y
		EOR 	(fwd08),Y

		.echo **FAIL  EOR  zptr

		eor 	$12, :+
		eor 	bak08, -
		eor 	fwd08, +

		.echo **PASS  EOR  zpx

		EOR 	$12,X
		EOR 	bak08,x
		Eor 	fwd08,X 	; (absolute)

		.echo **PASS  EOR  zpxi

		EOR 	($12,X)
		EOR 	(bak08,x)
		EOR 	(fwd08,X)

		.echo **PASS  EOR  zpy  (as aby)

		Eor 	$12,Y
		Eor 	bak08,y
		Eor 	fwd08,Y


:	; forward ref for EOR

; -------------------------------

:	; backward ref for INA

		.echo **FAIL  INA  ab

		ina 	$1234
		ina 	bak16
		ina 	fwd16

		.echo **FAIL  INA  abi

		ina 	($1234)
		ina 	(bak16)
		ina 	(fwd16)

		.echo **FAIL  INA  abimm

		ina 	#12, $1234
		ina 	#bak08, bak16
		ina 	#$82, fwd16

		.echo **FAIL  INA  abimx

		ina 	#12, $1234,x
		ina 	#bak08, bak16,X
		ina 	#$82, fwd16,x

		.echo **FAIL  INA  abx

		ina 	$1234,X
		ina 	bak16,x
		ina 	fwd16,X

		.echo **FAIL  INA  abxfr

		ina 	$32, $1234, $5678
		ina 	$1234, bak08, fwd08
		ina 	fwd08, bak16, fwd16

		.echo **FAIL  INA  abxi

		ina 	($1234,X)
		ina 	(bak16,x)
		ina 	(fwd16,X)

		.echo **FAIL  INA  aby

		ina 	$1234,Y
		ina 	bak16,y
		ina 	fwd16,Y

		.echo **FAIL  INA  acc

		ina 	A
		ina 	a

		.echo **FAIL  INA  imm

		ina 	#$12
		ina 	#bak08
		ina 	#fwd08

		.echo **PASS  INA  imp

		INA 

		.echo **FAIL  INA  pcr

		ina 	:+
		ina 	-
		ina 	+
		ina 	:-

		.echo **FAIL  INA  zp

		ina 	$12
		ina 	bak08
		ina 	fwd08

		.echo **FAIL  INA  zpi

		ina 	($12)
		ina 	(bak08)
		ina 	(fwd08)

		.echo **FAIL  INA  zpimm

		ina 	#12, $34
		ina 	#bak08, bak08
		ina 	#$82, fwd08

		.echo **FAIL  INA  zpimx

		ina 	#12, $34,X
		ina 	#bak08, bak08,x
		ina 	#$82, fwd08,X

		.echo **FAIL  INA  zpiy

		ina 	($12),Y
		ina 	(bak08),y
		ina 	(fwd08),Y

		.echo **FAIL  INA  zptr

		ina 	$12, :+
		ina 	bak08, -
		ina 	fwd08, +

		.echo **FAIL  INA  zpx

		ina 	$12,X
		ina 	bak08,x
		ina 	fwd08,X

		.echo **FAIL  INA  zpxi

		ina 	($12,X)
		ina 	(bak08,x)
		ina 	(fwd08,X)

		.echo **FAIL  INA  zpy

		ina 	$12,Y
		ina 	bak08,y
		ina 	fwd08,Y


:	; forward ref for INA

; -------------------------------

:	; backward ref for INC

		.echo **PASS  INC  ab

		INC 	$1234
		INC 	bak16
		INC 	fwd16

		.echo **FAIL  INC  abi

		inc 	($1234)
		inc 	(bak16)
		inc 	(fwd16)

		.echo **FAIL  INC  abimm

		inc 	#12, $1234
		inc 	#bak08, bak16
		inc 	#$82, fwd16

		.echo **FAIL  INC  abimx

		inc 	#12, $1234,x
		inc 	#bak08, bak16,X
		inc 	#$82, fwd16,x

		.echo **PASS  INC  abx

		INC 	$1234,X
		INC 	bak16,x
		INC 	fwd16,X

		.echo **FAIL  INC  abxfr

		inc 	$32, $1234, $5678
		inc 	$1234, bak08, fwd08
		inc 	fwd08, bak16, fwd16

		.echo **FAIL  INC  abxi

		inc 	($1234,X)
		inc 	(bak16,x)
		inc 	(fwd16,X)

		.echo **FAIL  INC  aby

		inc 	$1234,Y
		inc 	bak16,y
		inc 	fwd16,Y

		.echo **PASS  INC  acc

		INC 	A
		INC 	a

		.echo **FAIL  INC  imm

		inc 	#$12
		inc 	#bak08
		inc 	#fwd08

		.echo **PASS  INC  imp

		INC 

		.echo **PASS  INC  pcr  (as ab)

		Inc 	:+
		Inc 	-
		Inc 	+
		Inc 	:-

		.echo **PASS  INC  zp

		INC 	$12
		INC 	bak08
		Inc 	fwd08   	; (absolute)

		.echo **FAIL  INC  zpi

		inc 	($12)
		inc 	(bak08)
		inc 	(fwd08)

		.echo **FAIL  INC  zpimm

		inc 	#12, $34
		inc 	#bak08, bak08
		inc 	#$82, fwd08

		.echo **FAIL  INC  zpimx

		inc 	#12, $34,X
		inc 	#bak08, bak08,x
		inc 	#$82, fwd08,X

		.echo **FAIL  INC  zpiy

		inc 	($12),Y
		inc 	(bak08),y
		inc 	(fwd08),Y

		.echo **FAIL  INC  zptr

		inc 	$12, :+
		inc 	bak08, -
		inc 	fwd08, +

		.echo **PASS  INC  zpx

		INC 	$12,X
		INC 	bak08,x
		Inc 	fwd08,X 	; (absolute)

		.echo **FAIL  INC  zpxi

		inc 	($12,X)
		inc 	(bak08,x)
		inc 	(fwd08,X)

		.echo **FAIL  INC  zpy

		inc 	$12,Y
		inc 	bak08,y
		inc 	fwd08,Y


:	; forward ref for INC

; -------------------------------

:	; backward ref for INX

		.echo **FAIL  INX  ab

		inx 	$1234
		inx 	bak16
		inx 	fwd16

		.echo **FAIL  INX  abi

		inx 	($1234)
		inx 	(bak16)
		inx 	(fwd16)

		.echo **FAIL  INX  abimm

		inx 	#12, $1234
		inx 	#bak08, bak16
		inx 	#$82, fwd16

		.echo **FAIL  INX  abimx

		inx 	#12, $1234,x
		inx 	#bak08, bak16,X
		inx 	#$82, fwd16,x

		.echo **FAIL  INX  abx

		inx 	$1234,X
		inx 	bak16,x
		inx 	fwd16,X

		.echo **FAIL  INX  abxfr

		inx 	$32, $1234, $5678
		inx 	$1234, bak08, fwd08
		inx 	fwd08, bak16, fwd16

		.echo **FAIL  INX  abxi

		inx 	($1234,X)
		inx 	(bak16,x)
		inx 	(fwd16,X)

		.echo **FAIL  INX  aby

		inx 	$1234,Y
		inx 	bak16,y
		inx 	fwd16,Y

		.echo **FAIL  INX  acc

		inx 	A
		inx 	a

		.echo **FAIL  INX  imm

		inx 	#$12
		inx 	#bak08
		inx 	#fwd08

		.echo **PASS  INX  imp

		INX 

		.echo **FAIL  INX  pcr

		inx 	:+
		inx 	-
		inx 	+
		inx 	:-

		.echo **FAIL  INX  zp

		inx 	$12
		inx 	bak08
		inx 	fwd08

		.echo **FAIL  INX  zpi

		inx 	($12)
		inx 	(bak08)
		inx 	(fwd08)

		.echo **FAIL  INX  zpimm

		inx 	#12, $34
		inx 	#bak08, bak08
		inx 	#$82, fwd08

		.echo **FAIL  INX  zpimx

		inx 	#12, $34,X
		inx 	#bak08, bak08,x
		inx 	#$82, fwd08,X

		.echo **FAIL  INX  zpiy

		inx 	($12),Y
		inx 	(bak08),y
		inx 	(fwd08),Y

		.echo **FAIL  INX  zptr

		inx 	$12, :+
		inx 	bak08, -
		inx 	fwd08, +

		.echo **FAIL  INX  zpx

		inx 	$12,X
		inx 	bak08,x
		inx 	fwd08,X

		.echo **FAIL  INX  zpxi

		inx 	($12,X)
		inx 	(bak08,x)
		inx 	(fwd08,X)

		.echo **FAIL  INX  zpy

		inx 	$12,Y
		inx 	bak08,y
		inx 	fwd08,Y


:	; forward ref for INX

; -------------------------------

:	; backward ref for INY

		.echo **FAIL  INY  ab

		iny 	$1234
		iny 	bak16
		iny 	fwd16

		.echo **FAIL  INY  abi

		iny 	($1234)
		iny 	(bak16)
		iny 	(fwd16)

		.echo **FAIL  INY  abimm

		iny 	#12, $1234
		iny 	#bak08, bak16
		iny 	#$82, fwd16

		.echo **FAIL  INY  abimx

		iny 	#12, $1234,x
		iny 	#bak08, bak16,X
		iny 	#$82, fwd16,x

		.echo **FAIL  INY  abx

		iny 	$1234,X
		iny 	bak16,x
		iny 	fwd16,X

		.echo **FAIL  INY  abxfr

		iny 	$32, $1234, $5678
		iny 	$1234, bak08, fwd08
		iny 	fwd08, bak16, fwd16

		.echo **FAIL  INY  abxi

		iny 	($1234,X)
		iny 	(bak16,x)
		iny 	(fwd16,X)

		.echo **FAIL  INY  aby

		iny 	$1234,Y
		iny 	bak16,y
		iny 	fwd16,Y

		.echo **FAIL  INY  acc

		iny 	A
		iny 	a

		.echo **FAIL  INY  imm

		iny 	#$12
		iny 	#bak08
		iny 	#fwd08

		.echo **PASS  INY  imp

		INY 

		.echo **FAIL  INY  pcr

		iny 	:+
		iny 	-
		iny 	+
		iny 	:-

		.echo **FAIL  INY  zp

		iny 	$12
		iny 	bak08
		iny 	fwd08

		.echo **FAIL  INY  zpi

		iny 	($12)
		iny 	(bak08)
		iny 	(fwd08)

		.echo **FAIL  INY  zpimm

		iny 	#12, $34
		iny 	#bak08, bak08
		iny 	#$82, fwd08

		.echo **FAIL  INY  zpimx

		iny 	#12, $34,X
		iny 	#bak08, bak08,x
		iny 	#$82, fwd08,X

		.echo **FAIL  INY  zpiy

		iny 	($12),Y
		iny 	(bak08),y
		iny 	(fwd08),Y

		.echo **FAIL  INY  zptr

		iny 	$12, :+
		iny 	bak08, -
		iny 	fwd08, +

		.echo **FAIL  INY  zpx

		iny 	$12,X
		iny 	bak08,x
		iny 	fwd08,X

		.echo **FAIL  INY  zpxi

		iny 	($12,X)
		iny 	(bak08,x)
		iny 	(fwd08,X)

		.echo **FAIL  INY  zpy

		iny 	$12,Y
		iny 	bak08,y
		iny 	fwd08,Y


:	; forward ref for INY

; -------------------------------

:	; backward ref for JMP

		.echo **PASS  JMP  ab

		JMP 	$1234
		JMP 	bak16
		JMP 	fwd16

		.echo **PASS  JMP  abi

		JMP 	($1234)
		JMP 	(bak16)
		JMP 	(fwd16)

		.echo **FAIL  JMP  abimm

		jmp 	#12, $1234
		jmp 	#bak08, bak16
		jmp 	#$82, fwd16

		.echo **FAIL  JMP  abimx

		jmp 	#12, $1234,x
		jmp 	#bak08, bak16,X
		jmp 	#$82, fwd16,x

		.echo **FAIL  JMP  abx

		jmp 	$1234,X
		jmp 	bak16,x
		jmp 	fwd16,X

		.echo **FAIL  JMP  abxfr

		jmp 	$32, $1234, $5678
		jmp 	$1234, bak08, fwd08
		jmp 	fwd08, bak16, fwd16

		.echo **PASS  JMP  abxi

		JMP 	($1234,X)
		JMP 	(bak16,x)
		JMP 	(fwd16,X)

		.echo **FAIL  JMP  aby

		jmp 	$1234,Y
		jmp 	bak16,y
		jmp 	fwd16,Y

		.echo **FAIL  JMP  acc

		jmp 	A
		jmp 	a

		.echo **FAIL  JMP  imm

		jmp 	#$12
		jmp 	#bak08
		jmp 	#fwd08

		.echo **FAIL  JMP  imp

		jmp 

		.echo **PASS  JMP  pcr  (as ab)

		Jmp 	:+
		Jmp 	-
		Jmp 	+
		Jmp 	:-

		.echo **PASS  JMP  zp  (as ab)

		Jmp 	$12
		Jmp 	bak08
		Jmp 	fwd08

		.echo **PASS  JMP  zpi  (as abi)

		Jmp 	($12)
		Jmp 	(bak08)
		Jmp 	(fwd08)

		.echo **FAIL  JMP  zpimm

		jmp 	#12, $34
		jmp 	#bak08, bak08
		jmp 	#$82, fwd08

		.echo **FAIL  JMP  zpimx

		jmp 	#12, $34,X
		jmp 	#bak08, bak08,x
		jmp 	#$82, fwd08,X

		.echo **FAIL  JMP  zpiy

		jmp 	($12),Y
		jmp 	(bak08),y
		jmp 	(fwd08),Y

		.echo **FAIL  JMP  zptr

		jmp 	$12, :+
		jmp 	bak08, -
		jmp 	fwd08, +

		.echo **FAIL  JMP  zpx

		jmp 	$12,X
		jmp 	bak08,x
		jmp 	fwd08,X

		.echo **PASS  JMP  zpxi  (as abxi)

		Jmp 	($12,X)
		Jmp 	(bak08,x)
		Jmp 	(fwd08,X)

		.echo **FAIL  JMP  zpy

		jmp 	$12,Y
		jmp 	bak08,y
		jmp 	fwd08,Y


:	; forward ref for JMP

; -------------------------------

:	; backward ref for JSR

		.echo **PASS  JSR  ab

		JSR 	$1234
		JSR 	bak16
		JSR 	fwd16

		.echo **FAIL  JSR  abi

		jsr 	($1234)
		jsr 	(bak16)
		jsr 	(fwd16)

		.echo **FAIL  JSR  abimm

		jsr 	#12, $1234
		jsr 	#bak08, bak16
		jsr 	#$82, fwd16

		.echo **FAIL  JSR  abimx

		jsr 	#12, $1234,x
		jsr 	#bak08, bak16,X
		jsr 	#$82, fwd16,x

		.echo **FAIL  JSR  abx

		jsr 	$1234,X
		jsr 	bak16,x
		jsr 	fwd16,X

		.echo **FAIL  JSR  abxfr

		jsr 	$32, $1234, $5678
		jsr 	$1234, bak08, fwd08
		jsr 	fwd08, bak16, fwd16

		.echo **FAIL  JSR  abxi

		jsr 	($1234,X)
		jsr 	(bak16,x)
		jsr 	(fwd16,X)

		.echo **FAIL  JSR  aby

		jsr 	$1234,Y
		jsr 	bak16,y
		jsr 	fwd16,Y

		.echo **FAIL  JSR  acc

		jsr 	A
		jsr 	a

		.echo **FAIL  JSR  imm

		jsr 	#$12
		jsr 	#bak08
		jsr 	#fwd08

		.echo **FAIL  JSR  imp

		jsr 

		.echo **PASS  JSR  pcr  (as ab)

		Jsr 	:+
		Jsr 	-
		Jsr 	+
		Jsr 	:-

		.echo **PASS  JSR  zp  (as ab)

		Jsr 	$12
		Jsr 	bak08
		Jsr 	fwd08

		.echo **FAIL  JSR  zpi

		jsr 	($12)
		jsr 	(bak08)
		jsr 	(fwd08)

		.echo **FAIL  JSR  zpimm

		jsr 	#12, $34
		jsr 	#bak08, bak08
		jsr 	#$82, fwd08

		.echo **FAIL  JSR  zpimx

		jsr 	#12, $34,X
		jsr 	#bak08, bak08,x
		jsr 	#$82, fwd08,X

		.echo **FAIL  JSR  zpiy

		jsr 	($12),Y
		jsr 	(bak08),y
		jsr 	(fwd08),Y

		.echo **FAIL  JSR  zptr

		jsr 	$12, :+
		jsr 	bak08, -
		jsr 	fwd08, +

		.echo **FAIL  JSR  zpx

		jsr 	$12,X
		jsr 	bak08,x
		jsr 	fwd08,X

		.echo **FAIL  JSR  zpxi

		jsr 	($12,X)
		jsr 	(bak08,x)
		jsr 	(fwd08,X)

		.echo **FAIL  JSR  zpy

		jsr 	$12,Y
		jsr 	bak08,y
		jsr 	fwd08,Y


:	; forward ref for JSR

; -------------------------------

:	; backward ref for LDA

		.echo **PASS  LDA  ab

		LDA 	$1234
		LDA 	bak16
		LDA 	fwd16

		.echo **PASS  LDA  abi  (as zpi)

		Lda 	($1234)
		Lda 	(bak16)
		Lda 	(fwd16)

		.echo **FAIL  LDA  abimm

		lda 	#12, $1234
		lda 	#bak08, bak16
		lda 	#$82, fwd16

		.echo **FAIL  LDA  abimx

		lda 	#12, $1234,x
		lda 	#bak08, bak16,X
		lda 	#$82, fwd16,x

		.echo **PASS  LDA  abx

		LDA 	$1234,X
		LDA 	bak16,x
		LDA 	fwd16,X

		.echo **FAIL  LDA  abxfr

		lda 	$32, $1234, $5678
		lda 	$1234, bak08, fwd08
		lda 	fwd08, bak16, fwd16

		.echo **PASS  LDA  abxi  (as zpxi)

		Lda 	($1234,X)
		Lda 	(bak16,x)
		Lda 	(fwd16,X)

		.echo **PASS  LDA  aby

		LDA 	$1234,Y
		LDA 	bak16,y
		LDA 	fwd16,Y

		.echo **FAIL  LDA  acc

		lda 	A
		lda 	a

		.echo **PASS  LDA  imm

		LDA 	#$12
		LDA 	#bak08
		LDA 	#fwd08

		.echo **FAIL  LDA  imp

		lda 

		.echo **PASS  LDA  pcr  (as ab)

		Lda 	:+
		Lda 	-
		Lda 	+
		Lda 	:-

		.echo **PASS  LDA  zp

		LDA 	$12
		LDA 	bak08
		Lda 	fwd08   	; (absolute)

		.echo **PASS  LDA  zpi

		LDA 	($12)
		LDA 	(bak08)
		LDA 	(fwd08)

		.echo **FAIL  LDA  zpimm

		lda 	#12, $34
		lda 	#bak08, bak08
		lda 	#$82, fwd08

		.echo **FAIL  LDA  zpimx

		lda 	#12, $34,X
		lda 	#bak08, bak08,x
		lda 	#$82, fwd08,X

		.echo **PASS  LDA  zpiy

		LDA 	($12),Y
		LDA 	(bak08),y
		LDA 	(fwd08),Y

		.echo **FAIL  LDA  zptr

		lda 	$12, :+
		lda 	bak08, -
		lda 	fwd08, +

		.echo **PASS  LDA  zpx

		LDA 	$12,X
		LDA 	bak08,x
		Lda 	fwd08,X 	; (absolute)

		.echo **PASS  LDA  zpxi

		LDA 	($12,X)
		LDA 	(bak08,x)
		LDA 	(fwd08,X)

		.echo **PASS  LDA  zpy  (as aby)

		Lda 	$12,Y
		Lda 	bak08,y
		Lda 	fwd08,Y


:	; forward ref for LDA

; -------------------------------

:	; backward ref for LDX

		.echo **PASS  LDX  ab

		LDX 	$1234
		LDX 	bak16
		LDX 	fwd16

		.echo **FAIL  LDX  abi

		ldx 	($1234)
		ldx 	(bak16)
		ldx 	(fwd16)

		.echo **FAIL  LDX  abimm

		ldx 	#12, $1234
		ldx 	#bak08, bak16
		ldx 	#$82, fwd16

		.echo **FAIL  LDX  abimx

		ldx 	#12, $1234,x
		ldx 	#bak08, bak16,X
		ldx 	#$82, fwd16,x

		.echo **FAIL  LDX  abx

		ldx 	$1234,X
		ldx 	bak16,x
		ldx 	fwd16,X

		.echo **FAIL  LDX  abxfr

		ldx 	$32, $1234, $5678
		ldx 	$1234, bak08, fwd08
		ldx 	fwd08, bak16, fwd16

		.echo **FAIL  LDX  abxi

		ldx 	($1234,X)
		ldx 	(bak16,x)
		ldx 	(fwd16,X)

		.echo **PASS  LDX  aby

		LDX 	$1234,Y
		LDX 	bak16,y
		LDX 	fwd16,Y

		.echo **FAIL  LDX  acc

		ldx 	A
		ldx 	a

		.echo **PASS  LDX  imm

		LDX 	#$12
		LDX 	#bak08
		LDX 	#fwd08

		.echo **FAIL  LDX  imp

		ldx 

		.echo **PASS  LDX  pcr  (as ab)

		Ldx 	:+
		Ldx 	-
		Ldx 	+
		Ldx 	:-

		.echo **PASS  LDX  zp

		LDX 	$12
		LDX 	bak08
		Ldx 	fwd08   	; (absolute)

		.echo **FAIL  LDX  zpi

		ldx 	($12)
		ldx 	(bak08)
		ldx 	(fwd08)

		.echo **FAIL  LDX  zpimm

		ldx 	#12, $34
		ldx 	#bak08, bak08
		ldx 	#$82, fwd08

		.echo **FAIL  LDX  zpimx

		ldx 	#12, $34,X
		ldx 	#bak08, bak08,x
		ldx 	#$82, fwd08,X

		.echo **FAIL  LDX  zpiy

		ldx 	($12),Y
		ldx 	(bak08),y
		ldx 	(fwd08),Y

		.echo **FAIL  LDX  zptr

		ldx 	$12, :+
		ldx 	bak08, -
		ldx 	fwd08, +

		.echo **FAIL  LDX  zpx

		ldx 	$12,X
		ldx 	bak08,x
		ldx 	fwd08,X

		.echo **FAIL  LDX  zpxi

		ldx 	($12,X)
		ldx 	(bak08,x)
		ldx 	(fwd08,X)

		.echo **PASS  LDX  zpy

		LDX 	$12,Y
		LDX 	bak08,y
		Ldx 	fwd08,Y 	; (absolute)


:	; forward ref for LDX

; -------------------------------

:	; backward ref for LDY

		.echo **PASS  LDY  ab

		LDY 	$1234
		LDY 	bak16
		LDY 	fwd16

		.echo **FAIL  LDY  abi

		ldy 	($1234)
		ldy 	(bak16)
		ldy 	(fwd16)

		.echo **FAIL  LDY  abimm

		ldy 	#12, $1234
		ldy 	#bak08, bak16
		ldy 	#$82, fwd16

		.echo **FAIL  LDY  abimx

		ldy 	#12, $1234,x
		ldy 	#bak08, bak16,X
		ldy 	#$82, fwd16,x

		.echo **PASS  LDY  abx

		LDY 	$1234,X
		LDY 	bak16,x
		LDY 	fwd16,X

		.echo **FAIL  LDY  abxfr

		ldy 	$32, $1234, $5678
		ldy 	$1234, bak08, fwd08
		ldy 	fwd08, bak16, fwd16

		.echo **FAIL  LDY  abxi

		ldy 	($1234,X)
		ldy 	(bak16,x)
		ldy 	(fwd16,X)

		.echo **FAIL  LDY  aby

		ldy 	$1234,Y
		ldy 	bak16,y
		ldy 	fwd16,Y

		.echo **FAIL  LDY  acc

		ldy 	A
		ldy 	a

		.echo **PASS  LDY  imm

		LDY 	#$12
		LDY 	#bak08
		LDY 	#fwd08

		.echo **FAIL  LDY  imp

		ldy 

		.echo **PASS  LDY  pcr  (as ab)

		Ldy 	:+
		Ldy 	-
		Ldy 	+
		Ldy 	:-

		.echo **PASS  LDY  zp

		LDY 	$12
		LDY 	bak08
		Ldy 	fwd08   	; (absolute)

		.echo **FAIL  LDY  zpi

		ldy 	($12)
		ldy 	(bak08)
		ldy 	(fwd08)

		.echo **FAIL  LDY  zpimm

		ldy 	#12, $34
		ldy 	#bak08, bak08
		ldy 	#$82, fwd08

		.echo **FAIL  LDY  zpimx

		ldy 	#12, $34,X
		ldy 	#bak08, bak08,x
		ldy 	#$82, fwd08,X

		.echo **FAIL  LDY  zpiy

		ldy 	($12),Y
		ldy 	(bak08),y
		ldy 	(fwd08),Y

		.echo **FAIL  LDY  zptr

		ldy 	$12, :+
		ldy 	bak08, -
		ldy 	fwd08, +

		.echo **PASS  LDY  zpx

		LDY 	$12,X
		LDY 	bak08,x
		Ldy 	fwd08,X 	; (absolute)

		.echo **FAIL  LDY  zpxi

		ldy 	($12,X)
		ldy 	(bak08,x)
		ldy 	(fwd08,X)

		.echo **FAIL  LDY  zpy

		ldy 	$12,Y
		ldy 	bak08,y
		ldy 	fwd08,Y


:	; forward ref for LDY

; -------------------------------

:	; backward ref for LSR

		.echo **PASS  LSR  ab

		LSR 	$1234
		LSR 	bak16
		LSR 	fwd16

		.echo **FAIL  LSR  abi

		lsr 	($1234)
		lsr 	(bak16)
		lsr 	(fwd16)

		.echo **FAIL  LSR  abimm

		lsr 	#12, $1234
		lsr 	#bak08, bak16
		lsr 	#$82, fwd16

		.echo **FAIL  LSR  abimx

		lsr 	#12, $1234,x
		lsr 	#bak08, bak16,X
		lsr 	#$82, fwd16,x

		.echo **PASS  LSR  abx

		LSR 	$1234,X
		LSR 	bak16,x
		LSR 	fwd16,X

		.echo **FAIL  LSR  abxfr

		lsr 	$32, $1234, $5678
		lsr 	$1234, bak08, fwd08
		lsr 	fwd08, bak16, fwd16

		.echo **FAIL  LSR  abxi

		lsr 	($1234,X)
		lsr 	(bak16,x)
		lsr 	(fwd16,X)

		.echo **FAIL  LSR  aby

		lsr 	$1234,Y
		lsr 	bak16,y
		lsr 	fwd16,Y

		.echo **PASS  LSR  acc

		LSR 	A
		LSR 	a

		.echo **FAIL  LSR  imm

		lsr 	#$12
		lsr 	#bak08
		lsr 	#fwd08

		.echo **PASS  LSR  imp

		LSR 

		.echo **PASS  LSR  pcr  (as ab)

		Lsr 	:+
		Lsr 	-
		Lsr 	+
		Lsr 	:-

		.echo **PASS  LSR  zp

		LSR 	$12
		LSR 	bak08
		Lsr 	fwd08   	; (absolute)

		.echo **FAIL  LSR  zpi

		lsr 	($12)
		lsr 	(bak08)
		lsr 	(fwd08)

		.echo **FAIL  LSR  zpimm

		lsr 	#12, $34
		lsr 	#bak08, bak08
		lsr 	#$82, fwd08

		.echo **FAIL  LSR  zpimx

		lsr 	#12, $34,X
		lsr 	#bak08, bak08,x
		lsr 	#$82, fwd08,X

		.echo **FAIL  LSR  zpiy

		lsr 	($12),Y
		lsr 	(bak08),y
		lsr 	(fwd08),Y

		.echo **FAIL  LSR  zptr

		lsr 	$12, :+
		lsr 	bak08, -
		lsr 	fwd08, +

		.echo **PASS  LSR  zpx

		LSR 	$12,X
		LSR 	bak08,x
		Lsr 	fwd08,X 	; (absolute)

		.echo **FAIL  LSR  zpxi

		lsr 	($12,X)
		lsr 	(bak08,x)
		lsr 	(fwd08,X)

		.echo **FAIL  LSR  zpy

		lsr 	$12,Y
		lsr 	bak08,y
		lsr 	fwd08,Y


:	; forward ref for LSR

; -------------------------------

:	; backward ref for NOP

		.echo **FAIL  NOP  ab

		nop 	$1234
		nop 	bak16
		nop 	fwd16

		.echo **FAIL  NOP  abi

		nop 	($1234)
		nop 	(bak16)
		nop 	(fwd16)

		.echo **FAIL  NOP  abimm

		nop 	#12, $1234
		nop 	#bak08, bak16
		nop 	#$82, fwd16

		.echo **FAIL  NOP  abimx

		nop 	#12, $1234,x
		nop 	#bak08, bak16,X
		nop 	#$82, fwd16,x

		.echo **FAIL  NOP  abx

		nop 	$1234,X
		nop 	bak16,x
		nop 	fwd16,X

		.echo **FAIL  NOP  abxfr

		nop 	$32, $1234, $5678
		nop 	$1234, bak08, fwd08
		nop 	fwd08, bak16, fwd16

		.echo **FAIL  NOP  abxi

		nop 	($1234,X)
		nop 	(bak16,x)
		nop 	(fwd16,X)

		.echo **FAIL  NOP  aby

		nop 	$1234,Y
		nop 	bak16,y
		nop 	fwd16,Y

		.echo **FAIL  NOP  acc

		nop 	A
		nop 	a

		.echo **FAIL  NOP  imm

		nop 	#$12
		nop 	#bak08
		nop 	#fwd08

		.echo **PASS  NOP  imp

		NOP 

		.echo **FAIL  NOP  pcr

		nop 	:+
		nop 	-
		nop 	+
		nop 	:-

		.echo **FAIL  NOP  zp

		nop 	$12
		nop 	bak08
		nop 	fwd08

		.echo **FAIL  NOP  zpi

		nop 	($12)
		nop 	(bak08)
		nop 	(fwd08)

		.echo **FAIL  NOP  zpimm

		nop 	#12, $34
		nop 	#bak08, bak08
		nop 	#$82, fwd08

		.echo **FAIL  NOP  zpimx

		nop 	#12, $34,X
		nop 	#bak08, bak08,x
		nop 	#$82, fwd08,X

		.echo **FAIL  NOP  zpiy

		nop 	($12),Y
		nop 	(bak08),y
		nop 	(fwd08),Y

		.echo **FAIL  NOP  zptr

		nop 	$12, :+
		nop 	bak08, -
		nop 	fwd08, +

		.echo **FAIL  NOP  zpx

		nop 	$12,X
		nop 	bak08,x
		nop 	fwd08,X

		.echo **FAIL  NOP  zpxi

		nop 	($12,X)
		nop 	(bak08,x)
		nop 	(fwd08,X)

		.echo **FAIL  NOP  zpy

		nop 	$12,Y
		nop 	bak08,y
		nop 	fwd08,Y


:	; forward ref for NOP

; -------------------------------

:	; backward ref for ORA

		.echo **PASS  ORA  ab

		ORA 	$1234
		ORA 	bak16
		ORA 	fwd16

		.echo **PASS  ORA  abi  (as zpi)

		Ora 	($1234)
		Ora 	(bak16)
		Ora 	(fwd16)

		.echo **FAIL  ORA  abimm

		ora 	#12, $1234
		ora 	#bak08, bak16
		ora 	#$82, fwd16

		.echo **FAIL  ORA  abimx

		ora 	#12, $1234,x
		ora 	#bak08, bak16,X
		ora 	#$82, fwd16,x

		.echo **PASS  ORA  abx

		ORA 	$1234,X
		ORA 	bak16,x
		ORA 	fwd16,X

		.echo **FAIL  ORA  abxfr

		ora 	$32, $1234, $5678
		ora 	$1234, bak08, fwd08
		ora 	fwd08, bak16, fwd16

		.echo **PASS  ORA  abxi  (as zpxi)

		Ora 	($1234,X)
		Ora 	(bak16,x)
		Ora 	(fwd16,X)

		.echo **PASS  ORA  aby

		ORA 	$1234,Y
		ORA 	bak16,y
		ORA 	fwd16,Y

		.echo **FAIL  ORA  acc

		ora 	A
		ora 	a

		.echo **PASS  ORA  imm

		ORA 	#$12
		ORA 	#bak08
		ORA 	#fwd08

		.echo **FAIL  ORA  imp

		ora 

		.echo **PASS  ORA  pcr  (as ab)

		Ora 	:+
		Ora 	-
		Ora 	+
		Ora 	:-

		.echo **PASS  ORA  zp

		ORA 	$12
		ORA 	bak08
		Ora 	fwd08   	; (absolute)

		.echo **PASS  ORA  zpi

		ORA 	($12)
		ORA 	(bak08)
		ORA 	(fwd08)

		.echo **FAIL  ORA  zpimm

		ora 	#12, $34
		ora 	#bak08, bak08
		ora 	#$82, fwd08

		.echo **FAIL  ORA  zpimx

		ora 	#12, $34,X
		ora 	#bak08, bak08,x
		ora 	#$82, fwd08,X

		.echo **PASS  ORA  zpiy

		ORA 	($12),Y
		ORA 	(bak08),y
		ORA 	(fwd08),Y

		.echo **FAIL  ORA  zptr

		ora 	$12, :+
		ora 	bak08, -
		ora 	fwd08, +

		.echo **PASS  ORA  zpx

		ORA 	$12,X
		ORA 	bak08,x
		Ora 	fwd08,X 	; (absolute)

		.echo **PASS  ORA  zpxi

		ORA 	($12,X)
		ORA 	(bak08,x)
		ORA 	(fwd08,X)

		.echo **PASS  ORA  zpy  (as aby)

		Ora 	$12,Y
		Ora 	bak08,y
		Ora 	fwd08,Y


:	; forward ref for ORA

; -------------------------------

:	; backward ref for PHA

		.echo **FAIL  PHA  ab

		pha 	$1234
		pha 	bak16
		pha 	fwd16

		.echo **FAIL  PHA  abi

		pha 	($1234)
		pha 	(bak16)
		pha 	(fwd16)

		.echo **FAIL  PHA  abimm

		pha 	#12, $1234
		pha 	#bak08, bak16
		pha 	#$82, fwd16

		.echo **FAIL  PHA  abimx

		pha 	#12, $1234,x
		pha 	#bak08, bak16,X
		pha 	#$82, fwd16,x

		.echo **FAIL  PHA  abx

		pha 	$1234,X
		pha 	bak16,x
		pha 	fwd16,X

		.echo **FAIL  PHA  abxfr

		pha 	$32, $1234, $5678
		pha 	$1234, bak08, fwd08
		pha 	fwd08, bak16, fwd16

		.echo **FAIL  PHA  abxi

		pha 	($1234,X)
		pha 	(bak16,x)
		pha 	(fwd16,X)

		.echo **FAIL  PHA  aby

		pha 	$1234,Y
		pha 	bak16,y
		pha 	fwd16,Y

		.echo **FAIL  PHA  acc

		pha 	A
		pha 	a

		.echo **FAIL  PHA  imm

		pha 	#$12
		pha 	#bak08
		pha 	#fwd08

		.echo **PASS  PHA  imp

		PHA 

		.echo **FAIL  PHA  pcr

		pha 	:+
		pha 	-
		pha 	+
		pha 	:-

		.echo **FAIL  PHA  zp

		pha 	$12
		pha 	bak08
		pha 	fwd08

		.echo **FAIL  PHA  zpi

		pha 	($12)
		pha 	(bak08)
		pha 	(fwd08)

		.echo **FAIL  PHA  zpimm

		pha 	#12, $34
		pha 	#bak08, bak08
		pha 	#$82, fwd08

		.echo **FAIL  PHA  zpimx

		pha 	#12, $34,X
		pha 	#bak08, bak08,x
		pha 	#$82, fwd08,X

		.echo **FAIL  PHA  zpiy

		pha 	($12),Y
		pha 	(bak08),y
		pha 	(fwd08),Y

		.echo **FAIL  PHA  zptr

		pha 	$12, :+
		pha 	bak08, -
		pha 	fwd08, +

		.echo **FAIL  PHA  zpx

		pha 	$12,X
		pha 	bak08,x
		pha 	fwd08,X

		.echo **FAIL  PHA  zpxi

		pha 	($12,X)
		pha 	(bak08,x)
		pha 	(fwd08,X)

		.echo **FAIL  PHA  zpy

		pha 	$12,Y
		pha 	bak08,y
		pha 	fwd08,Y


:	; forward ref for PHA

; -------------------------------

:	; backward ref for PHP

		.echo **FAIL  PHP  ab

		php 	$1234
		php 	bak16
		php 	fwd16

		.echo **FAIL  PHP  abi

		php 	($1234)
		php 	(bak16)
		php 	(fwd16)

		.echo **FAIL  PHP  abimm

		php 	#12, $1234
		php 	#bak08, bak16
		php 	#$82, fwd16

		.echo **FAIL  PHP  abimx

		php 	#12, $1234,x
		php 	#bak08, bak16,X
		php 	#$82, fwd16,x

		.echo **FAIL  PHP  abx

		php 	$1234,X
		php 	bak16,x
		php 	fwd16,X

		.echo **FAIL  PHP  abxfr

		php 	$32, $1234, $5678
		php 	$1234, bak08, fwd08
		php 	fwd08, bak16, fwd16

		.echo **FAIL  PHP  abxi

		php 	($1234,X)
		php 	(bak16,x)
		php 	(fwd16,X)

		.echo **FAIL  PHP  aby

		php 	$1234,Y
		php 	bak16,y
		php 	fwd16,Y

		.echo **FAIL  PHP  acc

		php 	A
		php 	a

		.echo **FAIL  PHP  imm

		php 	#$12
		php 	#bak08
		php 	#fwd08

		.echo **PASS  PHP  imp

		PHP 

		.echo **FAIL  PHP  pcr

		php 	:+
		php 	-
		php 	+
		php 	:-

		.echo **FAIL  PHP  zp

		php 	$12
		php 	bak08
		php 	fwd08

		.echo **FAIL  PHP  zpi

		php 	($12)
		php 	(bak08)
		php 	(fwd08)

		.echo **FAIL  PHP  zpimm

		php 	#12, $34
		php 	#bak08, bak08
		php 	#$82, fwd08

		.echo **FAIL  PHP  zpimx

		php 	#12, $34,X
		php 	#bak08, bak08,x
		php 	#$82, fwd08,X

		.echo **FAIL  PHP  zpiy

		php 	($12),Y
		php 	(bak08),y
		php 	(fwd08),Y

		.echo **FAIL  PHP  zptr

		php 	$12, :+
		php 	bak08, -
		php 	fwd08, +

		.echo **FAIL  PHP  zpx

		php 	$12,X
		php 	bak08,x
		php 	fwd08,X

		.echo **FAIL  PHP  zpxi

		php 	($12,X)
		php 	(bak08,x)
		php 	(fwd08,X)

		.echo **FAIL  PHP  zpy

		php 	$12,Y
		php 	bak08,y
		php 	fwd08,Y


:	; forward ref for PHP

; -------------------------------

:	; backward ref for PHX

		.echo **FAIL  PHX  ab

		phx 	$1234
		phx 	bak16
		phx 	fwd16

		.echo **FAIL  PHX  abi

		phx 	($1234)
		phx 	(bak16)
		phx 	(fwd16)

		.echo **FAIL  PHX  abimm

		phx 	#12, $1234
		phx 	#bak08, bak16
		phx 	#$82, fwd16

		.echo **FAIL  PHX  abimx

		phx 	#12, $1234,x
		phx 	#bak08, bak16,X
		phx 	#$82, fwd16,x

		.echo **FAIL  PHX  abx

		phx 	$1234,X
		phx 	bak16,x
		phx 	fwd16,X

		.echo **FAIL  PHX  abxfr

		phx 	$32, $1234, $5678
		phx 	$1234, bak08, fwd08
		phx 	fwd08, bak16, fwd16

		.echo **FAIL  PHX  abxi

		phx 	($1234,X)
		phx 	(bak16,x)
		phx 	(fwd16,X)

		.echo **FAIL  PHX  aby

		phx 	$1234,Y
		phx 	bak16,y
		phx 	fwd16,Y

		.echo **FAIL  PHX  acc

		phx 	A
		phx 	a

		.echo **FAIL  PHX  imm

		phx 	#$12
		phx 	#bak08
		phx 	#fwd08

		.echo **PASS  PHX  imp

		PHX 

		.echo **FAIL  PHX  pcr

		phx 	:+
		phx 	-
		phx 	+
		phx 	:-

		.echo **FAIL  PHX  zp

		phx 	$12
		phx 	bak08
		phx 	fwd08

		.echo **FAIL  PHX  zpi

		phx 	($12)
		phx 	(bak08)
		phx 	(fwd08)

		.echo **FAIL  PHX  zpimm

		phx 	#12, $34
		phx 	#bak08, bak08
		phx 	#$82, fwd08

		.echo **FAIL  PHX  zpimx

		phx 	#12, $34,X
		phx 	#bak08, bak08,x
		phx 	#$82, fwd08,X

		.echo **FAIL  PHX  zpiy

		phx 	($12),Y
		phx 	(bak08),y
		phx 	(fwd08),Y

		.echo **FAIL  PHX  zptr

		phx 	$12, :+
		phx 	bak08, -
		phx 	fwd08, +

		.echo **FAIL  PHX  zpx

		phx 	$12,X
		phx 	bak08,x
		phx 	fwd08,X

		.echo **FAIL  PHX  zpxi

		phx 	($12,X)
		phx 	(bak08,x)
		phx 	(fwd08,X)

		.echo **FAIL  PHX  zpy

		phx 	$12,Y
		phx 	bak08,y
		phx 	fwd08,Y


:	; forward ref for PHX

; -------------------------------

:	; backward ref for PHY

		.echo **FAIL  PHY  ab

		phy 	$1234
		phy 	bak16
		phy 	fwd16

		.echo **FAIL  PHY  abi

		phy 	($1234)
		phy 	(bak16)
		phy 	(fwd16)

		.echo **FAIL  PHY  abimm

		phy 	#12, $1234
		phy 	#bak08, bak16
		phy 	#$82, fwd16

		.echo **FAIL  PHY  abimx

		phy 	#12, $1234,x
		phy 	#bak08, bak16,X
		phy 	#$82, fwd16,x

		.echo **FAIL  PHY  abx

		phy 	$1234,X
		phy 	bak16,x
		phy 	fwd16,X

		.echo **FAIL  PHY  abxfr

		phy 	$32, $1234, $5678
		phy 	$1234, bak08, fwd08
		phy 	fwd08, bak16, fwd16

		.echo **FAIL  PHY  abxi

		phy 	($1234,X)
		phy 	(bak16,x)
		phy 	(fwd16,X)

		.echo **FAIL  PHY  aby

		phy 	$1234,Y
		phy 	bak16,y
		phy 	fwd16,Y

		.echo **FAIL  PHY  acc

		phy 	A
		phy 	a

		.echo **FAIL  PHY  imm

		phy 	#$12
		phy 	#bak08
		phy 	#fwd08

		.echo **PASS  PHY  imp

		PHY 

		.echo **FAIL  PHY  pcr

		phy 	:+
		phy 	-
		phy 	+
		phy 	:-

		.echo **FAIL  PHY  zp

		phy 	$12
		phy 	bak08
		phy 	fwd08

		.echo **FAIL  PHY  zpi

		phy 	($12)
		phy 	(bak08)
		phy 	(fwd08)

		.echo **FAIL  PHY  zpimm

		phy 	#12, $34
		phy 	#bak08, bak08
		phy 	#$82, fwd08

		.echo **FAIL  PHY  zpimx

		phy 	#12, $34,X
		phy 	#bak08, bak08,x
		phy 	#$82, fwd08,X

		.echo **FAIL  PHY  zpiy

		phy 	($12),Y
		phy 	(bak08),y
		phy 	(fwd08),Y

		.echo **FAIL  PHY  zptr

		phy 	$12, :+
		phy 	bak08, -
		phy 	fwd08, +

		.echo **FAIL  PHY  zpx

		phy 	$12,X
		phy 	bak08,x
		phy 	fwd08,X

		.echo **FAIL  PHY  zpxi

		phy 	($12,X)
		phy 	(bak08,x)
		phy 	(fwd08,X)

		.echo **FAIL  PHY  zpy

		phy 	$12,Y
		phy 	bak08,y
		phy 	fwd08,Y


:	; forward ref for PHY

; -------------------------------

:	; backward ref for PLA

		.echo **FAIL  PLA  ab

		pla 	$1234
		pla 	bak16
		pla 	fwd16

		.echo **FAIL  PLA  abi

		pla 	($1234)
		pla 	(bak16)
		pla 	(fwd16)

		.echo **FAIL  PLA  abimm

		pla 	#12, $1234
		pla 	#bak08, bak16
		pla 	#$82, fwd16

		.echo **FAIL  PLA  abimx

		pla 	#12, $1234,x
		pla 	#bak08, bak16,X
		pla 	#$82, fwd16,x

		.echo **FAIL  PLA  abx

		pla 	$1234,X
		pla 	bak16,x
		pla 	fwd16,X

		.echo **FAIL  PLA  abxfr

		pla 	$32, $1234, $5678
		pla 	$1234, bak08, fwd08
		pla 	fwd08, bak16, fwd16

		.echo **FAIL  PLA  abxi

		pla 	($1234,X)
		pla 	(bak16,x)
		pla 	(fwd16,X)

		.echo **FAIL  PLA  aby

		pla 	$1234,Y
		pla 	bak16,y
		pla 	fwd16,Y

		.echo **FAIL  PLA  acc

		pla 	A
		pla 	a

		.echo **FAIL  PLA  imm

		pla 	#$12
		pla 	#bak08
		pla 	#fwd08

		.echo **PASS  PLA  imp

		PLA 

		.echo **FAIL  PLA  pcr

		pla 	:+
		pla 	-
		pla 	+
		pla 	:-

		.echo **FAIL  PLA  zp

		pla 	$12
		pla 	bak08
		pla 	fwd08

		.echo **FAIL  PLA  zpi

		pla 	($12)
		pla 	(bak08)
		pla 	(fwd08)

		.echo **FAIL  PLA  zpimm

		pla 	#12, $34
		pla 	#bak08, bak08
		pla 	#$82, fwd08

		.echo **FAIL  PLA  zpimx

		pla 	#12, $34,X
		pla 	#bak08, bak08,x
		pla 	#$82, fwd08,X

		.echo **FAIL  PLA  zpiy

		pla 	($12),Y
		pla 	(bak08),y
		pla 	(fwd08),Y

		.echo **FAIL  PLA  zptr

		pla 	$12, :+
		pla 	bak08, -
		pla 	fwd08, +

		.echo **FAIL  PLA  zpx

		pla 	$12,X
		pla 	bak08,x
		pla 	fwd08,X

		.echo **FAIL  PLA  zpxi

		pla 	($12,X)
		pla 	(bak08,x)
		pla 	(fwd08,X)

		.echo **FAIL  PLA  zpy

		pla 	$12,Y
		pla 	bak08,y
		pla 	fwd08,Y


:	; forward ref for PLA

; -------------------------------

:	; backward ref for PLP

		.echo **FAIL  PLP  ab

		plp 	$1234
		plp 	bak16
		plp 	fwd16

		.echo **FAIL  PLP  abi

		plp 	($1234)
		plp 	(bak16)
		plp 	(fwd16)

		.echo **FAIL  PLP  abimm

		plp 	#12, $1234
		plp 	#bak08, bak16
		plp 	#$82, fwd16

		.echo **FAIL  PLP  abimx

		plp 	#12, $1234,x
		plp 	#bak08, bak16,X
		plp 	#$82, fwd16,x

		.echo **FAIL  PLP  abx

		plp 	$1234,X
		plp 	bak16,x
		plp 	fwd16,X

		.echo **FAIL  PLP  abxfr

		plp 	$32, $1234, $5678
		plp 	$1234, bak08, fwd08
		plp 	fwd08, bak16, fwd16

		.echo **FAIL  PLP  abxi

		plp 	($1234,X)
		plp 	(bak16,x)
		plp 	(fwd16,X)

		.echo **FAIL  PLP  aby

		plp 	$1234,Y
		plp 	bak16,y
		plp 	fwd16,Y

		.echo **FAIL  PLP  acc

		plp 	A
		plp 	a

		.echo **FAIL  PLP  imm

		plp 	#$12
		plp 	#bak08
		plp 	#fwd08

		.echo **PASS  PLP  imp

		PLP 

		.echo **FAIL  PLP  pcr

		plp 	:+
		plp 	-
		plp 	+
		plp 	:-

		.echo **FAIL  PLP  zp

		plp 	$12
		plp 	bak08
		plp 	fwd08

		.echo **FAIL  PLP  zpi

		plp 	($12)
		plp 	(bak08)
		plp 	(fwd08)

		.echo **FAIL  PLP  zpimm

		plp 	#12, $34
		plp 	#bak08, bak08
		plp 	#$82, fwd08

		.echo **FAIL  PLP  zpimx

		plp 	#12, $34,X
		plp 	#bak08, bak08,x
		plp 	#$82, fwd08,X

		.echo **FAIL  PLP  zpiy

		plp 	($12),Y
		plp 	(bak08),y
		plp 	(fwd08),Y

		.echo **FAIL  PLP  zptr

		plp 	$12, :+
		plp 	bak08, -
		plp 	fwd08, +

		.echo **FAIL  PLP  zpx

		plp 	$12,X
		plp 	bak08,x
		plp 	fwd08,X

		.echo **FAIL  PLP  zpxi

		plp 	($12,X)
		plp 	(bak08,x)
		plp 	(fwd08,X)

		.echo **FAIL  PLP  zpy

		plp 	$12,Y
		plp 	bak08,y
		plp 	fwd08,Y


:	; forward ref for PLP

; -------------------------------

:	; backward ref for PLX

		.echo **FAIL  PLX  ab

		plx 	$1234
		plx 	bak16
		plx 	fwd16

		.echo **FAIL  PLX  abi

		plx 	($1234)
		plx 	(bak16)
		plx 	(fwd16)

		.echo **FAIL  PLX  abimm

		plx 	#12, $1234
		plx 	#bak08, bak16
		plx 	#$82, fwd16

		.echo **FAIL  PLX  abimx

		plx 	#12, $1234,x
		plx 	#bak08, bak16,X
		plx 	#$82, fwd16,x

		.echo **FAIL  PLX  abx

		plx 	$1234,X
		plx 	bak16,x
		plx 	fwd16,X

		.echo **FAIL  PLX  abxfr

		plx 	$32, $1234, $5678
		plx 	$1234, bak08, fwd08
		plx 	fwd08, bak16, fwd16

		.echo **FAIL  PLX  abxi

		plx 	($1234,X)
		plx 	(bak16,x)
		plx 	(fwd16,X)

		.echo **FAIL  PLX  aby

		plx 	$1234,Y
		plx 	bak16,y
		plx 	fwd16,Y

		.echo **FAIL  PLX  acc

		plx 	A
		plx 	a

		.echo **FAIL  PLX  imm

		plx 	#$12
		plx 	#bak08
		plx 	#fwd08

		.echo **PASS  PLX  imp

		PLX 

		.echo **FAIL  PLX  pcr

		plx 	:+
		plx 	-
		plx 	+
		plx 	:-

		.echo **FAIL  PLX  zp

		plx 	$12
		plx 	bak08
		plx 	fwd08

		.echo **FAIL  PLX  zpi

		plx 	($12)
		plx 	(bak08)
		plx 	(fwd08)

		.echo **FAIL  PLX  zpimm

		plx 	#12, $34
		plx 	#bak08, bak08
		plx 	#$82, fwd08

		.echo **FAIL  PLX  zpimx

		plx 	#12, $34,X
		plx 	#bak08, bak08,x
		plx 	#$82, fwd08,X

		.echo **FAIL  PLX  zpiy

		plx 	($12),Y
		plx 	(bak08),y
		plx 	(fwd08),Y

		.echo **FAIL  PLX  zptr

		plx 	$12, :+
		plx 	bak08, -
		plx 	fwd08, +

		.echo **FAIL  PLX  zpx

		plx 	$12,X
		plx 	bak08,x
		plx 	fwd08,X

		.echo **FAIL  PLX  zpxi

		plx 	($12,X)
		plx 	(bak08,x)
		plx 	(fwd08,X)

		.echo **FAIL  PLX  zpy

		plx 	$12,Y
		plx 	bak08,y
		plx 	fwd08,Y


:	; forward ref for PLX

; -------------------------------

:	; backward ref for PLY

		.echo **FAIL  PLY  ab

		ply 	$1234
		ply 	bak16
		ply 	fwd16

		.echo **FAIL  PLY  abi

		ply 	($1234)
		ply 	(bak16)
		ply 	(fwd16)

		.echo **FAIL  PLY  abimm

		ply 	#12, $1234
		ply 	#bak08, bak16
		ply 	#$82, fwd16

		.echo **FAIL  PLY  abimx

		ply 	#12, $1234,x
		ply 	#bak08, bak16,X
		ply 	#$82, fwd16,x

		.echo **FAIL  PLY  abx

		ply 	$1234,X
		ply 	bak16,x
		ply 	fwd16,X

		.echo **FAIL  PLY  abxfr

		ply 	$32, $1234, $5678
		ply 	$1234, bak08, fwd08
		ply 	fwd08, bak16, fwd16

		.echo **FAIL  PLY  abxi

		ply 	($1234,X)
		ply 	(bak16,x)
		ply 	(fwd16,X)

		.echo **FAIL  PLY  aby

		ply 	$1234,Y
		ply 	bak16,y
		ply 	fwd16,Y

		.echo **FAIL  PLY  acc

		ply 	A
		ply 	a

		.echo **FAIL  PLY  imm

		ply 	#$12
		ply 	#bak08
		ply 	#fwd08

		.echo **PASS  PLY  imp

		PLY 

		.echo **FAIL  PLY  pcr

		ply 	:+
		ply 	-
		ply 	+
		ply 	:-

		.echo **FAIL  PLY  zp

		ply 	$12
		ply 	bak08
		ply 	fwd08

		.echo **FAIL  PLY  zpi

		ply 	($12)
		ply 	(bak08)
		ply 	(fwd08)

		.echo **FAIL  PLY  zpimm

		ply 	#12, $34
		ply 	#bak08, bak08
		ply 	#$82, fwd08

		.echo **FAIL  PLY  zpimx

		ply 	#12, $34,X
		ply 	#bak08, bak08,x
		ply 	#$82, fwd08,X

		.echo **FAIL  PLY  zpiy

		ply 	($12),Y
		ply 	(bak08),y
		ply 	(fwd08),Y

		.echo **FAIL  PLY  zptr

		ply 	$12, :+
		ply 	bak08, -
		ply 	fwd08, +

		.echo **FAIL  PLY  zpx

		ply 	$12,X
		ply 	bak08,x
		ply 	fwd08,X

		.echo **FAIL  PLY  zpxi

		ply 	($12,X)
		ply 	(bak08,x)
		ply 	(fwd08,X)

		.echo **FAIL  PLY  zpy

		ply 	$12,Y
		ply 	bak08,y
		ply 	fwd08,Y


:	; forward ref for PLY

; -------------------------------

:	; backward ref for RMB0

		.echo **PASS  RMB0  ab  (as zp)

		Rmb0	$1234
		Rmb0	bak16
		Rmb0	fwd16

		.echo **FAIL  RMB0  abi

		rmb0	($1234)
		rmb0	(bak16)
		rmb0	(fwd16)

		.echo **FAIL  RMB0  abimm

		rmb0	#12, $1234
		rmb0	#bak08, bak16
		rmb0	#$82, fwd16

		.echo **FAIL  RMB0  abimx

		rmb0	#12, $1234,x
		rmb0	#bak08, bak16,X
		rmb0	#$82, fwd16,x

		.echo **FAIL  RMB0  abx

		rmb0	$1234,X
		rmb0	bak16,x
		rmb0	fwd16,X

		.echo **FAIL  RMB0  abxfr

		rmb0	$32, $1234, $5678
		rmb0	$1234, bak08, fwd08
		rmb0	fwd08, bak16, fwd16

		.echo **FAIL  RMB0  abxi

		rmb0	($1234,X)
		rmb0	(bak16,x)
		rmb0	(fwd16,X)

		.echo **FAIL  RMB0  aby

		rmb0	$1234,Y
		rmb0	bak16,y
		rmb0	fwd16,Y

		.echo **FAIL  RMB0  acc

		rmb0	A
		rmb0	a

		.echo **FAIL  RMB0  imm

		rmb0	#$12
		rmb0	#bak08
		rmb0	#fwd08

		.echo **FAIL  RMB0  imp

		rmb0

		.echo **PASS  RMB0  pcr  (as zp)

		Rmb0	:+
		Rmb0	-
		Rmb0	+
		Rmb0	:-

		.echo **PASS  RMB0  zp

		RMB0	$12
		RMB0	bak08
		RMB0	fwd08

		.echo **FAIL  RMB0  zpi

		rmb0	($12)
		rmb0	(bak08)
		rmb0	(fwd08)

		.echo **FAIL  RMB0  zpimm

		rmb0	#12, $34
		rmb0	#bak08, bak08
		rmb0	#$82, fwd08

		.echo **FAIL  RMB0  zpimx

		rmb0	#12, $34,X
		rmb0	#bak08, bak08,x
		rmb0	#$82, fwd08,X

		.echo **FAIL  RMB0  zpiy

		rmb0	($12),Y
		rmb0	(bak08),y
		rmb0	(fwd08),Y

		.echo **FAIL  RMB0  zptr

		rmb0	$12, :+
		rmb0	bak08, -
		rmb0	fwd08, +

		.echo **FAIL  RMB0  zpx

		rmb0	$12,X
		rmb0	bak08,x
		rmb0	fwd08,X

		.echo **FAIL  RMB0  zpxi

		rmb0	($12,X)
		rmb0	(bak08,x)
		rmb0	(fwd08,X)

		.echo **FAIL  RMB0  zpy

		rmb0	$12,Y
		rmb0	bak08,y
		rmb0	fwd08,Y


:	; forward ref for RMB0

; -------------------------------

:	; backward ref for RMB1

		.echo **PASS  RMB1  ab  (as zp)

		Rmb1	$1234
		Rmb1	bak16
		Rmb1	fwd16

		.echo **FAIL  RMB1  abi

		rmb1	($1234)
		rmb1	(bak16)
		rmb1	(fwd16)

		.echo **FAIL  RMB1  abimm

		rmb1	#12, $1234
		rmb1	#bak08, bak16
		rmb1	#$82, fwd16

		.echo **FAIL  RMB1  abimx

		rmb1	#12, $1234,x
		rmb1	#bak08, bak16,X
		rmb1	#$82, fwd16,x

		.echo **FAIL  RMB1  abx

		rmb1	$1234,X
		rmb1	bak16,x
		rmb1	fwd16,X

		.echo **FAIL  RMB1  abxfr

		rmb1	$32, $1234, $5678
		rmb1	$1234, bak08, fwd08
		rmb1	fwd08, bak16, fwd16

		.echo **FAIL  RMB1  abxi

		rmb1	($1234,X)
		rmb1	(bak16,x)
		rmb1	(fwd16,X)

		.echo **FAIL  RMB1  aby

		rmb1	$1234,Y
		rmb1	bak16,y
		rmb1	fwd16,Y

		.echo **FAIL  RMB1  acc

		rmb1	A
		rmb1	a

		.echo **FAIL  RMB1  imm

		rmb1	#$12
		rmb1	#bak08
		rmb1	#fwd08

		.echo **FAIL  RMB1  imp

		rmb1

		.echo **PASS  RMB1  pcr  (as zp)

		Rmb1	:+
		Rmb1	-
		Rmb1	+
		Rmb1	:-

		.echo **PASS  RMB1  zp

		RMB1	$12
		RMB1	bak08
		RMB1	fwd08

		.echo **FAIL  RMB1  zpi

		rmb1	($12)
		rmb1	(bak08)
		rmb1	(fwd08)

		.echo **FAIL  RMB1  zpimm

		rmb1	#12, $34
		rmb1	#bak08, bak08
		rmb1	#$82, fwd08

		.echo **FAIL  RMB1  zpimx

		rmb1	#12, $34,X
		rmb1	#bak08, bak08,x
		rmb1	#$82, fwd08,X

		.echo **FAIL  RMB1  zpiy

		rmb1	($12),Y
		rmb1	(bak08),y
		rmb1	(fwd08),Y

		.echo **FAIL  RMB1  zptr

		rmb1	$12, :+
		rmb1	bak08, -
		rmb1	fwd08, +

		.echo **FAIL  RMB1  zpx

		rmb1	$12,X
		rmb1	bak08,x
		rmb1	fwd08,X

		.echo **FAIL  RMB1  zpxi

		rmb1	($12,X)
		rmb1	(bak08,x)
		rmb1	(fwd08,X)

		.echo **FAIL  RMB1  zpy

		rmb1	$12,Y
		rmb1	bak08,y
		rmb1	fwd08,Y


:	; forward ref for RMB1

; -------------------------------

:	; backward ref for RMB2

		.echo **PASS  RMB2  ab  (as zp)

		Rmb2	$1234
		Rmb2	bak16
		Rmb2	fwd16

		.echo **FAIL  RMB2  abi

		rmb2	($1234)
		rmb2	(bak16)
		rmb2	(fwd16)

		.echo **FAIL  RMB2  abimm

		rmb2	#12, $1234
		rmb2	#bak08, bak16
		rmb2	#$82, fwd16

		.echo **FAIL  RMB2  abimx

		rmb2	#12, $1234,x
		rmb2	#bak08, bak16,X
		rmb2	#$82, fwd16,x

		.echo **FAIL  RMB2  abx

		rmb2	$1234,X
		rmb2	bak16,x
		rmb2	fwd16,X

		.echo **FAIL  RMB2  abxfr

		rmb2	$32, $1234, $5678
		rmb2	$1234, bak08, fwd08
		rmb2	fwd08, bak16, fwd16

		.echo **FAIL  RMB2  abxi

		rmb2	($1234,X)
		rmb2	(bak16,x)
		rmb2	(fwd16,X)

		.echo **FAIL  RMB2  aby

		rmb2	$1234,Y
		rmb2	bak16,y
		rmb2	fwd16,Y

		.echo **FAIL  RMB2  acc

		rmb2	A
		rmb2	a

		.echo **FAIL  RMB2  imm

		rmb2	#$12
		rmb2	#bak08
		rmb2	#fwd08

		.echo **FAIL  RMB2  imp

		rmb2

		.echo **PASS  RMB2  pcr  (as zp)

		Rmb2	:+
		Rmb2	-
		Rmb2	+
		Rmb2	:-

		.echo **PASS  RMB2  zp

		RMB2	$12
		RMB2	bak08
		RMB2	fwd08

		.echo **FAIL  RMB2  zpi

		rmb2	($12)
		rmb2	(bak08)
		rmb2	(fwd08)

		.echo **FAIL  RMB2  zpimm

		rmb2	#12, $34
		rmb2	#bak08, bak08
		rmb2	#$82, fwd08

		.echo **FAIL  RMB2  zpimx

		rmb2	#12, $34,X
		rmb2	#bak08, bak08,x
		rmb2	#$82, fwd08,X

		.echo **FAIL  RMB2  zpiy

		rmb2	($12),Y
		rmb2	(bak08),y
		rmb2	(fwd08),Y

		.echo **FAIL  RMB2  zptr

		rmb2	$12, :+
		rmb2	bak08, -
		rmb2	fwd08, +

		.echo **FAIL  RMB2  zpx

		rmb2	$12,X
		rmb2	bak08,x
		rmb2	fwd08,X

		.echo **FAIL  RMB2  zpxi

		rmb2	($12,X)
		rmb2	(bak08,x)
		rmb2	(fwd08,X)

		.echo **FAIL  RMB2  zpy

		rmb2	$12,Y
		rmb2	bak08,y
		rmb2	fwd08,Y


:	; forward ref for RMB2

; -------------------------------

:	; backward ref for RMB3

		.echo **PASS  RMB3  ab  (as zp)

		Rmb3	$1234
		Rmb3	bak16
		Rmb3	fwd16

		.echo **FAIL  RMB3  abi

		rmb3	($1234)
		rmb3	(bak16)
		rmb3	(fwd16)

		.echo **FAIL  RMB3  abimm

		rmb3	#12, $1234
		rmb3	#bak08, bak16
		rmb3	#$82, fwd16

		.echo **FAIL  RMB3  abimx

		rmb3	#12, $1234,x
		rmb3	#bak08, bak16,X
		rmb3	#$82, fwd16,x

		.echo **FAIL  RMB3  abx

		rmb3	$1234,X
		rmb3	bak16,x
		rmb3	fwd16,X

		.echo **FAIL  RMB3  abxfr

		rmb3	$32, $1234, $5678
		rmb3	$1234, bak08, fwd08
		rmb3	fwd08, bak16, fwd16

		.echo **FAIL  RMB3  abxi

		rmb3	($1234,X)
		rmb3	(bak16,x)
		rmb3	(fwd16,X)

		.echo **FAIL  RMB3  aby

		rmb3	$1234,Y
		rmb3	bak16,y
		rmb3	fwd16,Y

		.echo **FAIL  RMB3  acc

		rmb3	A
		rmb3	a

		.echo **FAIL  RMB3  imm

		rmb3	#$12
		rmb3	#bak08
		rmb3	#fwd08

		.echo **FAIL  RMB3  imp

		rmb3

		.echo **PASS  RMB3  pcr  (as zp)

		Rmb3	:+
		Rmb3	-
		Rmb3	+
		Rmb3	:-

		.echo **PASS  RMB3  zp

		RMB3	$12
		RMB3	bak08
		RMB3	fwd08

		.echo **FAIL  RMB3  zpi

		rmb3	($12)
		rmb3	(bak08)
		rmb3	(fwd08)

		.echo **FAIL  RMB3  zpimm

		rmb3	#12, $34
		rmb3	#bak08, bak08
		rmb3	#$82, fwd08

		.echo **FAIL  RMB3  zpimx

		rmb3	#12, $34,X
		rmb3	#bak08, bak08,x
		rmb3	#$82, fwd08,X

		.echo **FAIL  RMB3  zpiy

		rmb3	($12),Y
		rmb3	(bak08),y
		rmb3	(fwd08),Y

		.echo **FAIL  RMB3  zptr

		rmb3	$12, :+
		rmb3	bak08, -
		rmb3	fwd08, +

		.echo **FAIL  RMB3  zpx

		rmb3	$12,X
		rmb3	bak08,x
		rmb3	fwd08,X

		.echo **FAIL  RMB3  zpxi

		rmb3	($12,X)
		rmb3	(bak08,x)
		rmb3	(fwd08,X)

		.echo **FAIL  RMB3  zpy

		rmb3	$12,Y
		rmb3	bak08,y
		rmb3	fwd08,Y


:	; forward ref for RMB3

; -------------------------------

:	; backward ref for RMB4

		.echo **PASS  RMB4  ab  (as zp)

		Rmb4	$1234
		Rmb4	bak16
		Rmb4	fwd16

		.echo **FAIL  RMB4  abi

		rmb4	($1234)
		rmb4	(bak16)
		rmb4	(fwd16)

		.echo **FAIL  RMB4  abimm

		rmb4	#12, $1234
		rmb4	#bak08, bak16
		rmb4	#$82, fwd16

		.echo **FAIL  RMB4  abimx

		rmb4	#12, $1234,x
		rmb4	#bak08, bak16,X
		rmb4	#$82, fwd16,x

		.echo **FAIL  RMB4  abx

		rmb4	$1234,X
		rmb4	bak16,x
		rmb4	fwd16,X

		.echo **FAIL  RMB4  abxfr

		rmb4	$32, $1234, $5678
		rmb4	$1234, bak08, fwd08
		rmb4	fwd08, bak16, fwd16

		.echo **FAIL  RMB4  abxi

		rmb4	($1234,X)
		rmb4	(bak16,x)
		rmb4	(fwd16,X)

		.echo **FAIL  RMB4  aby

		rmb4	$1234,Y
		rmb4	bak16,y
		rmb4	fwd16,Y

		.echo **FAIL  RMB4  acc

		rmb4	A
		rmb4	a

		.echo **FAIL  RMB4  imm

		rmb4	#$12
		rmb4	#bak08
		rmb4	#fwd08

		.echo **FAIL  RMB4  imp

		rmb4

		.echo **PASS  RMB4  pcr  (as zp)

		Rmb4	:+
		Rmb4	-
		Rmb4	+
		Rmb4	:-

		.echo **PASS  RMB4  zp

		RMB4	$12
		RMB4	bak08
		RMB4	fwd08

		.echo **FAIL  RMB4  zpi

		rmb4	($12)
		rmb4	(bak08)
		rmb4	(fwd08)

		.echo **FAIL  RMB4  zpimm

		rmb4	#12, $34
		rmb4	#bak08, bak08
		rmb4	#$82, fwd08

		.echo **FAIL  RMB4  zpimx

		rmb4	#12, $34,X
		rmb4	#bak08, bak08,x
		rmb4	#$82, fwd08,X

		.echo **FAIL  RMB4  zpiy

		rmb4	($12),Y
		rmb4	(bak08),y
		rmb4	(fwd08),Y

		.echo **FAIL  RMB4  zptr

		rmb4	$12, :+
		rmb4	bak08, -
		rmb4	fwd08, +

		.echo **FAIL  RMB4  zpx

		rmb4	$12,X
		rmb4	bak08,x
		rmb4	fwd08,X

		.echo **FAIL  RMB4  zpxi

		rmb4	($12,X)
		rmb4	(bak08,x)
		rmb4	(fwd08,X)

		.echo **FAIL  RMB4  zpy

		rmb4	$12,Y
		rmb4	bak08,y
		rmb4	fwd08,Y


:	; forward ref for RMB4

; -------------------------------

:	; backward ref for RMB5

		.echo **PASS  RMB5  ab  (as zp)

		Rmb5	$1234
		Rmb5	bak16
		Rmb5	fwd16

		.echo **FAIL  RMB5  abi

		rmb5	($1234)
		rmb5	(bak16)
		rmb5	(fwd16)

		.echo **FAIL  RMB5  abimm

		rmb5	#12, $1234
		rmb5	#bak08, bak16
		rmb5	#$82, fwd16

		.echo **FAIL  RMB5  abimx

		rmb5	#12, $1234,x
		rmb5	#bak08, bak16,X
		rmb5	#$82, fwd16,x

		.echo **FAIL  RMB5  abx

		rmb5	$1234,X
		rmb5	bak16,x
		rmb5	fwd16,X

		.echo **FAIL  RMB5  abxfr

		rmb5	$32, $1234, $5678
		rmb5	$1234, bak08, fwd08
		rmb5	fwd08, bak16, fwd16

		.echo **FAIL  RMB5  abxi

		rmb5	($1234,X)
		rmb5	(bak16,x)
		rmb5	(fwd16,X)

		.echo **FAIL  RMB5  aby

		rmb5	$1234,Y
		rmb5	bak16,y
		rmb5	fwd16,Y

		.echo **FAIL  RMB5  acc

		rmb5	A
		rmb5	a

		.echo **FAIL  RMB5  imm

		rmb5	#$12
		rmb5	#bak08
		rmb5	#fwd08

		.echo **FAIL  RMB5  imp

		rmb5

		.echo **PASS  RMB5  pcr  (as zp)

		Rmb5	:+
		Rmb5	-
		Rmb5	+
		Rmb5	:-

		.echo **PASS  RMB5  zp

		RMB5	$12
		RMB5	bak08
		RMB5	fwd08

		.echo **FAIL  RMB5  zpi

		rmb5	($12)
		rmb5	(bak08)
		rmb5	(fwd08)

		.echo **FAIL  RMB5  zpimm

		rmb5	#12, $34
		rmb5	#bak08, bak08
		rmb5	#$82, fwd08

		.echo **FAIL  RMB5  zpimx

		rmb5	#12, $34,X
		rmb5	#bak08, bak08,x
		rmb5	#$82, fwd08,X

		.echo **FAIL  RMB5  zpiy

		rmb5	($12),Y
		rmb5	(bak08),y
		rmb5	(fwd08),Y

		.echo **FAIL  RMB5  zptr

		rmb5	$12, :+
		rmb5	bak08, -
		rmb5	fwd08, +

		.echo **FAIL  RMB5  zpx

		rmb5	$12,X
		rmb5	bak08,x
		rmb5	fwd08,X

		.echo **FAIL  RMB5  zpxi

		rmb5	($12,X)
		rmb5	(bak08,x)
		rmb5	(fwd08,X)

		.echo **FAIL  RMB5  zpy

		rmb5	$12,Y
		rmb5	bak08,y
		rmb5	fwd08,Y


:	; forward ref for RMB5

; -------------------------------

:	; backward ref for RMB6

		.echo **PASS  RMB6  ab  (as zp)

		Rmb6	$1234
		Rmb6	bak16
		Rmb6	fwd16

		.echo **FAIL  RMB6  abi

		rmb6	($1234)
		rmb6	(bak16)
		rmb6	(fwd16)

		.echo **FAIL  RMB6  abimm

		rmb6	#12, $1234
		rmb6	#bak08, bak16
		rmb6	#$82, fwd16

		.echo **FAIL  RMB6  abimx

		rmb6	#12, $1234,x
		rmb6	#bak08, bak16,X
		rmb6	#$82, fwd16,x

		.echo **FAIL  RMB6  abx

		rmb6	$1234,X
		rmb6	bak16,x
		rmb6	fwd16,X

		.echo **FAIL  RMB6  abxfr

		rmb6	$32, $1234, $5678
		rmb6	$1234, bak08, fwd08
		rmb6	fwd08, bak16, fwd16

		.echo **FAIL  RMB6  abxi

		rmb6	($1234,X)
		rmb6	(bak16,x)
		rmb6	(fwd16,X)

		.echo **FAIL  RMB6  aby

		rmb6	$1234,Y
		rmb6	bak16,y
		rmb6	fwd16,Y

		.echo **FAIL  RMB6  acc

		rmb6	A
		rmb6	a

		.echo **FAIL  RMB6  imm

		rmb6	#$12
		rmb6	#bak08
		rmb6	#fwd08

		.echo **FAIL  RMB6  imp

		rmb6

		.echo **PASS  RMB6  pcr  (as zp)

		Rmb6	:+
		Rmb6	-
		Rmb6	+
		Rmb6	:-

		.echo **PASS  RMB6  zp

		RMB6	$12
		RMB6	bak08
		RMB6	fwd08

		.echo **FAIL  RMB6  zpi

		rmb6	($12)
		rmb6	(bak08)
		rmb6	(fwd08)

		.echo **FAIL  RMB6  zpimm

		rmb6	#12, $34
		rmb6	#bak08, bak08
		rmb6	#$82, fwd08

		.echo **FAIL  RMB6  zpimx

		rmb6	#12, $34,X
		rmb6	#bak08, bak08,x
		rmb6	#$82, fwd08,X

		.echo **FAIL  RMB6  zpiy

		rmb6	($12),Y
		rmb6	(bak08),y
		rmb6	(fwd08),Y

		.echo **FAIL  RMB6  zptr

		rmb6	$12, :+
		rmb6	bak08, -
		rmb6	fwd08, +

		.echo **FAIL  RMB6  zpx

		rmb6	$12,X
		rmb6	bak08,x
		rmb6	fwd08,X

		.echo **FAIL  RMB6  zpxi

		rmb6	($12,X)
		rmb6	(bak08,x)
		rmb6	(fwd08,X)

		.echo **FAIL  RMB6  zpy

		rmb6	$12,Y
		rmb6	bak08,y
		rmb6	fwd08,Y


:	; forward ref for RMB6

; -------------------------------

:	; backward ref for RMB7

		.echo **PASS  RMB7  ab  (as zp)

		Rmb7	$1234
		Rmb7	bak16
		Rmb7	fwd16

		.echo **FAIL  RMB7  abi

		rmb7	($1234)
		rmb7	(bak16)
		rmb7	(fwd16)

		.echo **FAIL  RMB7  abimm

		rmb7	#12, $1234
		rmb7	#bak08, bak16
		rmb7	#$82, fwd16

		.echo **FAIL  RMB7  abimx

		rmb7	#12, $1234,x
		rmb7	#bak08, bak16,X
		rmb7	#$82, fwd16,x

		.echo **FAIL  RMB7  abx

		rmb7	$1234,X
		rmb7	bak16,x
		rmb7	fwd16,X

		.echo **FAIL  RMB7  abxfr

		rmb7	$32, $1234, $5678
		rmb7	$1234, bak08, fwd08
		rmb7	fwd08, bak16, fwd16

		.echo **FAIL  RMB7  abxi

		rmb7	($1234,X)
		rmb7	(bak16,x)
		rmb7	(fwd16,X)

		.echo **FAIL  RMB7  aby

		rmb7	$1234,Y
		rmb7	bak16,y
		rmb7	fwd16,Y

		.echo **FAIL  RMB7  acc

		rmb7	A
		rmb7	a

		.echo **FAIL  RMB7  imm

		rmb7	#$12
		rmb7	#bak08
		rmb7	#fwd08

		.echo **FAIL  RMB7  imp

		rmb7

		.echo **PASS  RMB7  pcr  (as zp)

		Rmb7	:+
		Rmb7	-
		Rmb7	+
		Rmb7	:-

		.echo **PASS  RMB7  zp

		RMB7	$12
		RMB7	bak08
		RMB7	fwd08

		.echo **FAIL  RMB7  zpi

		rmb7	($12)
		rmb7	(bak08)
		rmb7	(fwd08)

		.echo **FAIL  RMB7  zpimm

		rmb7	#12, $34
		rmb7	#bak08, bak08
		rmb7	#$82, fwd08

		.echo **FAIL  RMB7  zpimx

		rmb7	#12, $34,X
		rmb7	#bak08, bak08,x
		rmb7	#$82, fwd08,X

		.echo **FAIL  RMB7  zpiy

		rmb7	($12),Y
		rmb7	(bak08),y
		rmb7	(fwd08),Y

		.echo **FAIL  RMB7  zptr

		rmb7	$12, :+
		rmb7	bak08, -
		rmb7	fwd08, +

		.echo **FAIL  RMB7  zpx

		rmb7	$12,X
		rmb7	bak08,x
		rmb7	fwd08,X

		.echo **FAIL  RMB7  zpxi

		rmb7	($12,X)
		rmb7	(bak08,x)
		rmb7	(fwd08,X)

		.echo **FAIL  RMB7  zpy

		rmb7	$12,Y
		rmb7	bak08,y
		rmb7	fwd08,Y


:	; forward ref for RMB7

; -------------------------------

:	; backward ref for ROL

		.echo **PASS  ROL  ab

		ROL 	$1234
		ROL 	bak16
		ROL 	fwd16

		.echo **FAIL  ROL  abi

		rol 	($1234)
		rol 	(bak16)
		rol 	(fwd16)

		.echo **FAIL  ROL  abimm

		rol 	#12, $1234
		rol 	#bak08, bak16
		rol 	#$82, fwd16

		.echo **FAIL  ROL  abimx

		rol 	#12, $1234,x
		rol 	#bak08, bak16,X
		rol 	#$82, fwd16,x

		.echo **PASS  ROL  abx

		ROL 	$1234,X
		ROL 	bak16,x
		ROL 	fwd16,X

		.echo **FAIL  ROL  abxfr

		rol 	$32, $1234, $5678
		rol 	$1234, bak08, fwd08
		rol 	fwd08, bak16, fwd16

		.echo **FAIL  ROL  abxi

		rol 	($1234,X)
		rol 	(bak16,x)
		rol 	(fwd16,X)

		.echo **FAIL  ROL  aby

		rol 	$1234,Y
		rol 	bak16,y
		rol 	fwd16,Y

		.echo **PASS  ROL  acc

		ROL 	A
		ROL 	a

		.echo **FAIL  ROL  imm

		rol 	#$12
		rol 	#bak08
		rol 	#fwd08

		.echo **PASS  ROL  imp

		ROL 

		.echo **PASS  ROL  pcr  (as ab)

		Rol 	:+
		Rol 	-
		Rol 	+
		Rol 	:-

		.echo **PASS  ROL  zp

		ROL 	$12
		ROL 	bak08
		Rol 	fwd08   	; (absolute)

		.echo **FAIL  ROL  zpi

		rol 	($12)
		rol 	(bak08)
		rol 	(fwd08)

		.echo **FAIL  ROL  zpimm

		rol 	#12, $34
		rol 	#bak08, bak08
		rol 	#$82, fwd08

		.echo **FAIL  ROL  zpimx

		rol 	#12, $34,X
		rol 	#bak08, bak08,x
		rol 	#$82, fwd08,X

		.echo **FAIL  ROL  zpiy

		rol 	($12),Y
		rol 	(bak08),y
		rol 	(fwd08),Y

		.echo **FAIL  ROL  zptr

		rol 	$12, :+
		rol 	bak08, -
		rol 	fwd08, +

		.echo **PASS  ROL  zpx

		ROL 	$12,X
		ROL 	bak08,x
		Rol 	fwd08,X 	; (absolute)

		.echo **FAIL  ROL  zpxi

		rol 	($12,X)
		rol 	(bak08,x)
		rol 	(fwd08,X)

		.echo **FAIL  ROL  zpy

		rol 	$12,Y
		rol 	bak08,y
		rol 	fwd08,Y


:	; forward ref for ROL

; -------------------------------

:	; backward ref for ROR

		.echo **PASS  ROR  ab

		ROR 	$1234
		ROR 	bak16
		ROR 	fwd16

		.echo **FAIL  ROR  abi

		ror 	($1234)
		ror 	(bak16)
		ror 	(fwd16)

		.echo **FAIL  ROR  abimm

		ror 	#12, $1234
		ror 	#bak08, bak16
		ror 	#$82, fwd16

		.echo **FAIL  ROR  abimx

		ror 	#12, $1234,x
		ror 	#bak08, bak16,X
		ror 	#$82, fwd16,x

		.echo **PASS  ROR  abx

		ROR 	$1234,X
		ROR 	bak16,x
		ROR 	fwd16,X

		.echo **FAIL  ROR  abxfr

		ror 	$32, $1234, $5678
		ror 	$1234, bak08, fwd08
		ror 	fwd08, bak16, fwd16

		.echo **FAIL  ROR  abxi

		ror 	($1234,X)
		ror 	(bak16,x)
		ror 	(fwd16,X)

		.echo **FAIL  ROR  aby

		ror 	$1234,Y
		ror 	bak16,y
		ror 	fwd16,Y

		.echo **PASS  ROR  acc

		ROR 	A
		ROR 	a

		.echo **FAIL  ROR  imm

		ror 	#$12
		ror 	#bak08
		ror 	#fwd08

		.echo **PASS  ROR  imp

		ROR 

		.echo **PASS  ROR  pcr  (as ab)

		Ror 	:+
		Ror 	-
		Ror 	+
		Ror 	:-

		.echo **PASS  ROR  zp

		ROR 	$12
		ROR 	bak08
		Ror 	fwd08   	; (absolute)

		.echo **FAIL  ROR  zpi

		ror 	($12)
		ror 	(bak08)
		ror 	(fwd08)

		.echo **FAIL  ROR  zpimm

		ror 	#12, $34
		ror 	#bak08, bak08
		ror 	#$82, fwd08

		.echo **FAIL  ROR  zpimx

		ror 	#12, $34,X
		ror 	#bak08, bak08,x
		ror 	#$82, fwd08,X

		.echo **FAIL  ROR  zpiy

		ror 	($12),Y
		ror 	(bak08),y
		ror 	(fwd08),Y

		.echo **FAIL  ROR  zptr

		ror 	$12, :+
		ror 	bak08, -
		ror 	fwd08, +

		.echo **PASS  ROR  zpx

		ROR 	$12,X
		ROR 	bak08,x
		Ror 	fwd08,X 	; (absolute)

		.echo **FAIL  ROR  zpxi

		ror 	($12,X)
		ror 	(bak08,x)
		ror 	(fwd08,X)

		.echo **FAIL  ROR  zpy

		ror 	$12,Y
		ror 	bak08,y
		ror 	fwd08,Y


:	; forward ref for ROR

; -------------------------------

:	; backward ref for RTI

		.echo **FAIL  RTI  ab

		rti 	$1234
		rti 	bak16
		rti 	fwd16

		.echo **FAIL  RTI  abi

		rti 	($1234)
		rti 	(bak16)
		rti 	(fwd16)

		.echo **FAIL  RTI  abimm

		rti 	#12, $1234
		rti 	#bak08, bak16
		rti 	#$82, fwd16

		.echo **FAIL  RTI  abimx

		rti 	#12, $1234,x
		rti 	#bak08, bak16,X
		rti 	#$82, fwd16,x

		.echo **FAIL  RTI  abx

		rti 	$1234,X
		rti 	bak16,x
		rti 	fwd16,X

		.echo **FAIL  RTI  abxfr

		rti 	$32, $1234, $5678
		rti 	$1234, bak08, fwd08
		rti 	fwd08, bak16, fwd16

		.echo **FAIL  RTI  abxi

		rti 	($1234,X)
		rti 	(bak16,x)
		rti 	(fwd16,X)

		.echo **FAIL  RTI  aby

		rti 	$1234,Y
		rti 	bak16,y
		rti 	fwd16,Y

		.echo **FAIL  RTI  acc

		rti 	A
		rti 	a

		.echo **FAIL  RTI  imm

		rti 	#$12
		rti 	#bak08
		rti 	#fwd08

		.echo **PASS  RTI  imp

		RTI 

		.echo **FAIL  RTI  pcr

		rti 	:+
		rti 	-
		rti 	+
		rti 	:-

		.echo **FAIL  RTI  zp

		rti 	$12
		rti 	bak08
		rti 	fwd08

		.echo **FAIL  RTI  zpi

		rti 	($12)
		rti 	(bak08)
		rti 	(fwd08)

		.echo **FAIL  RTI  zpimm

		rti 	#12, $34
		rti 	#bak08, bak08
		rti 	#$82, fwd08

		.echo **FAIL  RTI  zpimx

		rti 	#12, $34,X
		rti 	#bak08, bak08,x
		rti 	#$82, fwd08,X

		.echo **FAIL  RTI  zpiy

		rti 	($12),Y
		rti 	(bak08),y
		rti 	(fwd08),Y

		.echo **FAIL  RTI  zptr

		rti 	$12, :+
		rti 	bak08, -
		rti 	fwd08, +

		.echo **FAIL  RTI  zpx

		rti 	$12,X
		rti 	bak08,x
		rti 	fwd08,X

		.echo **FAIL  RTI  zpxi

		rti 	($12,X)
		rti 	(bak08,x)
		rti 	(fwd08,X)

		.echo **FAIL  RTI  zpy

		rti 	$12,Y
		rti 	bak08,y
		rti 	fwd08,Y


:	; forward ref for RTI

; -------------------------------

:	; backward ref for RTS

		.echo **FAIL  RTS  ab

		rts 	$1234
		rts 	bak16
		rts 	fwd16

		.echo **FAIL  RTS  abi

		rts 	($1234)
		rts 	(bak16)
		rts 	(fwd16)

		.echo **FAIL  RTS  abimm

		rts 	#12, $1234
		rts 	#bak08, bak16
		rts 	#$82, fwd16

		.echo **FAIL  RTS  abimx

		rts 	#12, $1234,x
		rts 	#bak08, bak16,X
		rts 	#$82, fwd16,x

		.echo **FAIL  RTS  abx

		rts 	$1234,X
		rts 	bak16,x
		rts 	fwd16,X

		.echo **FAIL  RTS  abxfr

		rts 	$32, $1234, $5678
		rts 	$1234, bak08, fwd08
		rts 	fwd08, bak16, fwd16

		.echo **FAIL  RTS  abxi

		rts 	($1234,X)
		rts 	(bak16,x)
		rts 	(fwd16,X)

		.echo **FAIL  RTS  aby

		rts 	$1234,Y
		rts 	bak16,y
		rts 	fwd16,Y

		.echo **FAIL  RTS  acc

		rts 	A
		rts 	a

		.echo **FAIL  RTS  imm

		rts 	#$12
		rts 	#bak08
		rts 	#fwd08

		.echo **PASS  RTS  imp

		RTS 

		.echo **FAIL  RTS  pcr

		rts 	:+
		rts 	-
		rts 	+
		rts 	:-

		.echo **FAIL  RTS  zp

		rts 	$12
		rts 	bak08
		rts 	fwd08

		.echo **FAIL  RTS  zpi

		rts 	($12)
		rts 	(bak08)
		rts 	(fwd08)

		.echo **FAIL  RTS  zpimm

		rts 	#12, $34
		rts 	#bak08, bak08
		rts 	#$82, fwd08

		.echo **FAIL  RTS  zpimx

		rts 	#12, $34,X
		rts 	#bak08, bak08,x
		rts 	#$82, fwd08,X

		.echo **FAIL  RTS  zpiy

		rts 	($12),Y
		rts 	(bak08),y
		rts 	(fwd08),Y

		.echo **FAIL  RTS  zptr

		rts 	$12, :+
		rts 	bak08, -
		rts 	fwd08, +

		.echo **FAIL  RTS  zpx

		rts 	$12,X
		rts 	bak08,x
		rts 	fwd08,X

		.echo **FAIL  RTS  zpxi

		rts 	($12,X)
		rts 	(bak08,x)
		rts 	(fwd08,X)

		.echo **FAIL  RTS  zpy

		rts 	$12,Y
		rts 	bak08,y
		rts 	fwd08,Y


:	; forward ref for RTS

; -------------------------------

:	; backward ref for SAX

		.echo **FAIL  SAX  ab

		sax 	$1234
		sax 	bak16
		sax 	fwd16

		.echo **FAIL  SAX  abi

		sax 	($1234)
		sax 	(bak16)
		sax 	(fwd16)

		.echo **FAIL  SAX  abimm

		sax 	#12, $1234
		sax 	#bak08, bak16
		sax 	#$82, fwd16

		.echo **FAIL  SAX  abimx

		sax 	#12, $1234,x
		sax 	#bak08, bak16,X
		sax 	#$82, fwd16,x

		.echo **FAIL  SAX  abx

		sax 	$1234,X
		sax 	bak16,x
		sax 	fwd16,X

		.echo **FAIL  SAX  abxfr

		sax 	$32, $1234, $5678
		sax 	$1234, bak08, fwd08
		sax 	fwd08, bak16, fwd16

		.echo **FAIL  SAX  abxi

		sax 	($1234,X)
		sax 	(bak16,x)
		sax 	(fwd16,X)

		.echo **FAIL  SAX  aby

		sax 	$1234,Y
		sax 	bak16,y
		sax 	fwd16,Y

		.echo **FAIL  SAX  acc

		sax 	A
		sax 	a

		.echo **FAIL  SAX  imm

		sax 	#$12
		sax 	#bak08
		sax 	#fwd08

		.echo **PASS  SAX  imp

		SAX 

		.echo **FAIL  SAX  pcr

		sax 	:+
		sax 	-
		sax 	+
		sax 	:-

		.echo **FAIL  SAX  zp

		sax 	$12
		sax 	bak08
		sax 	fwd08

		.echo **FAIL  SAX  zpi

		sax 	($12)
		sax 	(bak08)
		sax 	(fwd08)

		.echo **FAIL  SAX  zpimm

		sax 	#12, $34
		sax 	#bak08, bak08
		sax 	#$82, fwd08

		.echo **FAIL  SAX  zpimx

		sax 	#12, $34,X
		sax 	#bak08, bak08,x
		sax 	#$82, fwd08,X

		.echo **FAIL  SAX  zpiy

		sax 	($12),Y
		sax 	(bak08),y
		sax 	(fwd08),Y

		.echo **FAIL  SAX  zptr

		sax 	$12, :+
		sax 	bak08, -
		sax 	fwd08, +

		.echo **FAIL  SAX  zpx

		sax 	$12,X
		sax 	bak08,x
		sax 	fwd08,X

		.echo **FAIL  SAX  zpxi

		sax 	($12,X)
		sax 	(bak08,x)
		sax 	(fwd08,X)

		.echo **FAIL  SAX  zpy

		sax 	$12,Y
		sax 	bak08,y
		sax 	fwd08,Y


:	; forward ref for SAX

; -------------------------------

:	; backward ref for SAY

		.echo **FAIL  SAY  ab

		say 	$1234
		say 	bak16
		say 	fwd16

		.echo **FAIL  SAY  abi

		say 	($1234)
		say 	(bak16)
		say 	(fwd16)

		.echo **FAIL  SAY  abimm

		say 	#12, $1234
		say 	#bak08, bak16
		say 	#$82, fwd16

		.echo **FAIL  SAY  abimx

		say 	#12, $1234,x
		say 	#bak08, bak16,X
		say 	#$82, fwd16,x

		.echo **FAIL  SAY  abx

		say 	$1234,X
		say 	bak16,x
		say 	fwd16,X

		.echo **FAIL  SAY  abxfr

		say 	$32, $1234, $5678
		say 	$1234, bak08, fwd08
		say 	fwd08, bak16, fwd16

		.echo **FAIL  SAY  abxi

		say 	($1234,X)
		say 	(bak16,x)
		say 	(fwd16,X)

		.echo **FAIL  SAY  aby

		say 	$1234,Y
		say 	bak16,y
		say 	fwd16,Y

		.echo **FAIL  SAY  acc

		say 	A
		say 	a

		.echo **FAIL  SAY  imm

		say 	#$12
		say 	#bak08
		say 	#fwd08

		.echo **PASS  SAY  imp

		SAY 

		.echo **FAIL  SAY  pcr

		say 	:+
		say 	-
		say 	+
		say 	:-

		.echo **FAIL  SAY  zp

		say 	$12
		say 	bak08
		say 	fwd08

		.echo **FAIL  SAY  zpi

		say 	($12)
		say 	(bak08)
		say 	(fwd08)

		.echo **FAIL  SAY  zpimm

		say 	#12, $34
		say 	#bak08, bak08
		say 	#$82, fwd08

		.echo **FAIL  SAY  zpimx

		say 	#12, $34,X
		say 	#bak08, bak08,x
		say 	#$82, fwd08,X

		.echo **FAIL  SAY  zpiy

		say 	($12),Y
		say 	(bak08),y
		say 	(fwd08),Y

		.echo **FAIL  SAY  zptr

		say 	$12, :+
		say 	bak08, -
		say 	fwd08, +

		.echo **FAIL  SAY  zpx

		say 	$12,X
		say 	bak08,x
		say 	fwd08,X

		.echo **FAIL  SAY  zpxi

		say 	($12,X)
		say 	(bak08,x)
		say 	(fwd08,X)

		.echo **FAIL  SAY  zpy

		say 	$12,Y
		say 	bak08,y
		say 	fwd08,Y


:	; forward ref for SAY

; -------------------------------

:	; backward ref for SBC

		.echo **PASS  SBC  ab

		SBC 	$1234
		SBC 	bak16
		SBC 	fwd16

		.echo **PASS  SBC  abi  (as zpi)

		Sbc 	($1234)
		Sbc 	(bak16)
		Sbc 	(fwd16)

		.echo **FAIL  SBC  abimm

		sbc 	#12, $1234
		sbc 	#bak08, bak16
		sbc 	#$82, fwd16

		.echo **FAIL  SBC  abimx

		sbc 	#12, $1234,x
		sbc 	#bak08, bak16,X
		sbc 	#$82, fwd16,x

		.echo **PASS  SBC  abx

		SBC 	$1234,X
		SBC 	bak16,x
		SBC 	fwd16,X

		.echo **FAIL  SBC  abxfr

		sbc 	$32, $1234, $5678
		sbc 	$1234, bak08, fwd08
		sbc 	fwd08, bak16, fwd16

		.echo **PASS  SBC  abxi  (as zpxi)

		Sbc 	($1234,X)
		Sbc 	(bak16,x)
		Sbc 	(fwd16,X)

		.echo **PASS  SBC  aby

		SBC 	$1234,Y
		SBC 	bak16,y
		SBC 	fwd16,Y

		.echo **FAIL  SBC  acc

		sbc 	A
		sbc 	a

		.echo **PASS  SBC  imm

		SBC 	#$12
		SBC 	#bak08
		SBC 	#fwd08

		.echo **FAIL  SBC  imp

		sbc 

		.echo **PASS  SBC  pcr  (as ab)

		Sbc 	:+
		Sbc 	-
		Sbc 	+
		Sbc 	:-

		.echo **PASS  SBC  zp

		SBC 	$12
		SBC 	bak08
		Sbc 	fwd08   	; (absolute)

		.echo **PASS  SBC  zpi

		SBC 	($12)
		SBC 	(bak08)
		SBC 	(fwd08)

		.echo **FAIL  SBC  zpimm

		sbc 	#12, $34
		sbc 	#bak08, bak08
		sbc 	#$82, fwd08

		.echo **FAIL  SBC  zpimx

		sbc 	#12, $34,X
		sbc 	#bak08, bak08,x
		sbc 	#$82, fwd08,X

		.echo **PASS  SBC  zpiy

		SBC 	($12),Y
		SBC 	(bak08),y
		SBC 	(fwd08),Y

		.echo **FAIL  SBC  zptr

		sbc 	$12, :+
		sbc 	bak08, -
		sbc 	fwd08, +

		.echo **PASS  SBC  zpx

		SBC 	$12,X
		SBC 	bak08,x
		Sbc 	fwd08,X 	; (absolute)

		.echo **PASS  SBC  zpxi

		SBC 	($12,X)
		SBC 	(bak08,x)
		SBC 	(fwd08,X)

		.echo **PASS  SBC  zpy  (as aby)

		Sbc 	$12,Y
		Sbc 	bak08,y
		Sbc 	fwd08,Y


:	; forward ref for SBC

; -------------------------------

:	; backward ref for SEC

		.echo **FAIL  SEC  ab

		sec 	$1234
		sec 	bak16
		sec 	fwd16

		.echo **FAIL  SEC  abi

		sec 	($1234)
		sec 	(bak16)
		sec 	(fwd16)

		.echo **FAIL  SEC  abimm

		sec 	#12, $1234
		sec 	#bak08, bak16
		sec 	#$82, fwd16

		.echo **FAIL  SEC  abimx

		sec 	#12, $1234,x
		sec 	#bak08, bak16,X
		sec 	#$82, fwd16,x

		.echo **FAIL  SEC  abx

		sec 	$1234,X
		sec 	bak16,x
		sec 	fwd16,X

		.echo **FAIL  SEC  abxfr

		sec 	$32, $1234, $5678
		sec 	$1234, bak08, fwd08
		sec 	fwd08, bak16, fwd16

		.echo **FAIL  SEC  abxi

		sec 	($1234,X)
		sec 	(bak16,x)
		sec 	(fwd16,X)

		.echo **FAIL  SEC  aby

		sec 	$1234,Y
		sec 	bak16,y
		sec 	fwd16,Y

		.echo **FAIL  SEC  acc

		sec 	A
		sec 	a

		.echo **FAIL  SEC  imm

		sec 	#$12
		sec 	#bak08
		sec 	#fwd08

		.echo **PASS  SEC  imp

		SEC 

		.echo **FAIL  SEC  pcr

		sec 	:+
		sec 	-
		sec 	+
		sec 	:-

		.echo **FAIL  SEC  zp

		sec 	$12
		sec 	bak08
		sec 	fwd08

		.echo **FAIL  SEC  zpi

		sec 	($12)
		sec 	(bak08)
		sec 	(fwd08)

		.echo **FAIL  SEC  zpimm

		sec 	#12, $34
		sec 	#bak08, bak08
		sec 	#$82, fwd08

		.echo **FAIL  SEC  zpimx

		sec 	#12, $34,X
		sec 	#bak08, bak08,x
		sec 	#$82, fwd08,X

		.echo **FAIL  SEC  zpiy

		sec 	($12),Y
		sec 	(bak08),y
		sec 	(fwd08),Y

		.echo **FAIL  SEC  zptr

		sec 	$12, :+
		sec 	bak08, -
		sec 	fwd08, +

		.echo **FAIL  SEC  zpx

		sec 	$12,X
		sec 	bak08,x
		sec 	fwd08,X

		.echo **FAIL  SEC  zpxi

		sec 	($12,X)
		sec 	(bak08,x)
		sec 	(fwd08,X)

		.echo **FAIL  SEC  zpy

		sec 	$12,Y
		sec 	bak08,y
		sec 	fwd08,Y


:	; forward ref for SEC

; -------------------------------

:	; backward ref for SED

		.echo **FAIL  SED  ab

		sed 	$1234
		sed 	bak16
		sed 	fwd16

		.echo **FAIL  SED  abi

		sed 	($1234)
		sed 	(bak16)
		sed 	(fwd16)

		.echo **FAIL  SED  abimm

		sed 	#12, $1234
		sed 	#bak08, bak16
		sed 	#$82, fwd16

		.echo **FAIL  SED  abimx

		sed 	#12, $1234,x
		sed 	#bak08, bak16,X
		sed 	#$82, fwd16,x

		.echo **FAIL  SED  abx

		sed 	$1234,X
		sed 	bak16,x
		sed 	fwd16,X

		.echo **FAIL  SED  abxfr

		sed 	$32, $1234, $5678
		sed 	$1234, bak08, fwd08
		sed 	fwd08, bak16, fwd16

		.echo **FAIL  SED  abxi

		sed 	($1234,X)
		sed 	(bak16,x)
		sed 	(fwd16,X)

		.echo **FAIL  SED  aby

		sed 	$1234,Y
		sed 	bak16,y
		sed 	fwd16,Y

		.echo **FAIL  SED  acc

		sed 	A
		sed 	a

		.echo **FAIL  SED  imm

		sed 	#$12
		sed 	#bak08
		sed 	#fwd08

		.echo **PASS  SED  imp

		SED 

		.echo **FAIL  SED  pcr

		sed 	:+
		sed 	-
		sed 	+
		sed 	:-

		.echo **FAIL  SED  zp

		sed 	$12
		sed 	bak08
		sed 	fwd08

		.echo **FAIL  SED  zpi

		sed 	($12)
		sed 	(bak08)
		sed 	(fwd08)

		.echo **FAIL  SED  zpimm

		sed 	#12, $34
		sed 	#bak08, bak08
		sed 	#$82, fwd08

		.echo **FAIL  SED  zpimx

		sed 	#12, $34,X
		sed 	#bak08, bak08,x
		sed 	#$82, fwd08,X

		.echo **FAIL  SED  zpiy

		sed 	($12),Y
		sed 	(bak08),y
		sed 	(fwd08),Y

		.echo **FAIL  SED  zptr

		sed 	$12, :+
		sed 	bak08, -
		sed 	fwd08, +

		.echo **FAIL  SED  zpx

		sed 	$12,X
		sed 	bak08,x
		sed 	fwd08,X

		.echo **FAIL  SED  zpxi

		sed 	($12,X)
		sed 	(bak08,x)
		sed 	(fwd08,X)

		.echo **FAIL  SED  zpy

		sed 	$12,Y
		sed 	bak08,y
		sed 	fwd08,Y


:	; forward ref for SED

; -------------------------------

:	; backward ref for SEI

		.echo **FAIL  SEI  ab

		sei 	$1234
		sei 	bak16
		sei 	fwd16

		.echo **FAIL  SEI  abi

		sei 	($1234)
		sei 	(bak16)
		sei 	(fwd16)

		.echo **FAIL  SEI  abimm

		sei 	#12, $1234
		sei 	#bak08, bak16
		sei 	#$82, fwd16

		.echo **FAIL  SEI  abimx

		sei 	#12, $1234,x
		sei 	#bak08, bak16,X
		sei 	#$82, fwd16,x

		.echo **FAIL  SEI  abx

		sei 	$1234,X
		sei 	bak16,x
		sei 	fwd16,X

		.echo **FAIL  SEI  abxfr

		sei 	$32, $1234, $5678
		sei 	$1234, bak08, fwd08
		sei 	fwd08, bak16, fwd16

		.echo **FAIL  SEI  abxi

		sei 	($1234,X)
		sei 	(bak16,x)
		sei 	(fwd16,X)

		.echo **FAIL  SEI  aby

		sei 	$1234,Y
		sei 	bak16,y
		sei 	fwd16,Y

		.echo **FAIL  SEI  acc

		sei 	A
		sei 	a

		.echo **FAIL  SEI  imm

		sei 	#$12
		sei 	#bak08
		sei 	#fwd08

		.echo **PASS  SEI  imp

		SEI 

		.echo **FAIL  SEI  pcr

		sei 	:+
		sei 	-
		sei 	+
		sei 	:-

		.echo **FAIL  SEI  zp

		sei 	$12
		sei 	bak08
		sei 	fwd08

		.echo **FAIL  SEI  zpi

		sei 	($12)
		sei 	(bak08)
		sei 	(fwd08)

		.echo **FAIL  SEI  zpimm

		sei 	#12, $34
		sei 	#bak08, bak08
		sei 	#$82, fwd08

		.echo **FAIL  SEI  zpimx

		sei 	#12, $34,X
		sei 	#bak08, bak08,x
		sei 	#$82, fwd08,X

		.echo **FAIL  SEI  zpiy

		sei 	($12),Y
		sei 	(bak08),y
		sei 	(fwd08),Y

		.echo **FAIL  SEI  zptr

		sei 	$12, :+
		sei 	bak08, -
		sei 	fwd08, +

		.echo **FAIL  SEI  zpx

		sei 	$12,X
		sei 	bak08,x
		sei 	fwd08,X

		.echo **FAIL  SEI  zpxi

		sei 	($12,X)
		sei 	(bak08,x)
		sei 	(fwd08,X)

		.echo **FAIL  SEI  zpy

		sei 	$12,Y
		sei 	bak08,y
		sei 	fwd08,Y


:	; forward ref for SEI

; -------------------------------

:	; backward ref for SET

		.echo **FAIL  SET  ab

		set 	$1234
		set 	bak16
		set 	fwd16

		.echo **FAIL  SET  abi

		set 	($1234)
		set 	(bak16)
		set 	(fwd16)

		.echo **FAIL  SET  abimm

		set 	#12, $1234
		set 	#bak08, bak16
		set 	#$82, fwd16

		.echo **FAIL  SET  abimx

		set 	#12, $1234,x
		set 	#bak08, bak16,X
		set 	#$82, fwd16,x

		.echo **FAIL  SET  abx

		set 	$1234,X
		set 	bak16,x
		set 	fwd16,X

		.echo **FAIL  SET  abxfr

		set 	$32, $1234, $5678
		set 	$1234, bak08, fwd08
		set 	fwd08, bak16, fwd16

		.echo **FAIL  SET  abxi

		set 	($1234,X)
		set 	(bak16,x)
		set 	(fwd16,X)

		.echo **FAIL  SET  aby

		set 	$1234,Y
		set 	bak16,y
		set 	fwd16,Y

		.echo **FAIL  SET  acc

		set 	A
		set 	a

		.echo **FAIL  SET  imm

		set 	#$12
		set 	#bak08
		set 	#fwd08

		.echo **PASS  SET  imp

		SET 

		.echo **FAIL  SET  pcr

		set 	:+
		set 	-
		set 	+
		set 	:-

		.echo **FAIL  SET  zp

		set 	$12
		set 	bak08
		set 	fwd08

		.echo **FAIL  SET  zpi

		set 	($12)
		set 	(bak08)
		set 	(fwd08)

		.echo **FAIL  SET  zpimm

		set 	#12, $34
		set 	#bak08, bak08
		set 	#$82, fwd08

		.echo **FAIL  SET  zpimx

		set 	#12, $34,X
		set 	#bak08, bak08,x
		set 	#$82, fwd08,X

		.echo **FAIL  SET  zpiy

		set 	($12),Y
		set 	(bak08),y
		set 	(fwd08),Y

		.echo **FAIL  SET  zptr

		set 	$12, :+
		set 	bak08, -
		set 	fwd08, +

		.echo **FAIL  SET  zpx

		set 	$12,X
		set 	bak08,x
		set 	fwd08,X

		.echo **FAIL  SET  zpxi

		set 	($12,X)
		set 	(bak08,x)
		set 	(fwd08,X)

		.echo **FAIL  SET  zpy

		set 	$12,Y
		set 	bak08,y
		set 	fwd08,Y


:	; forward ref for SET

; -------------------------------

:	; backward ref for SMB0

		.echo **PASS  SMB0  ab  (as zp)

		Smb0	$1234
		Smb0	bak16
		Smb0	fwd16

		.echo **FAIL  SMB0  abi

		smb0	($1234)
		smb0	(bak16)
		smb0	(fwd16)

		.echo **FAIL  SMB0  abimm

		smb0	#12, $1234
		smb0	#bak08, bak16
		smb0	#$82, fwd16

		.echo **FAIL  SMB0  abimx

		smb0	#12, $1234,x
		smb0	#bak08, bak16,X
		smb0	#$82, fwd16,x

		.echo **FAIL  SMB0  abx

		smb0	$1234,X
		smb0	bak16,x
		smb0	fwd16,X

		.echo **FAIL  SMB0  abxfr

		smb0	$32, $1234, $5678
		smb0	$1234, bak08, fwd08
		smb0	fwd08, bak16, fwd16

		.echo **FAIL  SMB0  abxi

		smb0	($1234,X)
		smb0	(bak16,x)
		smb0	(fwd16,X)

		.echo **FAIL  SMB0  aby

		smb0	$1234,Y
		smb0	bak16,y
		smb0	fwd16,Y

		.echo **FAIL  SMB0  acc

		smb0	A
		smb0	a

		.echo **FAIL  SMB0  imm

		smb0	#$12
		smb0	#bak08
		smb0	#fwd08

		.echo **FAIL  SMB0  imp

		smb0

		.echo **PASS  SMB0  pcr  (as zp)

		Smb0	:+
		Smb0	-
		Smb0	+
		Smb0	:-

		.echo **PASS  SMB0  zp

		SMB0	$12
		SMB0	bak08
		SMB0	fwd08

		.echo **FAIL  SMB0  zpi

		smb0	($12)
		smb0	(bak08)
		smb0	(fwd08)

		.echo **FAIL  SMB0  zpimm

		smb0	#12, $34
		smb0	#bak08, bak08
		smb0	#$82, fwd08

		.echo **FAIL  SMB0  zpimx

		smb0	#12, $34,X
		smb0	#bak08, bak08,x
		smb0	#$82, fwd08,X

		.echo **FAIL  SMB0  zpiy

		smb0	($12),Y
		smb0	(bak08),y
		smb0	(fwd08),Y

		.echo **FAIL  SMB0  zptr

		smb0	$12, :+
		smb0	bak08, -
		smb0	fwd08, +

		.echo **FAIL  SMB0  zpx

		smb0	$12,X
		smb0	bak08,x
		smb0	fwd08,X

		.echo **FAIL  SMB0  zpxi

		smb0	($12,X)
		smb0	(bak08,x)
		smb0	(fwd08,X)

		.echo **FAIL  SMB0  zpy

		smb0	$12,Y
		smb0	bak08,y
		smb0	fwd08,Y


:	; forward ref for SMB0

; -------------------------------

:	; backward ref for SMB1

		.echo **PASS  SMB1  ab  (as zp)

		Smb1	$1234
		Smb1	bak16
		Smb1	fwd16

		.echo **FAIL  SMB1  abi

		smb1	($1234)
		smb1	(bak16)
		smb1	(fwd16)

		.echo **FAIL  SMB1  abimm

		smb1	#12, $1234
		smb1	#bak08, bak16
		smb1	#$82, fwd16

		.echo **FAIL  SMB1  abimx

		smb1	#12, $1234,x
		smb1	#bak08, bak16,X
		smb1	#$82, fwd16,x

		.echo **FAIL  SMB1  abx

		smb1	$1234,X
		smb1	bak16,x
		smb1	fwd16,X

		.echo **FAIL  SMB1  abxfr

		smb1	$32, $1234, $5678
		smb1	$1234, bak08, fwd08
		smb1	fwd08, bak16, fwd16

		.echo **FAIL  SMB1  abxi

		smb1	($1234,X)
		smb1	(bak16,x)
		smb1	(fwd16,X)

		.echo **FAIL  SMB1  aby

		smb1	$1234,Y
		smb1	bak16,y
		smb1	fwd16,Y

		.echo **FAIL  SMB1  acc

		smb1	A
		smb1	a

		.echo **FAIL  SMB1  imm

		smb1	#$12
		smb1	#bak08
		smb1	#fwd08

		.echo **FAIL  SMB1  imp

		smb1

		.echo **PASS  SMB1  pcr  (as zp)

		Smb1	:+
		Smb1	-
		Smb1	+
		Smb1	:-

		.echo **PASS  SMB1  zp

		SMB1	$12
		SMB1	bak08
		SMB1	fwd08

		.echo **FAIL  SMB1  zpi

		smb1	($12)
		smb1	(bak08)
		smb1	(fwd08)

		.echo **FAIL  SMB1  zpimm

		smb1	#12, $34
		smb1	#bak08, bak08
		smb1	#$82, fwd08

		.echo **FAIL  SMB1  zpimx

		smb1	#12, $34,X
		smb1	#bak08, bak08,x
		smb1	#$82, fwd08,X

		.echo **FAIL  SMB1  zpiy

		smb1	($12),Y
		smb1	(bak08),y
		smb1	(fwd08),Y

		.echo **FAIL  SMB1  zptr

		smb1	$12, :+
		smb1	bak08, -
		smb1	fwd08, +

		.echo **FAIL  SMB1  zpx

		smb1	$12,X
		smb1	bak08,x
		smb1	fwd08,X

		.echo **FAIL  SMB1  zpxi

		smb1	($12,X)
		smb1	(bak08,x)
		smb1	(fwd08,X)

		.echo **FAIL  SMB1  zpy

		smb1	$12,Y
		smb1	bak08,y
		smb1	fwd08,Y


:	; forward ref for SMB1

; -------------------------------

:	; backward ref for SMB2

		.echo **PASS  SMB2  ab  (as zp)

		Smb2	$1234
		Smb2	bak16
		Smb2	fwd16

		.echo **FAIL  SMB2  abi

		smb2	($1234)
		smb2	(bak16)
		smb2	(fwd16)

		.echo **FAIL  SMB2  abimm

		smb2	#12, $1234
		smb2	#bak08, bak16
		smb2	#$82, fwd16

		.echo **FAIL  SMB2  abimx

		smb2	#12, $1234,x
		smb2	#bak08, bak16,X
		smb2	#$82, fwd16,x

		.echo **FAIL  SMB2  abx

		smb2	$1234,X
		smb2	bak16,x
		smb2	fwd16,X

		.echo **FAIL  SMB2  abxfr

		smb2	$32, $1234, $5678
		smb2	$1234, bak08, fwd08
		smb2	fwd08, bak16, fwd16

		.echo **FAIL  SMB2  abxi

		smb2	($1234,X)
		smb2	(bak16,x)
		smb2	(fwd16,X)

		.echo **FAIL  SMB2  aby

		smb2	$1234,Y
		smb2	bak16,y
		smb2	fwd16,Y

		.echo **FAIL  SMB2  acc

		smb2	A
		smb2	a

		.echo **FAIL  SMB2  imm

		smb2	#$12
		smb2	#bak08
		smb2	#fwd08

		.echo **FAIL  SMB2  imp

		smb2

		.echo **PASS  SMB2  pcr  (as zp)

		Smb2	:+
		Smb2	-
		Smb2	+
		Smb2	:-

		.echo **PASS  SMB2  zp

		SMB2	$12
		SMB2	bak08
		SMB2	fwd08

		.echo **FAIL  SMB2  zpi

		smb2	($12)
		smb2	(bak08)
		smb2	(fwd08)

		.echo **FAIL  SMB2  zpimm

		smb2	#12, $34
		smb2	#bak08, bak08
		smb2	#$82, fwd08

		.echo **FAIL  SMB2  zpimx

		smb2	#12, $34,X
		smb2	#bak08, bak08,x
		smb2	#$82, fwd08,X

		.echo **FAIL  SMB2  zpiy

		smb2	($12),Y
		smb2	(bak08),y
		smb2	(fwd08),Y

		.echo **FAIL  SMB2  zptr

		smb2	$12, :+
		smb2	bak08, -
		smb2	fwd08, +

		.echo **FAIL  SMB2  zpx

		smb2	$12,X
		smb2	bak08,x
		smb2	fwd08,X

		.echo **FAIL  SMB2  zpxi

		smb2	($12,X)
		smb2	(bak08,x)
		smb2	(fwd08,X)

		.echo **FAIL  SMB2  zpy

		smb2	$12,Y
		smb2	bak08,y
		smb2	fwd08,Y


:	; forward ref for SMB2

; -------------------------------

:	; backward ref for SMB3

		.echo **PASS  SMB3  ab  (as zp)

		Smb3	$1234
		Smb3	bak16
		Smb3	fwd16

		.echo **FAIL  SMB3  abi

		smb3	($1234)
		smb3	(bak16)
		smb3	(fwd16)

		.echo **FAIL  SMB3  abimm

		smb3	#12, $1234
		smb3	#bak08, bak16
		smb3	#$82, fwd16

		.echo **FAIL  SMB3  abimx

		smb3	#12, $1234,x
		smb3	#bak08, bak16,X
		smb3	#$82, fwd16,x

		.echo **FAIL  SMB3  abx

		smb3	$1234,X
		smb3	bak16,x
		smb3	fwd16,X

		.echo **FAIL  SMB3  abxfr

		smb3	$32, $1234, $5678
		smb3	$1234, bak08, fwd08
		smb3	fwd08, bak16, fwd16

		.echo **FAIL  SMB3  abxi

		smb3	($1234,X)
		smb3	(bak16,x)
		smb3	(fwd16,X)

		.echo **FAIL  SMB3  aby

		smb3	$1234,Y
		smb3	bak16,y
		smb3	fwd16,Y

		.echo **FAIL  SMB3  acc

		smb3	A
		smb3	a

		.echo **FAIL  SMB3  imm

		smb3	#$12
		smb3	#bak08
		smb3	#fwd08

		.echo **FAIL  SMB3  imp

		smb3

		.echo **PASS  SMB3  pcr  (as zp)

		Smb3	:+
		Smb3	-
		Smb3	+
		Smb3	:-

		.echo **PASS  SMB3  zp

		SMB3	$12
		SMB3	bak08
		SMB3	fwd08

		.echo **FAIL  SMB3  zpi

		smb3	($12)
		smb3	(bak08)
		smb3	(fwd08)

		.echo **FAIL  SMB3  zpimm

		smb3	#12, $34
		smb3	#bak08, bak08
		smb3	#$82, fwd08

		.echo **FAIL  SMB3  zpimx

		smb3	#12, $34,X
		smb3	#bak08, bak08,x
		smb3	#$82, fwd08,X

		.echo **FAIL  SMB3  zpiy

		smb3	($12),Y
		smb3	(bak08),y
		smb3	(fwd08),Y

		.echo **FAIL  SMB3  zptr

		smb3	$12, :+
		smb3	bak08, -
		smb3	fwd08, +

		.echo **FAIL  SMB3  zpx

		smb3	$12,X
		smb3	bak08,x
		smb3	fwd08,X

		.echo **FAIL  SMB3  zpxi

		smb3	($12,X)
		smb3	(bak08,x)
		smb3	(fwd08,X)

		.echo **FAIL  SMB3  zpy

		smb3	$12,Y
		smb3	bak08,y
		smb3	fwd08,Y


:	; forward ref for SMB3

; -------------------------------

:	; backward ref for SMB4

		.echo **PASS  SMB4  ab  (as zp)

		Smb4	$1234
		Smb4	bak16
		Smb4	fwd16

		.echo **FAIL  SMB4  abi

		smb4	($1234)
		smb4	(bak16)
		smb4	(fwd16)

		.echo **FAIL  SMB4  abimm

		smb4	#12, $1234
		smb4	#bak08, bak16
		smb4	#$82, fwd16

		.echo **FAIL  SMB4  abimx

		smb4	#12, $1234,x
		smb4	#bak08, bak16,X
		smb4	#$82, fwd16,x

		.echo **FAIL  SMB4  abx

		smb4	$1234,X
		smb4	bak16,x
		smb4	fwd16,X

		.echo **FAIL  SMB4  abxfr

		smb4	$32, $1234, $5678
		smb4	$1234, bak08, fwd08
		smb4	fwd08, bak16, fwd16

		.echo **FAIL  SMB4  abxi

		smb4	($1234,X)
		smb4	(bak16,x)
		smb4	(fwd16,X)

		.echo **FAIL  SMB4  aby

		smb4	$1234,Y
		smb4	bak16,y
		smb4	fwd16,Y

		.echo **FAIL  SMB4  acc

		smb4	A
		smb4	a

		.echo **FAIL  SMB4  imm

		smb4	#$12
		smb4	#bak08
		smb4	#fwd08

		.echo **FAIL  SMB4  imp

		smb4

		.echo **PASS  SMB4  pcr  (as zp)

		Smb4	:+
		Smb4	-
		Smb4	+
		Smb4	:-

		.echo **PASS  SMB4  zp

		SMB4	$12
		SMB4	bak08
		SMB4	fwd08

		.echo **FAIL  SMB4  zpi

		smb4	($12)
		smb4	(bak08)
		smb4	(fwd08)

		.echo **FAIL  SMB4  zpimm

		smb4	#12, $34
		smb4	#bak08, bak08
		smb4	#$82, fwd08

		.echo **FAIL  SMB4  zpimx

		smb4	#12, $34,X
		smb4	#bak08, bak08,x
		smb4	#$82, fwd08,X

		.echo **FAIL  SMB4  zpiy

		smb4	($12),Y
		smb4	(bak08),y
		smb4	(fwd08),Y

		.echo **FAIL  SMB4  zptr

		smb4	$12, :+
		smb4	bak08, -
		smb4	fwd08, +

		.echo **FAIL  SMB4  zpx

		smb4	$12,X
		smb4	bak08,x
		smb4	fwd08,X

		.echo **FAIL  SMB4  zpxi

		smb4	($12,X)
		smb4	(bak08,x)
		smb4	(fwd08,X)

		.echo **FAIL  SMB4  zpy

		smb4	$12,Y
		smb4	bak08,y
		smb4	fwd08,Y


:	; forward ref for SMB4

; -------------------------------

:	; backward ref for SMB5

		.echo **PASS  SMB5  ab  (as zp)

		Smb5	$1234
		Smb5	bak16
		Smb5	fwd16

		.echo **FAIL  SMB5  abi

		smb5	($1234)
		smb5	(bak16)
		smb5	(fwd16)

		.echo **FAIL  SMB5  abimm

		smb5	#12, $1234
		smb5	#bak08, bak16
		smb5	#$82, fwd16

		.echo **FAIL  SMB5  abimx

		smb5	#12, $1234,x
		smb5	#bak08, bak16,X
		smb5	#$82, fwd16,x

		.echo **FAIL  SMB5  abx

		smb5	$1234,X
		smb5	bak16,x
		smb5	fwd16,X

		.echo **FAIL  SMB5  abxfr

		smb5	$32, $1234, $5678
		smb5	$1234, bak08, fwd08
		smb5	fwd08, bak16, fwd16

		.echo **FAIL  SMB5  abxi

		smb5	($1234,X)
		smb5	(bak16,x)
		smb5	(fwd16,X)

		.echo **FAIL  SMB5  aby

		smb5	$1234,Y
		smb5	bak16,y
		smb5	fwd16,Y

		.echo **FAIL  SMB5  acc

		smb5	A
		smb5	a

		.echo **FAIL  SMB5  imm

		smb5	#$12
		smb5	#bak08
		smb5	#fwd08

		.echo **FAIL  SMB5  imp

		smb5

		.echo **PASS  SMB5  pcr  (as zp)

		Smb5	:+
		Smb5	-
		Smb5	+
		Smb5	:-

		.echo **PASS  SMB5  zp

		SMB5	$12
		SMB5	bak08
		SMB5	fwd08

		.echo **FAIL  SMB5  zpi

		smb5	($12)
		smb5	(bak08)
		smb5	(fwd08)

		.echo **FAIL  SMB5  zpimm

		smb5	#12, $34
		smb5	#bak08, bak08
		smb5	#$82, fwd08

		.echo **FAIL  SMB5  zpimx

		smb5	#12, $34,X
		smb5	#bak08, bak08,x
		smb5	#$82, fwd08,X

		.echo **FAIL  SMB5  zpiy

		smb5	($12),Y
		smb5	(bak08),y
		smb5	(fwd08),Y

		.echo **FAIL  SMB5  zptr

		smb5	$12, :+
		smb5	bak08, -
		smb5	fwd08, +

		.echo **FAIL  SMB5  zpx

		smb5	$12,X
		smb5	bak08,x
		smb5	fwd08,X

		.echo **FAIL  SMB5  zpxi

		smb5	($12,X)
		smb5	(bak08,x)
		smb5	(fwd08,X)

		.echo **FAIL  SMB5  zpy

		smb5	$12,Y
		smb5	bak08,y
		smb5	fwd08,Y


:	; forward ref for SMB5

; -------------------------------

:	; backward ref for SMB6

		.echo **PASS  SMB6  ab  (as zp)

		Smb6	$1234
		Smb6	bak16
		Smb6	fwd16

		.echo **FAIL  SMB6  abi

		smb6	($1234)
		smb6	(bak16)
		smb6	(fwd16)

		.echo **FAIL  SMB6  abimm

		smb6	#12, $1234
		smb6	#bak08, bak16
		smb6	#$82, fwd16

		.echo **FAIL  SMB6  abimx

		smb6	#12, $1234,x
		smb6	#bak08, bak16,X
		smb6	#$82, fwd16,x

		.echo **FAIL  SMB6  abx

		smb6	$1234,X
		smb6	bak16,x
		smb6	fwd16,X

		.echo **FAIL  SMB6  abxfr

		smb6	$32, $1234, $5678
		smb6	$1234, bak08, fwd08
		smb6	fwd08, bak16, fwd16

		.echo **FAIL  SMB6  abxi

		smb6	($1234,X)
		smb6	(bak16,x)
		smb6	(fwd16,X)

		.echo **FAIL  SMB6  aby

		smb6	$1234,Y
		smb6	bak16,y
		smb6	fwd16,Y

		.echo **FAIL  SMB6  acc

		smb6	A
		smb6	a

		.echo **FAIL  SMB6  imm

		smb6	#$12
		smb6	#bak08
		smb6	#fwd08

		.echo **FAIL  SMB6  imp

		smb6

		.echo **PASS  SMB6  pcr  (as zp)

		Smb6	:+
		Smb6	-
		Smb6	+
		Smb6	:-

		.echo **PASS  SMB6  zp

		SMB6	$12
		SMB6	bak08
		SMB6	fwd08

		.echo **FAIL  SMB6  zpi

		smb6	($12)
		smb6	(bak08)
		smb6	(fwd08)

		.echo **FAIL  SMB6  zpimm

		smb6	#12, $34
		smb6	#bak08, bak08
		smb6	#$82, fwd08

		.echo **FAIL  SMB6  zpimx

		smb6	#12, $34,X
		smb6	#bak08, bak08,x
		smb6	#$82, fwd08,X

		.echo **FAIL  SMB6  zpiy

		smb6	($12),Y
		smb6	(bak08),y
		smb6	(fwd08),Y

		.echo **FAIL  SMB6  zptr

		smb6	$12, :+
		smb6	bak08, -
		smb6	fwd08, +

		.echo **FAIL  SMB6  zpx

		smb6	$12,X
		smb6	bak08,x
		smb6	fwd08,X

		.echo **FAIL  SMB6  zpxi

		smb6	($12,X)
		smb6	(bak08,x)
		smb6	(fwd08,X)

		.echo **FAIL  SMB6  zpy

		smb6	$12,Y
		smb6	bak08,y
		smb6	fwd08,Y


:	; forward ref for SMB6

; -------------------------------

:	; backward ref for SMB7

		.echo **PASS  SMB7  ab  (as zp)

		Smb7	$1234
		Smb7	bak16
		Smb7	fwd16

		.echo **FAIL  SMB7  abi

		smb7	($1234)
		smb7	(bak16)
		smb7	(fwd16)

		.echo **FAIL  SMB7  abimm

		smb7	#12, $1234
		smb7	#bak08, bak16
		smb7	#$82, fwd16

		.echo **FAIL  SMB7  abimx

		smb7	#12, $1234,x
		smb7	#bak08, bak16,X
		smb7	#$82, fwd16,x

		.echo **FAIL  SMB7  abx

		smb7	$1234,X
		smb7	bak16,x
		smb7	fwd16,X

		.echo **FAIL  SMB7  abxfr

		smb7	$32, $1234, $5678
		smb7	$1234, bak08, fwd08
		smb7	fwd08, bak16, fwd16

		.echo **FAIL  SMB7  abxi

		smb7	($1234,X)
		smb7	(bak16,x)
		smb7	(fwd16,X)

		.echo **FAIL  SMB7  aby

		smb7	$1234,Y
		smb7	bak16,y
		smb7	fwd16,Y

		.echo **FAIL  SMB7  acc

		smb7	A
		smb7	a

		.echo **FAIL  SMB7  imm

		smb7	#$12
		smb7	#bak08
		smb7	#fwd08

		.echo **FAIL  SMB7  imp

		smb7

		.echo **PASS  SMB7  pcr  (as zp)

		Smb7	:+
		Smb7	-
		Smb7	+
		Smb7	:-

		.echo **PASS  SMB7  zp

		SMB7	$12
		SMB7	bak08
		SMB7	fwd08

		.echo **FAIL  SMB7  zpi

		smb7	($12)
		smb7	(bak08)
		smb7	(fwd08)

		.echo **FAIL  SMB7  zpimm

		smb7	#12, $34
		smb7	#bak08, bak08
		smb7	#$82, fwd08

		.echo **FAIL  SMB7  zpimx

		smb7	#12, $34,X
		smb7	#bak08, bak08,x
		smb7	#$82, fwd08,X

		.echo **FAIL  SMB7  zpiy

		smb7	($12),Y
		smb7	(bak08),y
		smb7	(fwd08),Y

		.echo **FAIL  SMB7  zptr

		smb7	$12, :+
		smb7	bak08, -
		smb7	fwd08, +

		.echo **FAIL  SMB7  zpx

		smb7	$12,X
		smb7	bak08,x
		smb7	fwd08,X

		.echo **FAIL  SMB7  zpxi

		smb7	($12,X)
		smb7	(bak08,x)
		smb7	(fwd08,X)

		.echo **FAIL  SMB7  zpy

		smb7	$12,Y
		smb7	bak08,y
		smb7	fwd08,Y


:	; forward ref for SMB7

; -------------------------------

:	; backward ref for ST0

		.echo **FAIL  ST0  ab

		st0 	$1234
		st0 	bak16
		st0 	fwd16

		.echo **FAIL  ST0  abi

		st0 	($1234)
		st0 	(bak16)
		st0 	(fwd16)

		.echo **FAIL  ST0  abimm

		st0 	#12, $1234
		st0 	#bak08, bak16
		st0 	#$82, fwd16

		.echo **FAIL  ST0  abimx

		st0 	#12, $1234,x
		st0 	#bak08, bak16,X
		st0 	#$82, fwd16,x

		.echo **FAIL  ST0  abx

		st0 	$1234,X
		st0 	bak16,x
		st0 	fwd16,X

		.echo **FAIL  ST0  abxfr

		st0 	$32, $1234, $5678
		st0 	$1234, bak08, fwd08
		st0 	fwd08, bak16, fwd16

		.echo **FAIL  ST0  abxi

		st0 	($1234,X)
		st0 	(bak16,x)
		st0 	(fwd16,X)

		.echo **FAIL  ST0  aby

		st0 	$1234,Y
		st0 	bak16,y
		st0 	fwd16,Y

		.echo **FAIL  ST0  acc

		st0 	A
		st0 	a

		.echo **PASS  ST0  imm

		ST0 	#$12
		ST0 	#bak08
		ST0 	#fwd08

		.echo **FAIL  ST0  imp

		st0 

		.echo **FAIL  ST0  pcr

		st0 	:+
		st0 	-
		st0 	+
		st0 	:-

		.echo **FAIL  ST0  zp

		st0 	$12
		st0 	bak08
		st0 	fwd08

		.echo **FAIL  ST0  zpi

		st0 	($12)
		st0 	(bak08)
		st0 	(fwd08)

		.echo **FAIL  ST0  zpimm

		st0 	#12, $34
		st0 	#bak08, bak08
		st0 	#$82, fwd08

		.echo **FAIL  ST0  zpimx

		st0 	#12, $34,X
		st0 	#bak08, bak08,x
		st0 	#$82, fwd08,X

		.echo **FAIL  ST0  zpiy

		st0 	($12),Y
		st0 	(bak08),y
		st0 	(fwd08),Y

		.echo **FAIL  ST0  zptr

		st0 	$12, :+
		st0 	bak08, -
		st0 	fwd08, +

		.echo **FAIL  ST0  zpx

		st0 	$12,X
		st0 	bak08,x
		st0 	fwd08,X

		.echo **FAIL  ST0  zpxi

		st0 	($12,X)
		st0 	(bak08,x)
		st0 	(fwd08,X)

		.echo **FAIL  ST0  zpy

		st0 	$12,Y
		st0 	bak08,y
		st0 	fwd08,Y


:	; forward ref for ST0

; -------------------------------

:	; backward ref for ST1

		.echo **FAIL  ST1  ab

		st1 	$1234
		st1 	bak16
		st1 	fwd16

		.echo **FAIL  ST1  abi

		st1 	($1234)
		st1 	(bak16)
		st1 	(fwd16)

		.echo **FAIL  ST1  abimm

		st1 	#12, $1234
		st1 	#bak08, bak16
		st1 	#$82, fwd16

		.echo **FAIL  ST1  abimx

		st1 	#12, $1234,x
		st1 	#bak08, bak16,X
		st1 	#$82, fwd16,x

		.echo **FAIL  ST1  abx

		st1 	$1234,X
		st1 	bak16,x
		st1 	fwd16,X

		.echo **FAIL  ST1  abxfr

		st1 	$32, $1234, $5678
		st1 	$1234, bak08, fwd08
		st1 	fwd08, bak16, fwd16

		.echo **FAIL  ST1  abxi

		st1 	($1234,X)
		st1 	(bak16,x)
		st1 	(fwd16,X)

		.echo **FAIL  ST1  aby

		st1 	$1234,Y
		st1 	bak16,y
		st1 	fwd16,Y

		.echo **FAIL  ST1  acc

		st1 	A
		st1 	a

		.echo **PASS  ST1  imm

		ST1 	#$12
		ST1 	#bak08
		ST1 	#fwd08

		.echo **FAIL  ST1  imp

		st1 

		.echo **FAIL  ST1  pcr

		st1 	:+
		st1 	-
		st1 	+
		st1 	:-

		.echo **FAIL  ST1  zp

		st1 	$12
		st1 	bak08
		st1 	fwd08

		.echo **FAIL  ST1  zpi

		st1 	($12)
		st1 	(bak08)
		st1 	(fwd08)

		.echo **FAIL  ST1  zpimm

		st1 	#12, $34
		st1 	#bak08, bak08
		st1 	#$82, fwd08

		.echo **FAIL  ST1  zpimx

		st1 	#12, $34,X
		st1 	#bak08, bak08,x
		st1 	#$82, fwd08,X

		.echo **FAIL  ST1  zpiy

		st1 	($12),Y
		st1 	(bak08),y
		st1 	(fwd08),Y

		.echo **FAIL  ST1  zptr

		st1 	$12, :+
		st1 	bak08, -
		st1 	fwd08, +

		.echo **FAIL  ST1  zpx

		st1 	$12,X
		st1 	bak08,x
		st1 	fwd08,X

		.echo **FAIL  ST1  zpxi

		st1 	($12,X)
		st1 	(bak08,x)
		st1 	(fwd08,X)

		.echo **FAIL  ST1  zpy

		st1 	$12,Y
		st1 	bak08,y
		st1 	fwd08,Y


:	; forward ref for ST1

; -------------------------------

:	; backward ref for ST2

		.echo **FAIL  ST2  ab

		st2 	$1234
		st2 	bak16
		st2 	fwd16

		.echo **FAIL  ST2  abi

		st2 	($1234)
		st2 	(bak16)
		st2 	(fwd16)

		.echo **FAIL  ST2  abimm

		st2 	#12, $1234
		st2 	#bak08, bak16
		st2 	#$82, fwd16

		.echo **FAIL  ST2  abimx

		st2 	#12, $1234,x
		st2 	#bak08, bak16,X
		st2 	#$82, fwd16,x

		.echo **FAIL  ST2  abx

		st2 	$1234,X
		st2 	bak16,x
		st2 	fwd16,X

		.echo **FAIL  ST2  abxfr

		st2 	$32, $1234, $5678
		st2 	$1234, bak08, fwd08
		st2 	fwd08, bak16, fwd16

		.echo **FAIL  ST2  abxi

		st2 	($1234,X)
		st2 	(bak16,x)
		st2 	(fwd16,X)

		.echo **FAIL  ST2  aby

		st2 	$1234,Y
		st2 	bak16,y
		st2 	fwd16,Y

		.echo **FAIL  ST2  acc

		st2 	A
		st2 	a

		.echo **PASS  ST2  imm

		ST2 	#$12
		ST2 	#bak08
		ST2 	#fwd08

		.echo **FAIL  ST2  imp

		st2 

		.echo **FAIL  ST2  pcr

		st2 	:+
		st2 	-
		st2 	+
		st2 	:-

		.echo **FAIL  ST2  zp

		st2 	$12
		st2 	bak08
		st2 	fwd08

		.echo **FAIL  ST2  zpi

		st2 	($12)
		st2 	(bak08)
		st2 	(fwd08)

		.echo **FAIL  ST2  zpimm

		st2 	#12, $34
		st2 	#bak08, bak08
		st2 	#$82, fwd08

		.echo **FAIL  ST2  zpimx

		st2 	#12, $34,X
		st2 	#bak08, bak08,x
		st2 	#$82, fwd08,X

		.echo **FAIL  ST2  zpiy

		st2 	($12),Y
		st2 	(bak08),y
		st2 	(fwd08),Y

		.echo **FAIL  ST2  zptr

		st2 	$12, :+
		st2 	bak08, -
		st2 	fwd08, +

		.echo **FAIL  ST2  zpx

		st2 	$12,X
		st2 	bak08,x
		st2 	fwd08,X

		.echo **FAIL  ST2  zpxi

		st2 	($12,X)
		st2 	(bak08,x)
		st2 	(fwd08,X)

		.echo **FAIL  ST2  zpy

		st2 	$12,Y
		st2 	bak08,y
		st2 	fwd08,Y


:	; forward ref for ST2

; -------------------------------

:	; backward ref for STA

		.echo **PASS  STA  ab

		STA 	$1234
		STA 	bak16
		STA 	fwd16

		.echo **PASS  STA  abi  (as zpi)

		Sta 	($1234)
		Sta 	(bak16)
		Sta 	(fwd16)

		.echo **FAIL  STA  abimm

		sta 	#12, $1234
		sta 	#bak08, bak16
		sta 	#$82, fwd16

		.echo **FAIL  STA  abimx

		sta 	#12, $1234,x
		sta 	#bak08, bak16,X
		sta 	#$82, fwd16,x

		.echo **PASS  STA  abx

		STA 	$1234,X
		STA 	bak16,x
		STA 	fwd16,X

		.echo **FAIL  STA  abxfr

		sta 	$32, $1234, $5678
		sta 	$1234, bak08, fwd08
		sta 	fwd08, bak16, fwd16

		.echo **PASS  STA  abxi  (as zpxi)

		Sta 	($1234,X)
		Sta 	(bak16,x)
		Sta 	(fwd16,X)

		.echo **PASS  STA  aby

		STA 	$1234,Y
		STA 	bak16,y
		STA 	fwd16,Y

		.echo **FAIL  STA  acc

		sta 	A
		sta 	a

		.echo **FAIL  STA  imm

		sta 	#$12
		sta 	#bak08
		sta 	#fwd08

		.echo **FAIL  STA  imp

		sta 

		.echo **PASS  STA  pcr  (as ab)

		Sta 	:+
		Sta 	-
		Sta 	+
		Sta 	:-

		.echo **PASS  STA  zp

		STA 	$12
		STA 	bak08
		Sta 	fwd08   	; (absolute)

		.echo **PASS  STA  zpi

		STA 	($12)
		STA 	(bak08)
		STA 	(fwd08)

		.echo **FAIL  STA  zpimm

		sta 	#12, $34
		sta 	#bak08, bak08
		sta 	#$82, fwd08

		.echo **FAIL  STA  zpimx

		sta 	#12, $34,X
		sta 	#bak08, bak08,x
		sta 	#$82, fwd08,X

		.echo **PASS  STA  zpiy

		STA 	($12),Y
		STA 	(bak08),y
		STA 	(fwd08),Y

		.echo **FAIL  STA  zptr

		sta 	$12, :+
		sta 	bak08, -
		sta 	fwd08, +

		.echo **PASS  STA  zpx

		STA 	$12,X
		STA 	bak08,x
		Sta 	fwd08,X 	; (absolute)

		.echo **PASS  STA  zpxi

		STA 	($12,X)
		STA 	(bak08,x)
		STA 	(fwd08,X)

		.echo **PASS  STA  zpy  (as aby)

		Sta 	$12,Y
		Sta 	bak08,y
		Sta 	fwd08,Y


:	; forward ref for STA

; -------------------------------

:	; backward ref for STX

		.echo **PASS  STX  ab

		STX 	$1234
		STX 	bak16
		STX 	fwd16

		.echo **FAIL  STX  abi

		stx 	($1234)
		stx 	(bak16)
		stx 	(fwd16)

		.echo **FAIL  STX  abimm

		stx 	#12, $1234
		stx 	#bak08, bak16
		stx 	#$82, fwd16

		.echo **FAIL  STX  abimx

		stx 	#12, $1234,x
		stx 	#bak08, bak16,X
		stx 	#$82, fwd16,x

		.echo **FAIL  STX  abx

		stx 	$1234,X
		stx 	bak16,x
		stx 	fwd16,X

		.echo **FAIL  STX  abxfr

		stx 	$32, $1234, $5678
		stx 	$1234, bak08, fwd08
		stx 	fwd08, bak16, fwd16

		.echo **FAIL  STX  abxi

		stx 	($1234,X)
		stx 	(bak16,x)
		stx 	(fwd16,X)

		.echo **PASS  STX  aby  (as zpy)

		Stx 	$1234,Y
		Stx 	bak16,y
		Stx 	fwd16,Y

		.echo **FAIL  STX  acc

		stx 	A
		stx 	a

		.echo **FAIL  STX  imm

		stx 	#$12
		stx 	#bak08
		stx 	#fwd08

		.echo **FAIL  STX  imp

		stx 

		.echo **PASS  STX  pcr  (as ab)

		Stx 	:+
		Stx 	-
		Stx 	+
		Stx 	:-

		.echo **PASS  STX  zp

		STX 	$12
		STX 	bak08
		Stx 	fwd08   	; (absolute)

		.echo **FAIL  STX  zpi

		stx 	($12)
		stx 	(bak08)
		stx 	(fwd08)

		.echo **FAIL  STX  zpimm

		stx 	#12, $34
		stx 	#bak08, bak08
		stx 	#$82, fwd08

		.echo **FAIL  STX  zpimx

		stx 	#12, $34,X
		stx 	#bak08, bak08,x
		stx 	#$82, fwd08,X

		.echo **FAIL  STX  zpiy

		stx 	($12),Y
		stx 	(bak08),y
		stx 	(fwd08),Y

		.echo **FAIL  STX  zptr

		stx 	$12, :+
		stx 	bak08, -
		stx 	fwd08, +

		.echo **FAIL  STX  zpx

		stx 	$12,X
		stx 	bak08,x
		stx 	fwd08,X

		.echo **FAIL  STX  zpxi

		stx 	($12,X)
		stx 	(bak08,x)
		stx 	(fwd08,X)

		.echo **PASS  STX  zpy

		STX 	$12,Y
		STX 	bak08,y
		STX 	fwd08,Y


:	; forward ref for STX

; -------------------------------

:	; backward ref for STY

		.echo **PASS  STY  ab

		STY 	$1234
		STY 	bak16
		STY 	fwd16

		.echo **FAIL  STY  abi

		sty 	($1234)
		sty 	(bak16)
		sty 	(fwd16)

		.echo **FAIL  STY  abimm

		sty 	#12, $1234
		sty 	#bak08, bak16
		sty 	#$82, fwd16

		.echo **FAIL  STY  abimx

		sty 	#12, $1234,x
		sty 	#bak08, bak16,X
		sty 	#$82, fwd16,x

		.echo **PASS  STY  abx  (as zpx)

		Sty 	$1234,X
		Sty 	bak16,x
		Sty 	fwd16,X

		.echo **FAIL  STY  abxfr

		sty 	$32, $1234, $5678
		sty 	$1234, bak08, fwd08
		sty 	fwd08, bak16, fwd16

		.echo **FAIL  STY  abxi

		sty 	($1234,X)
		sty 	(bak16,x)
		sty 	(fwd16,X)

		.echo **FAIL  STY  aby

		sty 	$1234,Y
		sty 	bak16,y
		sty 	fwd16,Y

		.echo **FAIL  STY  acc

		sty 	A
		sty 	a

		.echo **FAIL  STY  imm

		sty 	#$12
		sty 	#bak08
		sty 	#fwd08

		.echo **FAIL  STY  imp

		sty 

		.echo **PASS  STY  pcr  (as ab)

		Sty 	:+
		Sty 	-
		Sty 	+
		Sty 	:-

		.echo **PASS  STY  zp

		STY 	$12
		STY 	bak08
		Sty 	fwd08   	; (absolute)

		.echo **FAIL  STY  zpi

		sty 	($12)
		sty 	(bak08)
		sty 	(fwd08)

		.echo **FAIL  STY  zpimm

		sty 	#12, $34
		sty 	#bak08, bak08
		sty 	#$82, fwd08

		.echo **FAIL  STY  zpimx

		sty 	#12, $34,X
		sty 	#bak08, bak08,x
		sty 	#$82, fwd08,X

		.echo **FAIL  STY  zpiy

		sty 	($12),Y
		sty 	(bak08),y
		sty 	(fwd08),Y

		.echo **FAIL  STY  zptr

		sty 	$12, :+
		sty 	bak08, -
		sty 	fwd08, +

		.echo **PASS  STY  zpx

		STY 	$12,X
		STY 	bak08,x
		STY 	fwd08,X

		.echo **FAIL  STY  zpxi

		sty 	($12,X)
		sty 	(bak08,x)
		sty 	(fwd08,X)

		.echo **FAIL  STY  zpy

		sty 	$12,Y
		sty 	bak08,y
		sty 	fwd08,Y


:	; forward ref for STY

; -------------------------------

:	; backward ref for STZ

		.echo **PASS  STZ  ab

		STZ 	$1234
		STZ 	bak16
		STZ 	fwd16

		.echo **FAIL  STZ  abi

		stz 	($1234)
		stz 	(bak16)
		stz 	(fwd16)

		.echo **FAIL  STZ  abimm

		stz 	#12, $1234
		stz 	#bak08, bak16
		stz 	#$82, fwd16

		.echo **FAIL  STZ  abimx

		stz 	#12, $1234,x
		stz 	#bak08, bak16,X
		stz 	#$82, fwd16,x

		.echo **PASS  STZ  abx

		STZ 	$1234,X
		STZ 	bak16,x
		STZ 	fwd16,X

		.echo **FAIL  STZ  abxfr

		stz 	$32, $1234, $5678
		stz 	$1234, bak08, fwd08
		stz 	fwd08, bak16, fwd16

		.echo **FAIL  STZ  abxi

		stz 	($1234,X)
		stz 	(bak16,x)
		stz 	(fwd16,X)

		.echo **FAIL  STZ  aby

		stz 	$1234,Y
		stz 	bak16,y
		stz 	fwd16,Y

		.echo **FAIL  STZ  acc

		stz 	A
		stz 	a

		.echo **FAIL  STZ  imm

		stz 	#$12
		stz 	#bak08
		stz 	#fwd08

		.echo **FAIL  STZ  imp

		stz 

		.echo **PASS  STZ  pcr  (as ab)

		Stz 	:+
		Stz 	-
		Stz 	+
		Stz 	:-

		.echo **PASS  STZ  zp

		STZ 	$12
		STZ 	bak08
		Stz 	fwd08   	; (absolute)

		.echo **FAIL  STZ  zpi

		stz 	($12)
		stz 	(bak08)
		stz 	(fwd08)

		.echo **FAIL  STZ  zpimm

		stz 	#12, $34
		stz 	#bak08, bak08
		stz 	#$82, fwd08

		.echo **FAIL  STZ  zpimx

		stz 	#12, $34,X
		stz 	#bak08, bak08,x
		stz 	#$82, fwd08,X

		.echo **FAIL  STZ  zpiy

		stz 	($12),Y
		stz 	(bak08),y
		stz 	(fwd08),Y

		.echo **FAIL  STZ  zptr

		stz 	$12, :+
		stz 	bak08, -
		stz 	fwd08, +

		.echo **PASS  STZ  zpx

		STZ 	$12,X
		STZ 	bak08,x
		Stz 	fwd08,X 	; (absolute)

		.echo **FAIL  STZ  zpxi

		stz 	($12,X)
		stz 	(bak08,x)
		stz 	(fwd08,X)

		.echo **FAIL  STZ  zpy

		stz 	$12,Y
		stz 	bak08,y
		stz 	fwd08,Y


:	; forward ref for STZ

; -------------------------------

:	; backward ref for SXY

		.echo **FAIL  SXY  ab

		sxy 	$1234
		sxy 	bak16
		sxy 	fwd16

		.echo **FAIL  SXY  abi

		sxy 	($1234)
		sxy 	(bak16)
		sxy 	(fwd16)

		.echo **FAIL  SXY  abimm

		sxy 	#12, $1234
		sxy 	#bak08, bak16
		sxy 	#$82, fwd16

		.echo **FAIL  SXY  abimx

		sxy 	#12, $1234,x
		sxy 	#bak08, bak16,X
		sxy 	#$82, fwd16,x

		.echo **FAIL  SXY  abx

		sxy 	$1234,X
		sxy 	bak16,x
		sxy 	fwd16,X

		.echo **FAIL  SXY  abxfr

		sxy 	$32, $1234, $5678
		sxy 	$1234, bak08, fwd08
		sxy 	fwd08, bak16, fwd16

		.echo **FAIL  SXY  abxi

		sxy 	($1234,X)
		sxy 	(bak16,x)
		sxy 	(fwd16,X)

		.echo **FAIL  SXY  aby

		sxy 	$1234,Y
		sxy 	bak16,y
		sxy 	fwd16,Y

		.echo **FAIL  SXY  acc

		sxy 	A
		sxy 	a

		.echo **FAIL  SXY  imm

		sxy 	#$12
		sxy 	#bak08
		sxy 	#fwd08

		.echo **PASS  SXY  imp

		SXY 

		.echo **FAIL  SXY  pcr

		sxy 	:+
		sxy 	-
		sxy 	+
		sxy 	:-

		.echo **FAIL  SXY  zp

		sxy 	$12
		sxy 	bak08
		sxy 	fwd08

		.echo **FAIL  SXY  zpi

		sxy 	($12)
		sxy 	(bak08)
		sxy 	(fwd08)

		.echo **FAIL  SXY  zpimm

		sxy 	#12, $34
		sxy 	#bak08, bak08
		sxy 	#$82, fwd08

		.echo **FAIL  SXY  zpimx

		sxy 	#12, $34,X
		sxy 	#bak08, bak08,x
		sxy 	#$82, fwd08,X

		.echo **FAIL  SXY  zpiy

		sxy 	($12),Y
		sxy 	(bak08),y
		sxy 	(fwd08),Y

		.echo **FAIL  SXY  zptr

		sxy 	$12, :+
		sxy 	bak08, -
		sxy 	fwd08, +

		.echo **FAIL  SXY  zpx

		sxy 	$12,X
		sxy 	bak08,x
		sxy 	fwd08,X

		.echo **FAIL  SXY  zpxi

		sxy 	($12,X)
		sxy 	(bak08,x)
		sxy 	(fwd08,X)

		.echo **FAIL  SXY  zpy

		sxy 	$12,Y
		sxy 	bak08,y
		sxy 	fwd08,Y


:	; forward ref for SXY

; -------------------------------

:	; backward ref for TAI

		.echo **FAIL  TAI  ab

		tai 	$1234
		tai 	bak16
		tai 	fwd16

		.echo **FAIL  TAI  abi

		tai 	($1234)
		tai 	(bak16)
		tai 	(fwd16)

		.echo **FAIL  TAI  abimm

		tai 	#12, $1234
		tai 	#bak08, bak16
		tai 	#$82, fwd16

		.echo **FAIL  TAI  abimx

		tai 	#12, $1234,x
		tai 	#bak08, bak16,X
		tai 	#$82, fwd16,x

		.echo **FAIL  TAI  abx

		tai 	$1234,X
		tai 	bak16,x
		tai 	fwd16,X

		.echo **PASS  TAI  abxfr

		TAI 	$32, $1234, $5678
		TAI 	$1234, bak08, fwd08
		TAI 	fwd08, bak16, fwd16

		.echo **FAIL  TAI  abxi

		tai 	($1234,X)
		tai 	(bak16,x)
		tai 	(fwd16,X)

		.echo **FAIL  TAI  aby

		tai 	$1234,Y
		tai 	bak16,y
		tai 	fwd16,Y

		.echo **FAIL  TAI  acc

		tai 	A
		tai 	a

		.echo **FAIL  TAI  imm

		tai 	#$12
		tai 	#bak08
		tai 	#fwd08

		.echo **FAIL  TAI  imp

		tai 

		.echo **FAIL  TAI  pcr

		tai 	:+
		tai 	-
		tai 	+
		tai 	:-

		.echo **FAIL  TAI  zp

		tai 	$12
		tai 	bak08
		tai 	fwd08

		.echo **FAIL  TAI  zpi

		tai 	($12)
		tai 	(bak08)
		tai 	(fwd08)

		.echo **FAIL  TAI  zpimm

		tai 	#12, $34
		tai 	#bak08, bak08
		tai 	#$82, fwd08

		.echo **FAIL  TAI  zpimx

		tai 	#12, $34,X
		tai 	#bak08, bak08,x
		tai 	#$82, fwd08,X

		.echo **FAIL  TAI  zpiy

		tai 	($12),Y
		tai 	(bak08),y
		tai 	(fwd08),Y

		.echo **FAIL  TAI  zptr

		tai 	$12, :+
		tai 	bak08, -
		tai 	fwd08, +

		.echo **FAIL  TAI  zpx

		tai 	$12,X
		tai 	bak08,x
		tai 	fwd08,X

		.echo **FAIL  TAI  zpxi

		tai 	($12,X)
		tai 	(bak08,x)
		tai 	(fwd08,X)

		.echo **FAIL  TAI  zpy

		tai 	$12,Y
		tai 	bak08,y
		tai 	fwd08,Y


:	; forward ref for TAI

; -------------------------------

:	; backward ref for TAM

		.echo **FAIL  TAM  ab

		tam 	$1234
		tam 	bak16
		tam 	fwd16

		.echo **FAIL  TAM  abi

		tam 	($1234)
		tam 	(bak16)
		tam 	(fwd16)

		.echo **FAIL  TAM  abimm

		tam 	#12, $1234
		tam 	#bak08, bak16
		tam 	#$82, fwd16

		.echo **FAIL  TAM  abimx

		tam 	#12, $1234,x
		tam 	#bak08, bak16,X
		tam 	#$82, fwd16,x

		.echo **FAIL  TAM  abx

		tam 	$1234,X
		tam 	bak16,x
		tam 	fwd16,X

		.echo **FAIL  TAM  abxfr

		tam 	$32, $1234, $5678
		tam 	$1234, bak08, fwd08
		tam 	fwd08, bak16, fwd16

		.echo **FAIL  TAM  abxi

		tam 	($1234,X)
		tam 	(bak16,x)
		tam 	(fwd16,X)

		.echo **FAIL  TAM  aby

		tam 	$1234,Y
		tam 	bak16,y
		tam 	fwd16,Y

		.echo **FAIL  TAM  acc

		tam 	A
		tam 	a

		.echo **PASS  TAM  imm

		TAM 	#$12
		TAM 	#bak08
		TAM 	#fwd08

		.echo **FAIL  TAM  imp

		tam 

		.echo **FAIL  TAM  pcr

		tam 	:+
		tam 	-
		tam 	+
		tam 	:-

		.echo **FAIL  TAM  zp

		tam 	$12
		tam 	bak08
		tam 	fwd08

		.echo **FAIL  TAM  zpi

		tam 	($12)
		tam 	(bak08)
		tam 	(fwd08)

		.echo **FAIL  TAM  zpimm

		tam 	#12, $34
		tam 	#bak08, bak08
		tam 	#$82, fwd08

		.echo **FAIL  TAM  zpimx

		tam 	#12, $34,X
		tam 	#bak08, bak08,x
		tam 	#$82, fwd08,X

		.echo **FAIL  TAM  zpiy

		tam 	($12),Y
		tam 	(bak08),y
		tam 	(fwd08),Y

		.echo **FAIL  TAM  zptr

		tam 	$12, :+
		tam 	bak08, -
		tam 	fwd08, +

		.echo **FAIL  TAM  zpx

		tam 	$12,X
		tam 	bak08,x
		tam 	fwd08,X

		.echo **FAIL  TAM  zpxi

		tam 	($12,X)
		tam 	(bak08,x)
		tam 	(fwd08,X)

		.echo **FAIL  TAM  zpy

		tam 	$12,Y
		tam 	bak08,y
		tam 	fwd08,Y


:	; forward ref for TAM

; -------------------------------

:	; backward ref for TAX

		.echo **FAIL  TAX  ab

		tax 	$1234
		tax 	bak16
		tax 	fwd16

		.echo **FAIL  TAX  abi

		tax 	($1234)
		tax 	(bak16)
		tax 	(fwd16)

		.echo **FAIL  TAX  abimm

		tax 	#12, $1234
		tax 	#bak08, bak16
		tax 	#$82, fwd16

		.echo **FAIL  TAX  abimx

		tax 	#12, $1234,x
		tax 	#bak08, bak16,X
		tax 	#$82, fwd16,x

		.echo **FAIL  TAX  abx

		tax 	$1234,X
		tax 	bak16,x
		tax 	fwd16,X

		.echo **FAIL  TAX  abxfr

		tax 	$32, $1234, $5678
		tax 	$1234, bak08, fwd08
		tax 	fwd08, bak16, fwd16

		.echo **FAIL  TAX  abxi

		tax 	($1234,X)
		tax 	(bak16,x)
		tax 	(fwd16,X)

		.echo **FAIL  TAX  aby

		tax 	$1234,Y
		tax 	bak16,y
		tax 	fwd16,Y

		.echo **FAIL  TAX  acc

		tax 	A
		tax 	a

		.echo **FAIL  TAX  imm

		tax 	#$12
		tax 	#bak08
		tax 	#fwd08

		.echo **PASS  TAX  imp

		TAX 

		.echo **FAIL  TAX  pcr

		tax 	:+
		tax 	-
		tax 	+
		tax 	:-

		.echo **FAIL  TAX  zp

		tax 	$12
		tax 	bak08
		tax 	fwd08

		.echo **FAIL  TAX  zpi

		tax 	($12)
		tax 	(bak08)
		tax 	(fwd08)

		.echo **FAIL  TAX  zpimm

		tax 	#12, $34
		tax 	#bak08, bak08
		tax 	#$82, fwd08

		.echo **FAIL  TAX  zpimx

		tax 	#12, $34,X
		tax 	#bak08, bak08,x
		tax 	#$82, fwd08,X

		.echo **FAIL  TAX  zpiy

		tax 	($12),Y
		tax 	(bak08),y
		tax 	(fwd08),Y

		.echo **FAIL  TAX  zptr

		tax 	$12, :+
		tax 	bak08, -
		tax 	fwd08, +

		.echo **FAIL  TAX  zpx

		tax 	$12,X
		tax 	bak08,x
		tax 	fwd08,X

		.echo **FAIL  TAX  zpxi

		tax 	($12,X)
		tax 	(bak08,x)
		tax 	(fwd08,X)

		.echo **FAIL  TAX  zpy

		tax 	$12,Y
		tax 	bak08,y
		tax 	fwd08,Y


:	; forward ref for TAX

; -------------------------------

:	; backward ref for TAY

		.echo **FAIL  TAY  ab

		tay 	$1234
		tay 	bak16
		tay 	fwd16

		.echo **FAIL  TAY  abi

		tay 	($1234)
		tay 	(bak16)
		tay 	(fwd16)

		.echo **FAIL  TAY  abimm

		tay 	#12, $1234
		tay 	#bak08, bak16
		tay 	#$82, fwd16

		.echo **FAIL  TAY  abimx

		tay 	#12, $1234,x
		tay 	#bak08, bak16,X
		tay 	#$82, fwd16,x

		.echo **FAIL  TAY  abx

		tay 	$1234,X
		tay 	bak16,x
		tay 	fwd16,X

		.echo **FAIL  TAY  abxfr

		tay 	$32, $1234, $5678
		tay 	$1234, bak08, fwd08
		tay 	fwd08, bak16, fwd16

		.echo **FAIL  TAY  abxi

		tay 	($1234,X)
		tay 	(bak16,x)
		tay 	(fwd16,X)

		.echo **FAIL  TAY  aby

		tay 	$1234,Y
		tay 	bak16,y
		tay 	fwd16,Y

		.echo **FAIL  TAY  acc

		tay 	A
		tay 	a

		.echo **FAIL  TAY  imm

		tay 	#$12
		tay 	#bak08
		tay 	#fwd08

		.echo **PASS  TAY  imp

		TAY 

		.echo **FAIL  TAY  pcr

		tay 	:+
		tay 	-
		tay 	+
		tay 	:-

		.echo **FAIL  TAY  zp

		tay 	$12
		tay 	bak08
		tay 	fwd08

		.echo **FAIL  TAY  zpi

		tay 	($12)
		tay 	(bak08)
		tay 	(fwd08)

		.echo **FAIL  TAY  zpimm

		tay 	#12, $34
		tay 	#bak08, bak08
		tay 	#$82, fwd08

		.echo **FAIL  TAY  zpimx

		tay 	#12, $34,X
		tay 	#bak08, bak08,x
		tay 	#$82, fwd08,X

		.echo **FAIL  TAY  zpiy

		tay 	($12),Y
		tay 	(bak08),y
		tay 	(fwd08),Y

		.echo **FAIL  TAY  zptr

		tay 	$12, :+
		tay 	bak08, -
		tay 	fwd08, +

		.echo **FAIL  TAY  zpx

		tay 	$12,X
		tay 	bak08,x
		tay 	fwd08,X

		.echo **FAIL  TAY  zpxi

		tay 	($12,X)
		tay 	(bak08,x)
		tay 	(fwd08,X)

		.echo **FAIL  TAY  zpy

		tay 	$12,Y
		tay 	bak08,y
		tay 	fwd08,Y


:	; forward ref for TAY

; -------------------------------

:	; backward ref for TDD

		.echo **FAIL  TDD  ab

		tdd 	$1234
		tdd 	bak16
		tdd 	fwd16

		.echo **FAIL  TDD  abi

		tdd 	($1234)
		tdd 	(bak16)
		tdd 	(fwd16)

		.echo **FAIL  TDD  abimm

		tdd 	#12, $1234
		tdd 	#bak08, bak16
		tdd 	#$82, fwd16

		.echo **FAIL  TDD  abimx

		tdd 	#12, $1234,x
		tdd 	#bak08, bak16,X
		tdd 	#$82, fwd16,x

		.echo **FAIL  TDD  abx

		tdd 	$1234,X
		tdd 	bak16,x
		tdd 	fwd16,X

		.echo **PASS  TDD  abxfr

		TDD 	$32, $1234, $5678
		TDD 	$1234, bak08, fwd08
		TDD 	fwd08, bak16, fwd16

		.echo **FAIL  TDD  abxi

		tdd 	($1234,X)
		tdd 	(bak16,x)
		tdd 	(fwd16,X)

		.echo **FAIL  TDD  aby

		tdd 	$1234,Y
		tdd 	bak16,y
		tdd 	fwd16,Y

		.echo **FAIL  TDD  acc

		tdd 	A
		tdd 	a

		.echo **FAIL  TDD  imm

		tdd 	#$12
		tdd 	#bak08
		tdd 	#fwd08

		.echo **FAIL  TDD  imp

		tdd 

		.echo **FAIL  TDD  pcr

		tdd 	:+
		tdd 	-
		tdd 	+
		tdd 	:-

		.echo **FAIL  TDD  zp

		tdd 	$12
		tdd 	bak08
		tdd 	fwd08

		.echo **FAIL  TDD  zpi

		tdd 	($12)
		tdd 	(bak08)
		tdd 	(fwd08)

		.echo **FAIL  TDD  zpimm

		tdd 	#12, $34
		tdd 	#bak08, bak08
		tdd 	#$82, fwd08

		.echo **FAIL  TDD  zpimx

		tdd 	#12, $34,X
		tdd 	#bak08, bak08,x
		tdd 	#$82, fwd08,X

		.echo **FAIL  TDD  zpiy

		tdd 	($12),Y
		tdd 	(bak08),y
		tdd 	(fwd08),Y

		.echo **FAIL  TDD  zptr

		tdd 	$12, :+
		tdd 	bak08, -
		tdd 	fwd08, +

		.echo **FAIL  TDD  zpx

		tdd 	$12,X
		tdd 	bak08,x
		tdd 	fwd08,X

		.echo **FAIL  TDD  zpxi

		tdd 	($12,X)
		tdd 	(bak08,x)
		tdd 	(fwd08,X)

		.echo **FAIL  TDD  zpy

		tdd 	$12,Y
		tdd 	bak08,y
		tdd 	fwd08,Y


:	; forward ref for TDD

; -------------------------------

:	; backward ref for TIA

		.echo **FAIL  TIA  ab

		tia 	$1234
		tia 	bak16
		tia 	fwd16

		.echo **FAIL  TIA  abi

		tia 	($1234)
		tia 	(bak16)
		tia 	(fwd16)

		.echo **FAIL  TIA  abimm

		tia 	#12, $1234
		tia 	#bak08, bak16
		tia 	#$82, fwd16

		.echo **FAIL  TIA  abimx

		tia 	#12, $1234,x
		tia 	#bak08, bak16,X
		tia 	#$82, fwd16,x

		.echo **FAIL  TIA  abx

		tia 	$1234,X
		tia 	bak16,x
		tia 	fwd16,X

		.echo **PASS  TIA  abxfr

		TIA 	$32, $1234, $5678
		TIA 	$1234, bak08, fwd08
		TIA 	fwd08, bak16, fwd16

		.echo **FAIL  TIA  abxi

		tia 	($1234,X)
		tia 	(bak16,x)
		tia 	(fwd16,X)

		.echo **FAIL  TIA  aby

		tia 	$1234,Y
		tia 	bak16,y
		tia 	fwd16,Y

		.echo **FAIL  TIA  acc

		tia 	A
		tia 	a

		.echo **FAIL  TIA  imm

		tia 	#$12
		tia 	#bak08
		tia 	#fwd08

		.echo **FAIL  TIA  imp

		tia 

		.echo **FAIL  TIA  pcr

		tia 	:+
		tia 	-
		tia 	+
		tia 	:-

		.echo **FAIL  TIA  zp

		tia 	$12
		tia 	bak08
		tia 	fwd08

		.echo **FAIL  TIA  zpi

		tia 	($12)
		tia 	(bak08)
		tia 	(fwd08)

		.echo **FAIL  TIA  zpimm

		tia 	#12, $34
		tia 	#bak08, bak08
		tia 	#$82, fwd08

		.echo **FAIL  TIA  zpimx

		tia 	#12, $34,X
		tia 	#bak08, bak08,x
		tia 	#$82, fwd08,X

		.echo **FAIL  TIA  zpiy

		tia 	($12),Y
		tia 	(bak08),y
		tia 	(fwd08),Y

		.echo **FAIL  TIA  zptr

		tia 	$12, :+
		tia 	bak08, -
		tia 	fwd08, +

		.echo **FAIL  TIA  zpx

		tia 	$12,X
		tia 	bak08,x
		tia 	fwd08,X

		.echo **FAIL  TIA  zpxi

		tia 	($12,X)
		tia 	(bak08,x)
		tia 	(fwd08,X)

		.echo **FAIL  TIA  zpy

		tia 	$12,Y
		tia 	bak08,y
		tia 	fwd08,Y


:	; forward ref for TIA

; -------------------------------

:	; backward ref for TII

		.echo **FAIL  TII  ab

		tii 	$1234
		tii 	bak16
		tii 	fwd16

		.echo **FAIL  TII  abi

		tii 	($1234)
		tii 	(bak16)
		tii 	(fwd16)

		.echo **FAIL  TII  abimm

		tii 	#12, $1234
		tii 	#bak08, bak16
		tii 	#$82, fwd16

		.echo **FAIL  TII  abimx

		tii 	#12, $1234,x
		tii 	#bak08, bak16,X
		tii 	#$82, fwd16,x

		.echo **FAIL  TII  abx

		tii 	$1234,X
		tii 	bak16,x
		tii 	fwd16,X

		.echo **PASS  TII  abxfr

		TII 	$32, $1234, $5678
		TII 	$1234, bak08, fwd08
		TII 	fwd08, bak16, fwd16

		.echo **FAIL  TII  abxi

		tii 	($1234,X)
		tii 	(bak16,x)
		tii 	(fwd16,X)

		.echo **FAIL  TII  aby

		tii 	$1234,Y
		tii 	bak16,y
		tii 	fwd16,Y

		.echo **FAIL  TII  acc

		tii 	A
		tii 	a

		.echo **FAIL  TII  imm

		tii 	#$12
		tii 	#bak08
		tii 	#fwd08

		.echo **FAIL  TII  imp

		tii 

		.echo **FAIL  TII  pcr

		tii 	:+
		tii 	-
		tii 	+
		tii 	:-

		.echo **FAIL  TII  zp

		tii 	$12
		tii 	bak08
		tii 	fwd08

		.echo **FAIL  TII  zpi

		tii 	($12)
		tii 	(bak08)
		tii 	(fwd08)

		.echo **FAIL  TII  zpimm

		tii 	#12, $34
		tii 	#bak08, bak08
		tii 	#$82, fwd08

		.echo **FAIL  TII  zpimx

		tii 	#12, $34,X
		tii 	#bak08, bak08,x
		tii 	#$82, fwd08,X

		.echo **FAIL  TII  zpiy

		tii 	($12),Y
		tii 	(bak08),y
		tii 	(fwd08),Y

		.echo **FAIL  TII  zptr

		tii 	$12, :+
		tii 	bak08, -
		tii 	fwd08, +

		.echo **FAIL  TII  zpx

		tii 	$12,X
		tii 	bak08,x
		tii 	fwd08,X

		.echo **FAIL  TII  zpxi

		tii 	($12,X)
		tii 	(bak08,x)
		tii 	(fwd08,X)

		.echo **FAIL  TII  zpy

		tii 	$12,Y
		tii 	bak08,y
		tii 	fwd08,Y


:	; forward ref for TII

; -------------------------------

:	; backward ref for TIN

		.echo **FAIL  TIN  ab

		tin 	$1234
		tin 	bak16
		tin 	fwd16

		.echo **FAIL  TIN  abi

		tin 	($1234)
		tin 	(bak16)
		tin 	(fwd16)

		.echo **FAIL  TIN  abimm

		tin 	#12, $1234
		tin 	#bak08, bak16
		tin 	#$82, fwd16

		.echo **FAIL  TIN  abimx

		tin 	#12, $1234,x
		tin 	#bak08, bak16,X
		tin 	#$82, fwd16,x

		.echo **FAIL  TIN  abx

		tin 	$1234,X
		tin 	bak16,x
		tin 	fwd16,X

		.echo **PASS  TIN  abxfr

		TIN 	$32, $1234, $5678
		TIN 	$1234, bak08, fwd08
		TIN 	fwd08, bak16, fwd16

		.echo **FAIL  TIN  abxi

		tin 	($1234,X)
		tin 	(bak16,x)
		tin 	(fwd16,X)

		.echo **FAIL  TIN  aby

		tin 	$1234,Y
		tin 	bak16,y
		tin 	fwd16,Y

		.echo **FAIL  TIN  acc

		tin 	A
		tin 	a

		.echo **FAIL  TIN  imm

		tin 	#$12
		tin 	#bak08
		tin 	#fwd08

		.echo **FAIL  TIN  imp

		tin 

		.echo **FAIL  TIN  pcr

		tin 	:+
		tin 	-
		tin 	+
		tin 	:-

		.echo **FAIL  TIN  zp

		tin 	$12
		tin 	bak08
		tin 	fwd08

		.echo **FAIL  TIN  zpi

		tin 	($12)
		tin 	(bak08)
		tin 	(fwd08)

		.echo **FAIL  TIN  zpimm

		tin 	#12, $34
		tin 	#bak08, bak08
		tin 	#$82, fwd08

		.echo **FAIL  TIN  zpimx

		tin 	#12, $34,X
		tin 	#bak08, bak08,x
		tin 	#$82, fwd08,X

		.echo **FAIL  TIN  zpiy

		tin 	($12),Y
		tin 	(bak08),y
		tin 	(fwd08),Y

		.echo **FAIL  TIN  zptr

		tin 	$12, :+
		tin 	bak08, -
		tin 	fwd08, +

		.echo **FAIL  TIN  zpx

		tin 	$12,X
		tin 	bak08,x
		tin 	fwd08,X

		.echo **FAIL  TIN  zpxi

		tin 	($12,X)
		tin 	(bak08,x)
		tin 	(fwd08,X)

		.echo **FAIL  TIN  zpy

		tin 	$12,Y
		tin 	bak08,y
		tin 	fwd08,Y


:	; forward ref for TIN

; -------------------------------

:	; backward ref for TMA

		.echo **FAIL  TMA  ab

		tma 	$1234
		tma 	bak16
		tma 	fwd16

		.echo **FAIL  TMA  abi

		tma 	($1234)
		tma 	(bak16)
		tma 	(fwd16)

		.echo **FAIL  TMA  abimm

		tma 	#12, $1234
		tma 	#bak08, bak16
		tma 	#$82, fwd16

		.echo **FAIL  TMA  abimx

		tma 	#12, $1234,x
		tma 	#bak08, bak16,X
		tma 	#$82, fwd16,x

		.echo **FAIL  TMA  abx

		tma 	$1234,X
		tma 	bak16,x
		tma 	fwd16,X

		.echo **FAIL  TMA  abxfr

		tma 	$32, $1234, $5678
		tma 	$1234, bak08, fwd08
		tma 	fwd08, bak16, fwd16

		.echo **FAIL  TMA  abxi

		tma 	($1234,X)
		tma 	(bak16,x)
		tma 	(fwd16,X)

		.echo **FAIL  TMA  aby

		tma 	$1234,Y
		tma 	bak16,y
		tma 	fwd16,Y

		.echo **FAIL  TMA  acc

		tma 	A
		tma 	a

		.echo **PASS  TMA  imm

		TMA 	#$12
		TMA 	#bak08
		TMA 	#fwd08

		.echo **FAIL  TMA  imp

		tma 

		.echo **FAIL  TMA  pcr

		tma 	:+
		tma 	-
		tma 	+
		tma 	:-

		.echo **FAIL  TMA  zp

		tma 	$12
		tma 	bak08
		tma 	fwd08

		.echo **FAIL  TMA  zpi

		tma 	($12)
		tma 	(bak08)
		tma 	(fwd08)

		.echo **FAIL  TMA  zpimm

		tma 	#12, $34
		tma 	#bak08, bak08
		tma 	#$82, fwd08

		.echo **FAIL  TMA  zpimx

		tma 	#12, $34,X
		tma 	#bak08, bak08,x
		tma 	#$82, fwd08,X

		.echo **FAIL  TMA  zpiy

		tma 	($12),Y
		tma 	(bak08),y
		tma 	(fwd08),Y

		.echo **FAIL  TMA  zptr

		tma 	$12, :+
		tma 	bak08, -
		tma 	fwd08, +

		.echo **FAIL  TMA  zpx

		tma 	$12,X
		tma 	bak08,x
		tma 	fwd08,X

		.echo **FAIL  TMA  zpxi

		tma 	($12,X)
		tma 	(bak08,x)
		tma 	(fwd08,X)

		.echo **FAIL  TMA  zpy

		tma 	$12,Y
		tma 	bak08,y
		tma 	fwd08,Y


:	; forward ref for TMA

; -------------------------------

:	; backward ref for TRB

		.echo **PASS  TRB  ab

		TRB 	$1234
		TRB 	bak16
		TRB 	fwd16

		.echo **FAIL  TRB  abi

		trb 	($1234)
		trb 	(bak16)
		trb 	(fwd16)

		.echo **FAIL  TRB  abimm

		trb 	#12, $1234
		trb 	#bak08, bak16
		trb 	#$82, fwd16

		.echo **FAIL  TRB  abimx

		trb 	#12, $1234,x
		trb 	#bak08, bak16,X
		trb 	#$82, fwd16,x

		.echo **FAIL  TRB  abx

		trb 	$1234,X
		trb 	bak16,x
		trb 	fwd16,X

		.echo **FAIL  TRB  abxfr

		trb 	$32, $1234, $5678
		trb 	$1234, bak08, fwd08
		trb 	fwd08, bak16, fwd16

		.echo **FAIL  TRB  abxi

		trb 	($1234,X)
		trb 	(bak16,x)
		trb 	(fwd16,X)

		.echo **FAIL  TRB  aby

		trb 	$1234,Y
		trb 	bak16,y
		trb 	fwd16,Y

		.echo **FAIL  TRB  acc

		trb 	A
		trb 	a

		.echo **FAIL  TRB  imm

		trb 	#$12
		trb 	#bak08
		trb 	#fwd08

		.echo **FAIL  TRB  imp

		trb 

		.echo **PASS  TRB  pcr  (as ab)

		Trb 	:+
		Trb 	-
		Trb 	+
		Trb 	:-

		.echo **PASS  TRB  zp

		TRB 	$12
		TRB 	bak08
		Trb 	fwd08   	; (absolute)

		.echo **FAIL  TRB  zpi

		trb 	($12)
		trb 	(bak08)
		trb 	(fwd08)

		.echo **FAIL  TRB  zpimm

		trb 	#12, $34
		trb 	#bak08, bak08
		trb 	#$82, fwd08

		.echo **FAIL  TRB  zpimx

		trb 	#12, $34,X
		trb 	#bak08, bak08,x
		trb 	#$82, fwd08,X

		.echo **FAIL  TRB  zpiy

		trb 	($12),Y
		trb 	(bak08),y
		trb 	(fwd08),Y

		.echo **FAIL  TRB  zptr

		trb 	$12, :+
		trb 	bak08, -
		trb 	fwd08, +

		.echo **FAIL  TRB  zpx

		trb 	$12,X
		trb 	bak08,x
		trb 	fwd08,X

		.echo **FAIL  TRB  zpxi

		trb 	($12,X)
		trb 	(bak08,x)
		trb 	(fwd08,X)

		.echo **FAIL  TRB  zpy

		trb 	$12,Y
		trb 	bak08,y
		trb 	fwd08,Y


:	; forward ref for TRB

; -------------------------------

:	; backward ref for TSB

		.echo **PASS  TSB  ab

		TSB 	$1234
		TSB 	bak16
		TSB 	fwd16

		.echo **FAIL  TSB  abi

		tsb 	($1234)
		tsb 	(bak16)
		tsb 	(fwd16)

		.echo **FAIL  TSB  abimm

		tsb 	#12, $1234
		tsb 	#bak08, bak16
		tsb 	#$82, fwd16

		.echo **FAIL  TSB  abimx

		tsb 	#12, $1234,x
		tsb 	#bak08, bak16,X
		tsb 	#$82, fwd16,x

		.echo **FAIL  TSB  abx

		tsb 	$1234,X
		tsb 	bak16,x
		tsb 	fwd16,X

		.echo **FAIL  TSB  abxfr

		tsb 	$32, $1234, $5678
		tsb 	$1234, bak08, fwd08
		tsb 	fwd08, bak16, fwd16

		.echo **FAIL  TSB  abxi

		tsb 	($1234,X)
		tsb 	(bak16,x)
		tsb 	(fwd16,X)

		.echo **FAIL  TSB  aby

		tsb 	$1234,Y
		tsb 	bak16,y
		tsb 	fwd16,Y

		.echo **FAIL  TSB  acc

		tsb 	A
		tsb 	a

		.echo **FAIL  TSB  imm

		tsb 	#$12
		tsb 	#bak08
		tsb 	#fwd08

		.echo **FAIL  TSB  imp

		tsb 

		.echo **PASS  TSB  pcr  (as ab)

		Tsb 	:+
		Tsb 	-
		Tsb 	+
		Tsb 	:-

		.echo **PASS  TSB  zp

		TSB 	$12
		TSB 	bak08
		Tsb 	fwd08   	; (absolute)

		.echo **FAIL  TSB  zpi

		tsb 	($12)
		tsb 	(bak08)
		tsb 	(fwd08)

		.echo **FAIL  TSB  zpimm

		tsb 	#12, $34
		tsb 	#bak08, bak08
		tsb 	#$82, fwd08

		.echo **FAIL  TSB  zpimx

		tsb 	#12, $34,X
		tsb 	#bak08, bak08,x
		tsb 	#$82, fwd08,X

		.echo **FAIL  TSB  zpiy

		tsb 	($12),Y
		tsb 	(bak08),y
		tsb 	(fwd08),Y

		.echo **FAIL  TSB  zptr

		tsb 	$12, :+
		tsb 	bak08, -
		tsb 	fwd08, +

		.echo **FAIL  TSB  zpx

		tsb 	$12,X
		tsb 	bak08,x
		tsb 	fwd08,X

		.echo **FAIL  TSB  zpxi

		tsb 	($12,X)
		tsb 	(bak08,x)
		tsb 	(fwd08,X)

		.echo **FAIL  TSB  zpy

		tsb 	$12,Y
		tsb 	bak08,y
		tsb 	fwd08,Y


:	; forward ref for TSB

; -------------------------------

:	; backward ref for TST

		.echo **FAIL  TST  ab

		tst 	$1234
		tst 	bak16
		tst 	fwd16

		.echo **FAIL  TST  abi

		tst 	($1234)
		tst 	(bak16)
		tst 	(fwd16)

		.echo **PASS  TST  abimm

		TST 	#12, $1234
		TST 	#bak08, bak16
		TST 	#$82, fwd16

		.echo **PASS  TST  abimx

		TST 	#12, $1234,x
		TST 	#bak08, bak16,X
		TST 	#$82, fwd16,x

		.echo **FAIL  TST  abx

		tst 	$1234,X
		tst 	bak16,x
		tst 	fwd16,X

		.echo **FAIL  TST  abxfr

		tst 	$32, $1234, $5678
		tst 	$1234, bak08, fwd08
		tst 	fwd08, bak16, fwd16

		.echo **FAIL  TST  abxi

		tst 	($1234,X)
		tst 	(bak16,x)
		tst 	(fwd16,X)

		.echo **FAIL  TST  aby

		tst 	$1234,Y
		tst 	bak16,y
		tst 	fwd16,Y

		.echo **FAIL  TST  acc

		tst 	A
		tst 	a

		.echo **FAIL  TST  imm

		tst 	#$12
		tst 	#bak08
		tst 	#fwd08

		.echo **FAIL  TST  imp

		tst 

		.echo **FAIL  TST  pcr

		tst 	:+
		tst 	-
		tst 	+
		tst 	:-

		.echo **FAIL  TST  zp

		tst 	$12
		tst 	bak08
		tst 	fwd08

		.echo **FAIL  TST  zpi

		tst 	($12)
		tst 	(bak08)
		tst 	(fwd08)

		.echo **PASS  TST  zpimm

		TST 	#12, $34
		TST 	#bak08, bak08
		TST 	#$82, fwd08

		.echo **PASS  TST  zpimx

		TST 	#12, $34,X
		TST 	#bak08, bak08,x
		TST 	#$82, fwd08,X

		.echo **FAIL  TST  zpiy

		tst 	($12),Y
		tst 	(bak08),y
		tst 	(fwd08),Y

		.echo **FAIL  TST  zptr

		tst 	$12, :+
		tst 	bak08, -
		tst 	fwd08, +

		.echo **FAIL  TST  zpx

		tst 	$12,X
		tst 	bak08,x
		tst 	fwd08,X

		.echo **FAIL  TST  zpxi

		tst 	($12,X)
		tst 	(bak08,x)
		tst 	(fwd08,X)

		.echo **FAIL  TST  zpy

		tst 	$12,Y
		tst 	bak08,y
		tst 	fwd08,Y


:	; forward ref for TST

; -------------------------------

:	; backward ref for TSX

		.echo **FAIL  TSX  ab

		tsx 	$1234
		tsx 	bak16
		tsx 	fwd16

		.echo **FAIL  TSX  abi

		tsx 	($1234)
		tsx 	(bak16)
		tsx 	(fwd16)

		.echo **FAIL  TSX  abimm

		tsx 	#12, $1234
		tsx 	#bak08, bak16
		tsx 	#$82, fwd16

		.echo **FAIL  TSX  abimx

		tsx 	#12, $1234,x
		tsx 	#bak08, bak16,X
		tsx 	#$82, fwd16,x

		.echo **FAIL  TSX  abx

		tsx 	$1234,X
		tsx 	bak16,x
		tsx 	fwd16,X

		.echo **FAIL  TSX  abxfr

		tsx 	$32, $1234, $5678
		tsx 	$1234, bak08, fwd08
		tsx 	fwd08, bak16, fwd16

		.echo **FAIL  TSX  abxi

		tsx 	($1234,X)
		tsx 	(bak16,x)
		tsx 	(fwd16,X)

		.echo **FAIL  TSX  aby

		tsx 	$1234,Y
		tsx 	bak16,y
		tsx 	fwd16,Y

		.echo **FAIL  TSX  acc

		tsx 	A
		tsx 	a

		.echo **FAIL  TSX  imm

		tsx 	#$12
		tsx 	#bak08
		tsx 	#fwd08

		.echo **PASS  TSX  imp

		TSX 

		.echo **FAIL  TSX  pcr

		tsx 	:+
		tsx 	-
		tsx 	+
		tsx 	:-

		.echo **FAIL  TSX  zp

		tsx 	$12
		tsx 	bak08
		tsx 	fwd08

		.echo **FAIL  TSX  zpi

		tsx 	($12)
		tsx 	(bak08)
		tsx 	(fwd08)

		.echo **FAIL  TSX  zpimm

		tsx 	#12, $34
		tsx 	#bak08, bak08
		tsx 	#$82, fwd08

		.echo **FAIL  TSX  zpimx

		tsx 	#12, $34,X
		tsx 	#bak08, bak08,x
		tsx 	#$82, fwd08,X

		.echo **FAIL  TSX  zpiy

		tsx 	($12),Y
		tsx 	(bak08),y
		tsx 	(fwd08),Y

		.echo **FAIL  TSX  zptr

		tsx 	$12, :+
		tsx 	bak08, -
		tsx 	fwd08, +

		.echo **FAIL  TSX  zpx

		tsx 	$12,X
		tsx 	bak08,x
		tsx 	fwd08,X

		.echo **FAIL  TSX  zpxi

		tsx 	($12,X)
		tsx 	(bak08,x)
		tsx 	(fwd08,X)

		.echo **FAIL  TSX  zpy

		tsx 	$12,Y
		tsx 	bak08,y
		tsx 	fwd08,Y


:	; forward ref for TSX

; -------------------------------

:	; backward ref for TXA

		.echo **FAIL  TXA  ab

		txa 	$1234
		txa 	bak16
		txa 	fwd16

		.echo **FAIL  TXA  abi

		txa 	($1234)
		txa 	(bak16)
		txa 	(fwd16)

		.echo **FAIL  TXA  abimm

		txa 	#12, $1234
		txa 	#bak08, bak16
		txa 	#$82, fwd16

		.echo **FAIL  TXA  abimx

		txa 	#12, $1234,x
		txa 	#bak08, bak16,X
		txa 	#$82, fwd16,x

		.echo **FAIL  TXA  abx

		txa 	$1234,X
		txa 	bak16,x
		txa 	fwd16,X

		.echo **FAIL  TXA  abxfr

		txa 	$32, $1234, $5678
		txa 	$1234, bak08, fwd08
		txa 	fwd08, bak16, fwd16

		.echo **FAIL  TXA  abxi

		txa 	($1234,X)
		txa 	(bak16,x)
		txa 	(fwd16,X)

		.echo **FAIL  TXA  aby

		txa 	$1234,Y
		txa 	bak16,y
		txa 	fwd16,Y

		.echo **FAIL  TXA  acc

		txa 	A
		txa 	a

		.echo **FAIL  TXA  imm

		txa 	#$12
		txa 	#bak08
		txa 	#fwd08

		.echo **PASS  TXA  imp

		TXA 

		.echo **FAIL  TXA  pcr

		txa 	:+
		txa 	-
		txa 	+
		txa 	:-

		.echo **FAIL  TXA  zp

		txa 	$12
		txa 	bak08
		txa 	fwd08

		.echo **FAIL  TXA  zpi

		txa 	($12)
		txa 	(bak08)
		txa 	(fwd08)

		.echo **FAIL  TXA  zpimm

		txa 	#12, $34
		txa 	#bak08, bak08
		txa 	#$82, fwd08

		.echo **FAIL  TXA  zpimx

		txa 	#12, $34,X
		txa 	#bak08, bak08,x
		txa 	#$82, fwd08,X

		.echo **FAIL  TXA  zpiy

		txa 	($12),Y
		txa 	(bak08),y
		txa 	(fwd08),Y

		.echo **FAIL  TXA  zptr

		txa 	$12, :+
		txa 	bak08, -
		txa 	fwd08, +

		.echo **FAIL  TXA  zpx

		txa 	$12,X
		txa 	bak08,x
		txa 	fwd08,X

		.echo **FAIL  TXA  zpxi

		txa 	($12,X)
		txa 	(bak08,x)
		txa 	(fwd08,X)

		.echo **FAIL  TXA  zpy

		txa 	$12,Y
		txa 	bak08,y
		txa 	fwd08,Y


:	; forward ref for TXA

; -------------------------------

:	; backward ref for TXS

		.echo **FAIL  TXS  ab

		txs 	$1234
		txs 	bak16
		txs 	fwd16

		.echo **FAIL  TXS  abi

		txs 	($1234)
		txs 	(bak16)
		txs 	(fwd16)

		.echo **FAIL  TXS  abimm

		txs 	#12, $1234
		txs 	#bak08, bak16
		txs 	#$82, fwd16

		.echo **FAIL  TXS  abimx

		txs 	#12, $1234,x
		txs 	#bak08, bak16,X
		txs 	#$82, fwd16,x

		.echo **FAIL  TXS  abx

		txs 	$1234,X
		txs 	bak16,x
		txs 	fwd16,X

		.echo **FAIL  TXS  abxfr

		txs 	$32, $1234, $5678
		txs 	$1234, bak08, fwd08
		txs 	fwd08, bak16, fwd16

		.echo **FAIL  TXS  abxi

		txs 	($1234,X)
		txs 	(bak16,x)
		txs 	(fwd16,X)

		.echo **FAIL  TXS  aby

		txs 	$1234,Y
		txs 	bak16,y
		txs 	fwd16,Y

		.echo **FAIL  TXS  acc

		txs 	A
		txs 	a

		.echo **FAIL  TXS  imm

		txs 	#$12
		txs 	#bak08
		txs 	#fwd08

		.echo **PASS  TXS  imp

		TXS 

		.echo **FAIL  TXS  pcr

		txs 	:+
		txs 	-
		txs 	+
		txs 	:-

		.echo **FAIL  TXS  zp

		txs 	$12
		txs 	bak08
		txs 	fwd08

		.echo **FAIL  TXS  zpi

		txs 	($12)
		txs 	(bak08)
		txs 	(fwd08)

		.echo **FAIL  TXS  zpimm

		txs 	#12, $34
		txs 	#bak08, bak08
		txs 	#$82, fwd08

		.echo **FAIL  TXS  zpimx

		txs 	#12, $34,X
		txs 	#bak08, bak08,x
		txs 	#$82, fwd08,X

		.echo **FAIL  TXS  zpiy

		txs 	($12),Y
		txs 	(bak08),y
		txs 	(fwd08),Y

		.echo **FAIL  TXS  zptr

		txs 	$12, :+
		txs 	bak08, -
		txs 	fwd08, +

		.echo **FAIL  TXS  zpx

		txs 	$12,X
		txs 	bak08,x
		txs 	fwd08,X

		.echo **FAIL  TXS  zpxi

		txs 	($12,X)
		txs 	(bak08,x)
		txs 	(fwd08,X)

		.echo **FAIL  TXS  zpy

		txs 	$12,Y
		txs 	bak08,y
		txs 	fwd08,Y


:	; forward ref for TXS

; -------------------------------

:	; backward ref for TYA

		.echo **FAIL  TYA  ab

		tya 	$1234
		tya 	bak16
		tya 	fwd16

		.echo **FAIL  TYA  abi

		tya 	($1234)
		tya 	(bak16)
		tya 	(fwd16)

		.echo **FAIL  TYA  abimm

		tya 	#12, $1234
		tya 	#bak08, bak16
		tya 	#$82, fwd16

		.echo **FAIL  TYA  abimx

		tya 	#12, $1234,x
		tya 	#bak08, bak16,X
		tya 	#$82, fwd16,x

		.echo **FAIL  TYA  abx

		tya 	$1234,X
		tya 	bak16,x
		tya 	fwd16,X

		.echo **FAIL  TYA  abxfr

		tya 	$32, $1234, $5678
		tya 	$1234, bak08, fwd08
		tya 	fwd08, bak16, fwd16

		.echo **FAIL  TYA  abxi

		tya 	($1234,X)
		tya 	(bak16,x)
		tya 	(fwd16,X)

		.echo **FAIL  TYA  aby

		tya 	$1234,Y
		tya 	bak16,y
		tya 	fwd16,Y

		.echo **FAIL  TYA  acc

		tya 	A
		tya 	a

		.echo **FAIL  TYA  imm

		tya 	#$12
		tya 	#bak08
		tya 	#fwd08

		.echo **PASS  TYA  imp

		TYA 

		.echo **FAIL  TYA  pcr

		tya 	:+
		tya 	-
		tya 	+
		tya 	:-

		.echo **FAIL  TYA  zp

		tya 	$12
		tya 	bak08
		tya 	fwd08

		.echo **FAIL  TYA  zpi

		tya 	($12)
		tya 	(bak08)
		tya 	(fwd08)

		.echo **FAIL  TYA  zpimm

		tya 	#12, $34
		tya 	#bak08, bak08
		tya 	#$82, fwd08

		.echo **FAIL  TYA  zpimx

		tya 	#12, $34,X
		tya 	#bak08, bak08,x
		tya 	#$82, fwd08,X

		.echo **FAIL  TYA  zpiy

		tya 	($12),Y
		tya 	(bak08),y
		tya 	(fwd08),Y

		.echo **FAIL  TYA  zptr

		tya 	$12, :+
		tya 	bak08, -
		tya 	fwd08, +

		.echo **FAIL  TYA  zpx

		tya 	$12,X
		tya 	bak08,x
		tya 	fwd08,X

		.echo **FAIL  TYA  zpxi

		tya 	($12,X)
		tya 	(bak08,x)
		tya 	(fwd08,X)

		.echo **FAIL  TYA  zpy

		tya 	$12,Y
		tya 	bak08,y
		tya 	fwd08,Y


:	; forward ref for TYA

; -------------------------------

; forward reference

fwd32	.equ	$89ABCDEF
fwd24	.equ	$456789
fwd16	.equ	$1234
fwd08	.equ	$12

; -------------------------------

		.end

; -------------------------------

; 1037 pass
; 6344 fail
