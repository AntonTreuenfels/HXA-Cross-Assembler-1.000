; Hobby Cross-Assembler HXA65 Error Test W65C816Sh
; W65C816S\Instruction Set
; error: W65C816S Group Rep Instructions, Illegal Forced Modes

; generated by MODE65.PY - Fri Nov 29 11:59:15 2024


; warning(s):

; errors(s):

; fatal:

; -------------------------------

		.listfile
		.errfile

		.maxerr	10000		; increase default count

; -------------------------------

		.cpu	W65C816S
		.org	$1000

; -------------------------------

; backward reference

bak08	.equ	$12
bak16	.equ	$1234
bak24	.equ	$456789
bak32	.equ	$89ABCDEF

; -------------------------------

		; check ADC
		; 7 mnemonics with modes ['ab', 'abx', 'aby', 'imm', 'lab', 'labx', 'lzpi', 'lzpiy', 'sr', 'sriy', 'zp', 'zpi', 'zpiy', 'zpx', 'zpxi']
		; AND
		; CMP
		; EOR
		; LDA
		; ORA
		; SBC

; checking ADC ab

; checking ADC abi

; abi cannot be forced to labi

		.echo **FAIL  ADC  abi as long

		.assume addr:long
		adc 	($4365)
		.assume addr:long
		adc 	(fwd16)
		.assume addr:long
		adc 	(bak16)

; checking ADC abx

; checking ADC abxi

; abxi cannot be forced to @

		.echo **FAIL  ADC  abxi as long

		.assume addr:long
		adc 	($4365,X)
		.assume addr:long
		adc 	(fwd16,X)
		.assume addr:long
		adc 	(bak16,X)

; checking ADC aby

; aby cannot be forced to zpy

		.echo **FAIL  ADC  aby as zeropage

		.assume addr:zeropage
		adc 	$4365,Y
		.assume addr:zeropage
		adc 	fwd16,Y
		.assume addr:zeropage
		adc 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  ADC  aby as long

		.assume addr:long
		adc 	$4365,Y
		.assume addr:long
		adc 	fwd16,Y
		.assume addr:long
		adc 	bak16,Y

; checking ADC acc

; absolute is not forcible

		.echo **FAIL  ADC  acc as absolute

		.assume addr:absolute
		adc 	A
		.assume addr:absolute
		adc 	a

; zeropage is not forcible

		.echo **FAIL  ADC  acc as zeropage

		.assume addr:zeropage
		adc 	A
		.assume addr:zeropage
		adc 	a

; long is not forcible

		.echo **FAIL  ADC  acc as long

		.assume addr:long
		adc 	A
		.assume addr:long
		adc 	a

; checking ADC bmv

; absolute is not forcible

		.echo **FAIL  ADC  bmv as absolute

		.assume addr:absolute
		adc 	#bak08, #fwd08
		.assume addr:absolute
		adc 	bak24, fwd24
		.assume addr:absolute
		adc 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  ADC  bmv as zeropage

		.assume addr:zeropage
		adc 	#bak08, #fwd08
		.assume addr:zeropage
		adc 	bak24, fwd24
		.assume addr:zeropage
		adc 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  ADC  bmv as long

		.assume addr:long
		adc 	#bak08, #fwd08
		.assume addr:long
		adc 	bak24, fwd24
		.assume addr:long
		adc 	#bak08, fwd24

; checking ADC imm

; absolute is not forcible

		.echo **FAIL  ADC  imm as absolute

		.assume addr:absolute
		adc 	#$32
		.assume addr:absolute
		adc 	#bak08
		.assume addr:absolute
		adc 	#fwd08

; zeropage is not forcible

		.echo **FAIL  ADC  imm as zeropage

		.assume addr:zeropage
		adc 	#$32
		.assume addr:zeropage
		adc 	#bak08
		.assume addr:zeropage
		adc 	#fwd08

; long is not forcible

		.echo **FAIL  ADC  imm as long

		.assume addr:long
		adc 	#$32
		.assume addr:long
		adc 	#bak08
		.assume addr:long
		adc 	#fwd08

; checking ADC imp

; absolute is not forcible

		.echo **FAIL  ADC  imp as absolute

		.assume addr:absolute
		adc 

; zeropage is not forcible

		.echo **FAIL  ADC  imp as zeropage

		.assume addr:zeropage
		adc 

; long is not forcible

		.echo **FAIL  ADC  imp as long

		.assume addr:long
		adc 

; checking ADC lab

; checking ADC labi

; labi cannot be forced to abi

		.echo **FAIL  ADC  labi as absolute

		.assume addr:absolute
		adc 	[$4365]
		.assume addr:absolute
		adc 	[fwd16]
		.assume addr:absolute
		adc 	[bak16]

; checking ADC labx

; checking ADC lpcr

; checking ADC lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  ADC  lzpi as absolute

		.assume addr:absolute
		adc 	[$32]
		.assume addr:absolute
		adc 	[bak08]
		.assume addr:absolute
		adc 	[fwd08]

; checking ADC lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  ADC  lzpiy as absolute

		.assume addr:absolute
		adc 	[$32],Y
		.assume addr:absolute
		adc 	[bak08],Y
		.assume addr:absolute
		adc 	[fwd08],Y

; checking ADC pcr

; checking ADC sr

; absolute is not forcible

		.echo **FAIL  ADC  sr as absolute

		.assume addr:absolute
		adc 	$32,S
		.assume addr:absolute
		adc 	bak08,S
		.assume addr:absolute
		adc 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  ADC  sr as zeropage

		.assume addr:zeropage
		adc 	$32,S
		.assume addr:zeropage
		adc 	bak08,S
		.assume addr:zeropage
		adc 	fwd08,S

; long is not forcible

		.echo **FAIL  ADC  sr as long

		.assume addr:long
		adc 	$32,S
		.assume addr:long
		adc 	bak08,S
		.assume addr:long
		adc 	fwd08,S

; checking ADC sriy

; absolute is not forcible

		.echo **FAIL  ADC  sriy as absolute

		.assume addr:absolute
		adc 	($32,S),Y
		.assume addr:absolute
		adc 	(bak08,S),Y
		.assume addr:absolute
		adc 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  ADC  sriy as zeropage

		.assume addr:zeropage
		adc 	($32,S),Y
		.assume addr:zeropage
		adc 	(bak08,S),Y
		.assume addr:zeropage
		adc 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  ADC  sriy as long

		.assume addr:long
		adc 	($32,S),Y
		.assume addr:long
		adc 	(bak08,S),Y
		.assume addr:long
		adc 	(fwd08,S),Y

; checking ADC zp

; checking ADC zpi

; zpi cannot be forced to abi

		.echo **FAIL  ADC  zpi as absolute

		.assume addr:absolute
		adc 	($32)
		.assume addr:absolute
		adc 	(bak08)
		.assume addr:absolute
		adc 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  ADC  zpi as long

		.assume addr:long
		adc 	($32)
		.assume addr:long
		adc 	(bak08)
		.assume addr:long
		adc 	(fwd08)

; checking ADC zpiy

; zpiy cannot be forced to @

		.echo **FAIL  ADC  zpiy as absolute

		.assume addr:absolute
		adc 	($32),y
		.assume addr:absolute
		adc 	(bak08),y
		.assume addr:absolute
		adc 	(fwd08),y

; checking ADC zpx

; checking ADC zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  ADC  zpxi as absolute

		.assume addr:absolute
		adc 	($32,x)
		.assume addr:absolute
		adc 	(bak08,x)
		.assume addr:absolute
		adc 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  ADC  zpxi as long

		.assume addr:long
		adc 	($32,x)
		.assume addr:long
		adc 	(bak08,x)
		.assume addr:long
		adc 	(fwd08,x)

; checking ADC zpy

; zpy cannot be forced to @

		.echo **FAIL  ADC  zpy as long

		.assume addr:long
		adc 	$32,y
		.assume addr:long
		adc 	bak08,y
		.assume addr:long
		adc 	fwd08,y


; -------------------------------


; -------------------------------

		; check ASL
		; 6 mnemonics with modes ['ab', 'abx', 'acc', 'imp', 'zp', 'zpx']
		; DEC
		; INC
		; LSR
		; ROL
		; ROR

; checking ASL ab

; ab cannot be forced to lab

		.echo **FAIL  ASL  ab as long

		.assume addr:long
		asl 	$4365
		.assume addr:long
		asl 	fwd16
		.assume addr:long
		asl 	bak16

; checking ASL abi

; abi cannot be forced to zpi

		.echo **FAIL  ASL  abi as zeropage

		.assume addr:zeropage
		asl 	($4365)
		.assume addr:zeropage
		asl 	(fwd16)
		.assume addr:zeropage
		asl 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  ASL  abi as long

		.assume addr:long
		asl 	($4365)
		.assume addr:long
		asl 	(fwd16)
		.assume addr:long
		asl 	(bak16)

; checking ASL abx

; abx cannot be forced to labx

		.echo **FAIL  ASL  abx as long

		.assume addr:long
		asl 	$4365,X
		.assume addr:long
		asl 	fwd16,X
		.assume addr:long
		asl 	bak16,X

; checking ASL abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  ASL  abxi as zeropage

		.assume addr:zeropage
		asl 	($4365,X)
		.assume addr:zeropage
		asl 	(fwd16,X)
		.assume addr:zeropage
		asl 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  ASL  abxi as long

		.assume addr:long
		asl 	($4365,X)
		.assume addr:long
		asl 	(fwd16,X)
		.assume addr:long
		asl 	(bak16,X)

; checking ASL aby

; aby cannot be forced to zpy

		.echo **FAIL  ASL  aby as zeropage

		.assume addr:zeropage
		asl 	$4365,Y
		.assume addr:zeropage
		asl 	fwd16,Y
		.assume addr:zeropage
		asl 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  ASL  aby as long

		.assume addr:long
		asl 	$4365,Y
		.assume addr:long
		asl 	fwd16,Y
		.assume addr:long
		asl 	bak16,Y

; checking ASL acc

; absolute is not forcible

		.echo **FAIL  ASL  acc as absolute

		.assume addr:absolute
		asl 	A
		.assume addr:absolute
		asl 	a

; zeropage is not forcible

		.echo **FAIL  ASL  acc as zeropage

		.assume addr:zeropage
		asl 	A
		.assume addr:zeropage
		asl 	a

; long is not forcible

		.echo **FAIL  ASL  acc as long

		.assume addr:long
		asl 	A
		.assume addr:long
		asl 	a

; checking ASL bmv

; absolute is not forcible

		.echo **FAIL  ASL  bmv as absolute

		.assume addr:absolute
		asl 	#bak08, #fwd08
		.assume addr:absolute
		asl 	bak24, fwd24
		.assume addr:absolute
		asl 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  ASL  bmv as zeropage

		.assume addr:zeropage
		asl 	#bak08, #fwd08
		.assume addr:zeropage
		asl 	bak24, fwd24
		.assume addr:zeropage
		asl 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  ASL  bmv as long

		.assume addr:long
		asl 	#bak08, #fwd08
		.assume addr:long
		asl 	bak24, fwd24
		.assume addr:long
		asl 	#bak08, fwd24

; checking ASL imm

; absolute is not forcible

		.echo **FAIL  ASL  imm as absolute

		.assume addr:absolute
		asl 	#$32
		.assume addr:absolute
		asl 	#bak08
		.assume addr:absolute
		asl 	#fwd08

; zeropage is not forcible

		.echo **FAIL  ASL  imm as zeropage

		.assume addr:zeropage
		asl 	#$32
		.assume addr:zeropage
		asl 	#bak08
		.assume addr:zeropage
		asl 	#fwd08

; long is not forcible

		.echo **FAIL  ASL  imm as long

		.assume addr:long
		asl 	#$32
		.assume addr:long
		asl 	#bak08
		.assume addr:long
		asl 	#fwd08

; checking ASL imp

; absolute is not forcible

		.echo **FAIL  ASL  imp as absolute

		.assume addr:absolute
		asl 

; zeropage is not forcible

		.echo **FAIL  ASL  imp as zeropage

		.assume addr:zeropage
		asl 

; long is not forcible

		.echo **FAIL  ASL  imp as long

		.assume addr:long
		asl 

; checking ASL lab

; checking ASL labi

; labi cannot be forced to abi

		.echo **FAIL  ASL  labi as absolute

		.assume addr:absolute
		asl 	[$4365]
		.assume addr:absolute
		asl 	[fwd16]
		.assume addr:absolute
		asl 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  ASL  labi as zeropage

		.assume addr:zeropage
		asl 	[$4365]
		.assume addr:zeropage
		asl 	[fwd16]
		.assume addr:zeropage
		asl 	[bak16]

; checking ASL labx

; checking ASL lpcr

; lpcr cannot be forced to @

		.echo **FAIL  ASL  lpcr as long

		.assume addr:long
		asl 	:+
		.assume addr:long
		asl 	-
		.assume addr:long
		asl 	+
		.assume addr:long
		asl 	:-

; checking ASL lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  ASL  lzpi as absolute

		.assume addr:absolute
		asl 	[$32]
		.assume addr:absolute
		asl 	[bak08]
		.assume addr:absolute
		asl 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  ASL  lzpi as zeropage

		.assume addr:zeropage
		asl 	[$32]
		.assume addr:zeropage
		asl 	[bak08]
		.assume addr:zeropage
		asl 	[fwd08]

; checking ASL lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  ASL  lzpiy as absolute

		.assume addr:absolute
		asl 	[$32],Y
		.assume addr:absolute
		asl 	[bak08],Y
		.assume addr:absolute
		asl 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  ASL  lzpiy as zeropage

		.assume addr:zeropage
		asl 	[$32],Y
		.assume addr:zeropage
		asl 	[bak08],Y
		.assume addr:zeropage
		asl 	[fwd08],Y

; checking ASL pcr

; pcr cannot be forced to @

		.echo **FAIL  ASL  pcr as long

		.assume addr:long
		asl 	:+
		.assume addr:long
		asl 	-
		.assume addr:long
		asl 	+
		.assume addr:long
		asl 	:-

; checking ASL sr

; absolute is not forcible

		.echo **FAIL  ASL  sr as absolute

		.assume addr:absolute
		asl 	$32,S
		.assume addr:absolute
		asl 	bak08,S
		.assume addr:absolute
		asl 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  ASL  sr as zeropage

		.assume addr:zeropage
		asl 	$32,S
		.assume addr:zeropage
		asl 	bak08,S
		.assume addr:zeropage
		asl 	fwd08,S

; long is not forcible

		.echo **FAIL  ASL  sr as long

		.assume addr:long
		asl 	$32,S
		.assume addr:long
		asl 	bak08,S
		.assume addr:long
		asl 	fwd08,S

; checking ASL sriy

; absolute is not forcible

		.echo **FAIL  ASL  sriy as absolute

		.assume addr:absolute
		asl 	($32,S),Y
		.assume addr:absolute
		asl 	(bak08,S),Y
		.assume addr:absolute
		asl 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  ASL  sriy as zeropage

		.assume addr:zeropage
		asl 	($32,S),Y
		.assume addr:zeropage
		asl 	(bak08,S),Y
		.assume addr:zeropage
		asl 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  ASL  sriy as long

		.assume addr:long
		asl 	($32,S),Y
		.assume addr:long
		asl 	(bak08,S),Y
		.assume addr:long
		asl 	(fwd08,S),Y

; checking ASL zp

; zp cannot be forced to lab

		.echo **FAIL  ASL  zp as long

		.assume addr:long
		asl 	$32
		.assume addr:long
		asl 	bak08
		.assume addr:long
		asl 	fwd08

; checking ASL zpi

; zpi cannot be forced to abi

		.echo **FAIL  ASL  zpi as absolute

		.assume addr:absolute
		asl 	($32)
		.assume addr:absolute
		asl 	(bak08)
		.assume addr:absolute
		asl 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  ASL  zpi as long

		.assume addr:long
		asl 	($32)
		.assume addr:long
		asl 	(bak08)
		.assume addr:long
		asl 	(fwd08)

; checking ASL zpiy

; zpiy cannot be forced to @

		.echo **FAIL  ASL  zpiy as absolute

		.assume addr:absolute
		asl 	($32),y
		.assume addr:absolute
		asl 	(bak08),y
		.assume addr:absolute
		asl 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  ASL  zpiy as long

		.assume addr:long
		asl 	($32),y
		.assume addr:long
		asl 	(bak08),y
		.assume addr:long
		asl 	(fwd08),y

; checking ASL zpx

; zpx cannot be forced to labx

		.echo **FAIL  ASL  zpx as long

		.assume addr:long
		asl 	$32,x
		.assume addr:long
		asl 	bak08,x
		.assume addr:long
		asl 	fwd08,x

; checking ASL zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  ASL  zpxi as absolute

		.assume addr:absolute
		asl 	($32,x)
		.assume addr:absolute
		asl 	(bak08,x)
		.assume addr:absolute
		asl 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  ASL  zpxi as long

		.assume addr:long
		asl 	($32,x)
		.assume addr:long
		asl 	(bak08,x)
		.assume addr:long
		asl 	(fwd08,x)

; checking ASL zpy

; zpy cannot be forced to aby

		.echo **FAIL  ASL  zpy as absolute

		.assume addr:absolute
		asl 	$32,y
		.assume addr:absolute
		asl 	bak08,y
		.assume addr:absolute
		asl 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  ASL  zpy as long

		.assume addr:long
		asl 	$32,y
		.assume addr:long
		asl 	bak08,y
		.assume addr:long
		asl 	fwd08,y


; -------------------------------


; -------------------------------

		; check BCC
		; 11 mnemonics with modes ['pcr']
		; BCS
		; BEQ
		; BGE
		; BLT
		; BMI
		; BNE
		; BPL
		; BRA
		; BVC
		; BVS

; checking BCC ab

; ab cannot be forced to zp

		.echo **FAIL  BCC  ab as zeropage

		.assume addr:zeropage
		bcc 	$4365
		.assume addr:zeropage
		bcc 	fwd16
		.assume addr:zeropage
		bcc 	bak16

; ab cannot be forced to lab

		.echo **FAIL  BCC  ab as long

		.assume addr:long
		bcc 	$4365
		.assume addr:long
		bcc 	fwd16
		.assume addr:long
		bcc 	bak16

; checking BCC abi

; abi cannot be forced to zpi

		.echo **FAIL  BCC  abi as zeropage

		.assume addr:zeropage
		bcc 	($4365)
		.assume addr:zeropage
		bcc 	(fwd16)
		.assume addr:zeropage
		bcc 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  BCC  abi as long

		.assume addr:long
		bcc 	($4365)
		.assume addr:long
		bcc 	(fwd16)
		.assume addr:long
		bcc 	(bak16)

; checking BCC abx

; abx cannot be forced to zpx

		.echo **FAIL  BCC  abx as zeropage

		.assume addr:zeropage
		bcc 	$4365,X
		.assume addr:zeropage
		bcc 	fwd16,X
		.assume addr:zeropage
		bcc 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  BCC  abx as long

		.assume addr:long
		bcc 	$4365,X
		.assume addr:long
		bcc 	fwd16,X
		.assume addr:long
		bcc 	bak16,X

; checking BCC abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  BCC  abxi as zeropage

		.assume addr:zeropage
		bcc 	($4365,X)
		.assume addr:zeropage
		bcc 	(fwd16,X)
		.assume addr:zeropage
		bcc 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  BCC  abxi as long

		.assume addr:long
		bcc 	($4365,X)
		.assume addr:long
		bcc 	(fwd16,X)
		.assume addr:long
		bcc 	(bak16,X)

; checking BCC aby

; aby cannot be forced to zpy

		.echo **FAIL  BCC  aby as zeropage

		.assume addr:zeropage
		bcc 	$4365,Y
		.assume addr:zeropage
		bcc 	fwd16,Y
		.assume addr:zeropage
		bcc 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  BCC  aby as long

		.assume addr:long
		bcc 	$4365,Y
		.assume addr:long
		bcc 	fwd16,Y
		.assume addr:long
		bcc 	bak16,Y

; checking BCC acc

; absolute is not forcible

		.echo **FAIL  BCC  acc as absolute

		.assume addr:absolute
		bcc 	A
		.assume addr:absolute
		bcc 	a

; zeropage is not forcible

		.echo **FAIL  BCC  acc as zeropage

		.assume addr:zeropage
		bcc 	A
		.assume addr:zeropage
		bcc 	a

; long is not forcible

		.echo **FAIL  BCC  acc as long

		.assume addr:long
		bcc 	A
		.assume addr:long
		bcc 	a

; checking BCC bmv

; absolute is not forcible

		.echo **FAIL  BCC  bmv as absolute

		.assume addr:absolute
		bcc 	#bak08, #fwd08
		.assume addr:absolute
		bcc 	bak24, fwd24
		.assume addr:absolute
		bcc 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  BCC  bmv as zeropage

		.assume addr:zeropage
		bcc 	#bak08, #fwd08
		.assume addr:zeropage
		bcc 	bak24, fwd24
		.assume addr:zeropage
		bcc 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  BCC  bmv as long

		.assume addr:long
		bcc 	#bak08, #fwd08
		.assume addr:long
		bcc 	bak24, fwd24
		.assume addr:long
		bcc 	#bak08, fwd24

; checking BCC imm

; absolute is not forcible

		.echo **FAIL  BCC  imm as absolute

		.assume addr:absolute
		bcc 	#$32
		.assume addr:absolute
		bcc 	#bak08
		.assume addr:absolute
		bcc 	#fwd08

; zeropage is not forcible

		.echo **FAIL  BCC  imm as zeropage

		.assume addr:zeropage
		bcc 	#$32
		.assume addr:zeropage
		bcc 	#bak08
		.assume addr:zeropage
		bcc 	#fwd08

; long is not forcible

		.echo **FAIL  BCC  imm as long

		.assume addr:long
		bcc 	#$32
		.assume addr:long
		bcc 	#bak08
		.assume addr:long
		bcc 	#fwd08

; checking BCC imp

; absolute is not forcible

		.echo **FAIL  BCC  imp as absolute

		.assume addr:absolute
		bcc 

; zeropage is not forcible

		.echo **FAIL  BCC  imp as zeropage

		.assume addr:zeropage
		bcc 

; long is not forcible

		.echo **FAIL  BCC  imp as long

		.assume addr:long
		bcc 

; checking BCC lab

; lab cannot be forced to ab

		.echo **FAIL  BCC  lab as absolute

		.assume addr:absolute
		bcc 	$547698
		.assume addr:absolute
		bcc 	bak24
		.assume addr:absolute
		bcc 	fwd24

; lab cannot be forced to zp

		.echo **FAIL  BCC  lab as zeropage

		.assume addr:zeropage
		bcc 	$547698
		.assume addr:zeropage
		bcc 	bak24
		.assume addr:zeropage
		bcc 	fwd24

; checking BCC labi

; labi cannot be forced to abi

		.echo **FAIL  BCC  labi as absolute

		.assume addr:absolute
		bcc 	[$4365]
		.assume addr:absolute
		bcc 	[fwd16]
		.assume addr:absolute
		bcc 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  BCC  labi as zeropage

		.assume addr:zeropage
		bcc 	[$4365]
		.assume addr:zeropage
		bcc 	[fwd16]
		.assume addr:zeropage
		bcc 	[bak16]

; checking BCC labx

; labx cannot be forced to abx

		.echo **FAIL  BCC  labx as absolute

		.assume addr:absolute
		bcc 	$547698,x
		.assume addr:absolute
		bcc 	bak24,x
		.assume addr:absolute
		bcc 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  BCC  labx as zeropage

		.assume addr:zeropage
		bcc 	$547698,x
		.assume addr:zeropage
		bcc 	bak24,x
		.assume addr:zeropage
		bcc 	fwd24,x

; checking BCC lpcr

; lpcr cannot be forced to @

		.echo **FAIL  BCC  lpcr as absolute

		.assume addr:absolute
		bcc 	:+
		.assume addr:absolute
		bcc 	-
		.assume addr:absolute
		bcc 	+
		.assume addr:absolute
		bcc 	:-

; lpcr cannot be forced to @

		.echo **FAIL  BCC  lpcr as zeropage

		.assume addr:zeropage
		bcc 	:+
		.assume addr:zeropage
		bcc 	-
		.assume addr:zeropage
		bcc 	+
		.assume addr:zeropage
		bcc 	:-

; lpcr cannot be forced to @

		.echo **FAIL  BCC  lpcr as long

		.assume addr:long
		bcc 	:+
		.assume addr:long
		bcc 	-
		.assume addr:long
		bcc 	+
		.assume addr:long
		bcc 	:-

; checking BCC lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  BCC  lzpi as absolute

		.assume addr:absolute
		bcc 	[$32]
		.assume addr:absolute
		bcc 	[bak08]
		.assume addr:absolute
		bcc 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  BCC  lzpi as zeropage

		.assume addr:zeropage
		bcc 	[$32]
		.assume addr:zeropage
		bcc 	[bak08]
		.assume addr:zeropage
		bcc 	[fwd08]

; checking BCC lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  BCC  lzpiy as absolute

		.assume addr:absolute
		bcc 	[$32],Y
		.assume addr:absolute
		bcc 	[bak08],Y
		.assume addr:absolute
		bcc 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  BCC  lzpiy as zeropage

		.assume addr:zeropage
		bcc 	[$32],Y
		.assume addr:zeropage
		bcc 	[bak08],Y
		.assume addr:zeropage
		bcc 	[fwd08],Y

; checking BCC pcr

; pcr cannot be forced to @

		.echo **FAIL  BCC  pcr as absolute

		.assume addr:absolute
		bcc 	:+
		.assume addr:absolute
		bcc 	-
		.assume addr:absolute
		bcc 	+
		.assume addr:absolute
		bcc 	:-

; pcr cannot be forced to @

		.echo **FAIL  BCC  pcr as zeropage

		.assume addr:zeropage
		bcc 	:+
		.assume addr:zeropage
		bcc 	-
		.assume addr:zeropage
		bcc 	+
		.assume addr:zeropage
		bcc 	:-

; pcr cannot be forced to @

		.echo **FAIL  BCC  pcr as long

		.assume addr:long
		bcc 	:+
		.assume addr:long
		bcc 	-
		.assume addr:long
		bcc 	+
		.assume addr:long
		bcc 	:-

; checking BCC sr

; absolute is not forcible

		.echo **FAIL  BCC  sr as absolute

		.assume addr:absolute
		bcc 	$32,S
		.assume addr:absolute
		bcc 	bak08,S
		.assume addr:absolute
		bcc 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  BCC  sr as zeropage

		.assume addr:zeropage
		bcc 	$32,S
		.assume addr:zeropage
		bcc 	bak08,S
		.assume addr:zeropage
		bcc 	fwd08,S

; long is not forcible

		.echo **FAIL  BCC  sr as long

		.assume addr:long
		bcc 	$32,S
		.assume addr:long
		bcc 	bak08,S
		.assume addr:long
		bcc 	fwd08,S

; checking BCC sriy

; absolute is not forcible

		.echo **FAIL  BCC  sriy as absolute

		.assume addr:absolute
		bcc 	($32,S),Y
		.assume addr:absolute
		bcc 	(bak08,S),Y
		.assume addr:absolute
		bcc 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  BCC  sriy as zeropage

		.assume addr:zeropage
		bcc 	($32,S),Y
		.assume addr:zeropage
		bcc 	(bak08,S),Y
		.assume addr:zeropage
		bcc 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  BCC  sriy as long

		.assume addr:long
		bcc 	($32,S),Y
		.assume addr:long
		bcc 	(bak08,S),Y
		.assume addr:long
		bcc 	(fwd08,S),Y

; checking BCC zp

; zp cannot be forced to ab

		.echo **FAIL  BCC  zp as absolute

		.assume addr:absolute
		bcc 	$32
		.assume addr:absolute
		bcc 	bak08
		.assume addr:absolute
		bcc 	fwd08

; zp cannot be forced to lab

		.echo **FAIL  BCC  zp as long

		.assume addr:long
		bcc 	$32
		.assume addr:long
		bcc 	bak08
		.assume addr:long
		bcc 	fwd08

; checking BCC zpi

; zpi cannot be forced to abi

		.echo **FAIL  BCC  zpi as absolute

		.assume addr:absolute
		bcc 	($32)
		.assume addr:absolute
		bcc 	(bak08)
		.assume addr:absolute
		bcc 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  BCC  zpi as long

		.assume addr:long
		bcc 	($32)
		.assume addr:long
		bcc 	(bak08)
		.assume addr:long
		bcc 	(fwd08)

; checking BCC zpiy

; zpiy cannot be forced to @

		.echo **FAIL  BCC  zpiy as absolute

		.assume addr:absolute
		bcc 	($32),y
		.assume addr:absolute
		bcc 	(bak08),y
		.assume addr:absolute
		bcc 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  BCC  zpiy as long

		.assume addr:long
		bcc 	($32),y
		.assume addr:long
		bcc 	(bak08),y
		.assume addr:long
		bcc 	(fwd08),y

; checking BCC zpx

; zpx cannot be forced to abx

		.echo **FAIL  BCC  zpx as absolute

		.assume addr:absolute
		bcc 	$32,x
		.assume addr:absolute
		bcc 	bak08,x
		.assume addr:absolute
		bcc 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  BCC  zpx as long

		.assume addr:long
		bcc 	$32,x
		.assume addr:long
		bcc 	bak08,x
		.assume addr:long
		bcc 	fwd08,x

; checking BCC zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  BCC  zpxi as absolute

		.assume addr:absolute
		bcc 	($32,x)
		.assume addr:absolute
		bcc 	(bak08,x)
		.assume addr:absolute
		bcc 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  BCC  zpxi as long

		.assume addr:long
		bcc 	($32,x)
		.assume addr:long
		bcc 	(bak08,x)
		.assume addr:long
		bcc 	(fwd08,x)

; checking BCC zpy

; zpy cannot be forced to aby

		.echo **FAIL  BCC  zpy as absolute

		.assume addr:absolute
		bcc 	$32,y
		.assume addr:absolute
		bcc 	bak08,y
		.assume addr:absolute
		bcc 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  BCC  zpy as long

		.assume addr:long
		bcc 	$32,y
		.assume addr:long
		bcc 	bak08,y
		.assume addr:long
		bcc 	fwd08,y


; -------------------------------


; -------------------------------

		; check BIT
		; 2 mnemonics with modes ['ab', 'abx', 'imm', 'zp', 'zpx']
		; LDY

; checking BIT ab

; ab cannot be forced to lab

		.echo **FAIL  BIT  ab as long

		.assume addr:long
		bit 	$4365
		.assume addr:long
		bit 	fwd16
		.assume addr:long
		bit 	bak16

; checking BIT abi

; abi cannot be forced to zpi

		.echo **FAIL  BIT  abi as zeropage

		.assume addr:zeropage
		bit 	($4365)
		.assume addr:zeropage
		bit 	(fwd16)
		.assume addr:zeropage
		bit 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  BIT  abi as long

		.assume addr:long
		bit 	($4365)
		.assume addr:long
		bit 	(fwd16)
		.assume addr:long
		bit 	(bak16)

; checking BIT abx

; abx cannot be forced to labx

		.echo **FAIL  BIT  abx as long

		.assume addr:long
		bit 	$4365,X
		.assume addr:long
		bit 	fwd16,X
		.assume addr:long
		bit 	bak16,X

; checking BIT abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  BIT  abxi as zeropage

		.assume addr:zeropage
		bit 	($4365,X)
		.assume addr:zeropage
		bit 	(fwd16,X)
		.assume addr:zeropage
		bit 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  BIT  abxi as long

		.assume addr:long
		bit 	($4365,X)
		.assume addr:long
		bit 	(fwd16,X)
		.assume addr:long
		bit 	(bak16,X)

; checking BIT aby

; aby cannot be forced to zpy

		.echo **FAIL  BIT  aby as zeropage

		.assume addr:zeropage
		bit 	$4365,Y
		.assume addr:zeropage
		bit 	fwd16,Y
		.assume addr:zeropage
		bit 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  BIT  aby as long

		.assume addr:long
		bit 	$4365,Y
		.assume addr:long
		bit 	fwd16,Y
		.assume addr:long
		bit 	bak16,Y

; checking BIT acc

; absolute is not forcible

		.echo **FAIL  BIT  acc as absolute

		.assume addr:absolute
		bit 	A
		.assume addr:absolute
		bit 	a

; zeropage is not forcible

		.echo **FAIL  BIT  acc as zeropage

		.assume addr:zeropage
		bit 	A
		.assume addr:zeropage
		bit 	a

; long is not forcible

		.echo **FAIL  BIT  acc as long

		.assume addr:long
		bit 	A
		.assume addr:long
		bit 	a

; checking BIT bmv

; absolute is not forcible

		.echo **FAIL  BIT  bmv as absolute

		.assume addr:absolute
		bit 	#bak08, #fwd08
		.assume addr:absolute
		bit 	bak24, fwd24
		.assume addr:absolute
		bit 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  BIT  bmv as zeropage

		.assume addr:zeropage
		bit 	#bak08, #fwd08
		.assume addr:zeropage
		bit 	bak24, fwd24
		.assume addr:zeropage
		bit 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  BIT  bmv as long

		.assume addr:long
		bit 	#bak08, #fwd08
		.assume addr:long
		bit 	bak24, fwd24
		.assume addr:long
		bit 	#bak08, fwd24

; checking BIT imm

; absolute is not forcible

		.echo **FAIL  BIT  imm as absolute

		.assume addr:absolute
		bit 	#$32
		.assume addr:absolute
		bit 	#bak08
		.assume addr:absolute
		bit 	#fwd08

; zeropage is not forcible

		.echo **FAIL  BIT  imm as zeropage

		.assume addr:zeropage
		bit 	#$32
		.assume addr:zeropage
		bit 	#bak08
		.assume addr:zeropage
		bit 	#fwd08

; long is not forcible

		.echo **FAIL  BIT  imm as long

		.assume addr:long
		bit 	#$32
		.assume addr:long
		bit 	#bak08
		.assume addr:long
		bit 	#fwd08

; checking BIT imp

; absolute is not forcible

		.echo **FAIL  BIT  imp as absolute

		.assume addr:absolute
		bit 

; zeropage is not forcible

		.echo **FAIL  BIT  imp as zeropage

		.assume addr:zeropage
		bit 

; long is not forcible

		.echo **FAIL  BIT  imp as long

		.assume addr:long
		bit 

; checking BIT lab

; checking BIT labi

; labi cannot be forced to abi

		.echo **FAIL  BIT  labi as absolute

		.assume addr:absolute
		bit 	[$4365]
		.assume addr:absolute
		bit 	[fwd16]
		.assume addr:absolute
		bit 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  BIT  labi as zeropage

		.assume addr:zeropage
		bit 	[$4365]
		.assume addr:zeropage
		bit 	[fwd16]
		.assume addr:zeropage
		bit 	[bak16]

; checking BIT labx

; checking BIT lpcr

; lpcr cannot be forced to @

		.echo **FAIL  BIT  lpcr as long

		.assume addr:long
		bit 	:+
		.assume addr:long
		bit 	-
		.assume addr:long
		bit 	+
		.assume addr:long
		bit 	:-

; checking BIT lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  BIT  lzpi as absolute

		.assume addr:absolute
		bit 	[$32]
		.assume addr:absolute
		bit 	[bak08]
		.assume addr:absolute
		bit 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  BIT  lzpi as zeropage

		.assume addr:zeropage
		bit 	[$32]
		.assume addr:zeropage
		bit 	[bak08]
		.assume addr:zeropage
		bit 	[fwd08]

; checking BIT lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  BIT  lzpiy as absolute

		.assume addr:absolute
		bit 	[$32],Y
		.assume addr:absolute
		bit 	[bak08],Y
		.assume addr:absolute
		bit 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  BIT  lzpiy as zeropage

		.assume addr:zeropage
		bit 	[$32],Y
		.assume addr:zeropage
		bit 	[bak08],Y
		.assume addr:zeropage
		bit 	[fwd08],Y

; checking BIT pcr

; pcr cannot be forced to @

		.echo **FAIL  BIT  pcr as long

		.assume addr:long
		bit 	:+
		.assume addr:long
		bit 	-
		.assume addr:long
		bit 	+
		.assume addr:long
		bit 	:-

; checking BIT sr

; absolute is not forcible

		.echo **FAIL  BIT  sr as absolute

		.assume addr:absolute
		bit 	$32,S
		.assume addr:absolute
		bit 	bak08,S
		.assume addr:absolute
		bit 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  BIT  sr as zeropage

		.assume addr:zeropage
		bit 	$32,S
		.assume addr:zeropage
		bit 	bak08,S
		.assume addr:zeropage
		bit 	fwd08,S

; long is not forcible

		.echo **FAIL  BIT  sr as long

		.assume addr:long
		bit 	$32,S
		.assume addr:long
		bit 	bak08,S
		.assume addr:long
		bit 	fwd08,S

; checking BIT sriy

; absolute is not forcible

		.echo **FAIL  BIT  sriy as absolute

		.assume addr:absolute
		bit 	($32,S),Y
		.assume addr:absolute
		bit 	(bak08,S),Y
		.assume addr:absolute
		bit 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  BIT  sriy as zeropage

		.assume addr:zeropage
		bit 	($32,S),Y
		.assume addr:zeropage
		bit 	(bak08,S),Y
		.assume addr:zeropage
		bit 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  BIT  sriy as long

		.assume addr:long
		bit 	($32,S),Y
		.assume addr:long
		bit 	(bak08,S),Y
		.assume addr:long
		bit 	(fwd08,S),Y

; checking BIT zp

; zp cannot be forced to lab

		.echo **FAIL  BIT  zp as long

		.assume addr:long
		bit 	$32
		.assume addr:long
		bit 	bak08
		.assume addr:long
		bit 	fwd08

; checking BIT zpi

; zpi cannot be forced to abi

		.echo **FAIL  BIT  zpi as absolute

		.assume addr:absolute
		bit 	($32)
		.assume addr:absolute
		bit 	(bak08)
		.assume addr:absolute
		bit 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  BIT  zpi as long

		.assume addr:long
		bit 	($32)
		.assume addr:long
		bit 	(bak08)
		.assume addr:long
		bit 	(fwd08)

; checking BIT zpiy

; zpiy cannot be forced to @

		.echo **FAIL  BIT  zpiy as absolute

		.assume addr:absolute
		bit 	($32),y
		.assume addr:absolute
		bit 	(bak08),y
		.assume addr:absolute
		bit 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  BIT  zpiy as long

		.assume addr:long
		bit 	($32),y
		.assume addr:long
		bit 	(bak08),y
		.assume addr:long
		bit 	(fwd08),y

; checking BIT zpx

; zpx cannot be forced to labx

		.echo **FAIL  BIT  zpx as long

		.assume addr:long
		bit 	$32,x
		.assume addr:long
		bit 	bak08,x
		.assume addr:long
		bit 	fwd08,x

; checking BIT zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  BIT  zpxi as absolute

		.assume addr:absolute
		bit 	($32,x)
		.assume addr:absolute
		bit 	(bak08,x)
		.assume addr:absolute
		bit 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  BIT  zpxi as long

		.assume addr:long
		bit 	($32,x)
		.assume addr:long
		bit 	(bak08,x)
		.assume addr:long
		bit 	(fwd08,x)

; checking BIT zpy

; zpy cannot be forced to aby

		.echo **FAIL  BIT  zpy as absolute

		.assume addr:absolute
		bit 	$32,y
		.assume addr:absolute
		bit 	bak08,y
		.assume addr:absolute
		bit 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  BIT  zpy as long

		.assume addr:long
		bit 	$32,y
		.assume addr:long
		bit 	bak08,y
		.assume addr:long
		bit 	fwd08,y


; -------------------------------


; -------------------------------

		; check BRK
		; 3 mnemonics with modes ['imm', 'imp', 'zp']
		; COP
		; WDM

; checking BRK ab

; ab cannot be forced to lab

		.echo **FAIL  BRK  ab as long

		.assume addr:long
		brk 	$4365
		.assume addr:long
		brk 	fwd16
		.assume addr:long
		brk 	bak16

; checking BRK abi

; abi cannot be forced to zpi

		.echo **FAIL  BRK  abi as zeropage

		.assume addr:zeropage
		brk 	($4365)
		.assume addr:zeropage
		brk 	(fwd16)
		.assume addr:zeropage
		brk 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  BRK  abi as long

		.assume addr:long
		brk 	($4365)
		.assume addr:long
		brk 	(fwd16)
		.assume addr:long
		brk 	(bak16)

; checking BRK abx

; abx cannot be forced to zpx

		.echo **FAIL  BRK  abx as zeropage

		.assume addr:zeropage
		brk 	$4365,X
		.assume addr:zeropage
		brk 	fwd16,X
		.assume addr:zeropage
		brk 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  BRK  abx as long

		.assume addr:long
		brk 	$4365,X
		.assume addr:long
		brk 	fwd16,X
		.assume addr:long
		brk 	bak16,X

; checking BRK abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  BRK  abxi as zeropage

		.assume addr:zeropage
		brk 	($4365,X)
		.assume addr:zeropage
		brk 	(fwd16,X)
		.assume addr:zeropage
		brk 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  BRK  abxi as long

		.assume addr:long
		brk 	($4365,X)
		.assume addr:long
		brk 	(fwd16,X)
		.assume addr:long
		brk 	(bak16,X)

; checking BRK aby

; aby cannot be forced to zpy

		.echo **FAIL  BRK  aby as zeropage

		.assume addr:zeropage
		brk 	$4365,Y
		.assume addr:zeropage
		brk 	fwd16,Y
		.assume addr:zeropage
		brk 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  BRK  aby as long

		.assume addr:long
		brk 	$4365,Y
		.assume addr:long
		brk 	fwd16,Y
		.assume addr:long
		brk 	bak16,Y

; checking BRK acc

; absolute is not forcible

		.echo **FAIL  BRK  acc as absolute

		.assume addr:absolute
		brk 	A
		.assume addr:absolute
		brk 	a

; zeropage is not forcible

		.echo **FAIL  BRK  acc as zeropage

		.assume addr:zeropage
		brk 	A
		.assume addr:zeropage
		brk 	a

; long is not forcible

		.echo **FAIL  BRK  acc as long

		.assume addr:long
		brk 	A
		.assume addr:long
		brk 	a

; checking BRK bmv

; absolute is not forcible

		.echo **FAIL  BRK  bmv as absolute

		.assume addr:absolute
		brk 	#bak08, #fwd08
		.assume addr:absolute
		brk 	bak24, fwd24
		.assume addr:absolute
		brk 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  BRK  bmv as zeropage

		.assume addr:zeropage
		brk 	#bak08, #fwd08
		.assume addr:zeropage
		brk 	bak24, fwd24
		.assume addr:zeropage
		brk 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  BRK  bmv as long

		.assume addr:long
		brk 	#bak08, #fwd08
		.assume addr:long
		brk 	bak24, fwd24
		.assume addr:long
		brk 	#bak08, fwd24

; checking BRK imm

; absolute is not forcible

		.echo **FAIL  BRK  imm as absolute

		.assume addr:absolute
		brk 	#$32
		.assume addr:absolute
		brk 	#bak08
		.assume addr:absolute
		brk 	#fwd08

; zeropage is not forcible

		.echo **FAIL  BRK  imm as zeropage

		.assume addr:zeropage
		brk 	#$32
		.assume addr:zeropage
		brk 	#bak08
		.assume addr:zeropage
		brk 	#fwd08

; long is not forcible

		.echo **FAIL  BRK  imm as long

		.assume addr:long
		brk 	#$32
		.assume addr:long
		brk 	#bak08
		.assume addr:long
		brk 	#fwd08

; checking BRK imp

; absolute is not forcible

		.echo **FAIL  BRK  imp as absolute

		.assume addr:absolute
		brk 

; zeropage is not forcible

		.echo **FAIL  BRK  imp as zeropage

		.assume addr:zeropage
		brk 

; long is not forcible

		.echo **FAIL  BRK  imp as long

		.assume addr:long
		brk 

; checking BRK lab

; lab cannot be forced to ab

		.echo **FAIL  BRK  lab as absolute

		.assume addr:absolute
		brk 	$547698
		.assume addr:absolute
		brk 	bak24
		.assume addr:absolute
		brk 	fwd24

; checking BRK labi

; labi cannot be forced to abi

		.echo **FAIL  BRK  labi as absolute

		.assume addr:absolute
		brk 	[$4365]
		.assume addr:absolute
		brk 	[fwd16]
		.assume addr:absolute
		brk 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  BRK  labi as zeropage

		.assume addr:zeropage
		brk 	[$4365]
		.assume addr:zeropage
		brk 	[fwd16]
		.assume addr:zeropage
		brk 	[bak16]

; checking BRK labx

; labx cannot be forced to abx

		.echo **FAIL  BRK  labx as absolute

		.assume addr:absolute
		brk 	$547698,x
		.assume addr:absolute
		brk 	bak24,x
		.assume addr:absolute
		brk 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  BRK  labx as zeropage

		.assume addr:zeropage
		brk 	$547698,x
		.assume addr:zeropage
		brk 	bak24,x
		.assume addr:zeropage
		brk 	fwd24,x

; checking BRK lpcr

; lpcr cannot be forced to @

		.echo **FAIL  BRK  lpcr as absolute

		.assume addr:absolute
		brk 	:+
		.assume addr:absolute
		brk 	-
		.assume addr:absolute
		brk 	+
		.assume addr:absolute
		brk 	:-

; lpcr cannot be forced to @

		.echo **FAIL  BRK  lpcr as long

		.assume addr:long
		brk 	:+
		.assume addr:long
		brk 	-
		.assume addr:long
		brk 	+
		.assume addr:long
		brk 	:-

; checking BRK lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  BRK  lzpi as absolute

		.assume addr:absolute
		brk 	[$32]
		.assume addr:absolute
		brk 	[bak08]
		.assume addr:absolute
		brk 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  BRK  lzpi as zeropage

		.assume addr:zeropage
		brk 	[$32]
		.assume addr:zeropage
		brk 	[bak08]
		.assume addr:zeropage
		brk 	[fwd08]

; checking BRK lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  BRK  lzpiy as absolute

		.assume addr:absolute
		brk 	[$32],Y
		.assume addr:absolute
		brk 	[bak08],Y
		.assume addr:absolute
		brk 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  BRK  lzpiy as zeropage

		.assume addr:zeropage
		brk 	[$32],Y
		.assume addr:zeropage
		brk 	[bak08],Y
		.assume addr:zeropage
		brk 	[fwd08],Y

; checking BRK pcr

; pcr cannot be forced to @

		.echo **FAIL  BRK  pcr as absolute

		.assume addr:absolute
		brk 	:+
		.assume addr:absolute
		brk 	-
		.assume addr:absolute
		brk 	+
		.assume addr:absolute
		brk 	:-

; pcr cannot be forced to @

		.echo **FAIL  BRK  pcr as long

		.assume addr:long
		brk 	:+
		.assume addr:long
		brk 	-
		.assume addr:long
		brk 	+
		.assume addr:long
		brk 	:-

; checking BRK sr

; absolute is not forcible

		.echo **FAIL  BRK  sr as absolute

		.assume addr:absolute
		brk 	$32,S
		.assume addr:absolute
		brk 	bak08,S
		.assume addr:absolute
		brk 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  BRK  sr as zeropage

		.assume addr:zeropage
		brk 	$32,S
		.assume addr:zeropage
		brk 	bak08,S
		.assume addr:zeropage
		brk 	fwd08,S

; long is not forcible

		.echo **FAIL  BRK  sr as long

		.assume addr:long
		brk 	$32,S
		.assume addr:long
		brk 	bak08,S
		.assume addr:long
		brk 	fwd08,S

; checking BRK sriy

; absolute is not forcible

		.echo **FAIL  BRK  sriy as absolute

		.assume addr:absolute
		brk 	($32,S),Y
		.assume addr:absolute
		brk 	(bak08,S),Y
		.assume addr:absolute
		brk 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  BRK  sriy as zeropage

		.assume addr:zeropage
		brk 	($32,S),Y
		.assume addr:zeropage
		brk 	(bak08,S),Y
		.assume addr:zeropage
		brk 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  BRK  sriy as long

		.assume addr:long
		brk 	($32,S),Y
		.assume addr:long
		brk 	(bak08,S),Y
		.assume addr:long
		brk 	(fwd08,S),Y

; checking BRK zp

; zp cannot be forced to ab

		.echo **FAIL  BRK  zp as absolute

		.assume addr:absolute
		brk 	$32
		.assume addr:absolute
		brk 	bak08
		.assume addr:absolute
		brk 	fwd08

; zp cannot be forced to lab

		.echo **FAIL  BRK  zp as long

		.assume addr:long
		brk 	$32
		.assume addr:long
		brk 	bak08
		.assume addr:long
		brk 	fwd08

; checking BRK zpi

; zpi cannot be forced to abi

		.echo **FAIL  BRK  zpi as absolute

		.assume addr:absolute
		brk 	($32)
		.assume addr:absolute
		brk 	(bak08)
		.assume addr:absolute
		brk 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  BRK  zpi as long

		.assume addr:long
		brk 	($32)
		.assume addr:long
		brk 	(bak08)
		.assume addr:long
		brk 	(fwd08)

; checking BRK zpiy

; zpiy cannot be forced to @

		.echo **FAIL  BRK  zpiy as absolute

		.assume addr:absolute
		brk 	($32),y
		.assume addr:absolute
		brk 	(bak08),y
		.assume addr:absolute
		brk 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  BRK  zpiy as long

		.assume addr:long
		brk 	($32),y
		.assume addr:long
		brk 	(bak08),y
		.assume addr:long
		brk 	(fwd08),y

; checking BRK zpx

; zpx cannot be forced to abx

		.echo **FAIL  BRK  zpx as absolute

		.assume addr:absolute
		brk 	$32,x
		.assume addr:absolute
		brk 	bak08,x
		.assume addr:absolute
		brk 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  BRK  zpx as long

		.assume addr:long
		brk 	$32,x
		.assume addr:long
		brk 	bak08,x
		.assume addr:long
		brk 	fwd08,x

; checking BRK zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  BRK  zpxi as absolute

		.assume addr:absolute
		brk 	($32,x)
		.assume addr:absolute
		brk 	(bak08,x)
		.assume addr:absolute
		brk 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  BRK  zpxi as long

		.assume addr:long
		brk 	($32,x)
		.assume addr:long
		brk 	(bak08,x)
		.assume addr:long
		brk 	(fwd08,x)

; checking BRK zpy

; zpy cannot be forced to aby

		.echo **FAIL  BRK  zpy as absolute

		.assume addr:absolute
		brk 	$32,y
		.assume addr:absolute
		brk 	bak08,y
		.assume addr:absolute
		brk 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  BRK  zpy as long

		.assume addr:long
		brk 	$32,y
		.assume addr:long
		brk 	bak08,y
		.assume addr:long
		brk 	fwd08,y


; -------------------------------


; -------------------------------

		; check BRL
		; 2 mnemonics with modes ['lpcr']
		; PER

; checking BRL ab

; ab cannot be forced to zp

		.echo **FAIL  BRL  ab as zeropage

		.assume addr:zeropage
		brl 	$4365
		.assume addr:zeropage
		brl 	fwd16
		.assume addr:zeropage
		brl 	bak16

; ab cannot be forced to lab

		.echo **FAIL  BRL  ab as long

		.assume addr:long
		brl 	$4365
		.assume addr:long
		brl 	fwd16
		.assume addr:long
		brl 	bak16

; checking BRL abi

; abi cannot be forced to zpi

		.echo **FAIL  BRL  abi as zeropage

		.assume addr:zeropage
		brl 	($4365)
		.assume addr:zeropage
		brl 	(fwd16)
		.assume addr:zeropage
		brl 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  BRL  abi as long

		.assume addr:long
		brl 	($4365)
		.assume addr:long
		brl 	(fwd16)
		.assume addr:long
		brl 	(bak16)

; checking BRL abx

; abx cannot be forced to zpx

		.echo **FAIL  BRL  abx as zeropage

		.assume addr:zeropage
		brl 	$4365,X
		.assume addr:zeropage
		brl 	fwd16,X
		.assume addr:zeropage
		brl 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  BRL  abx as long

		.assume addr:long
		brl 	$4365,X
		.assume addr:long
		brl 	fwd16,X
		.assume addr:long
		brl 	bak16,X

; checking BRL abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  BRL  abxi as zeropage

		.assume addr:zeropage
		brl 	($4365,X)
		.assume addr:zeropage
		brl 	(fwd16,X)
		.assume addr:zeropage
		brl 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  BRL  abxi as long

		.assume addr:long
		brl 	($4365,X)
		.assume addr:long
		brl 	(fwd16,X)
		.assume addr:long
		brl 	(bak16,X)

; checking BRL aby

; aby cannot be forced to zpy

		.echo **FAIL  BRL  aby as zeropage

		.assume addr:zeropage
		brl 	$4365,Y
		.assume addr:zeropage
		brl 	fwd16,Y
		.assume addr:zeropage
		brl 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  BRL  aby as long

		.assume addr:long
		brl 	$4365,Y
		.assume addr:long
		brl 	fwd16,Y
		.assume addr:long
		brl 	bak16,Y

; checking BRL acc

; absolute is not forcible

		.echo **FAIL  BRL  acc as absolute

		.assume addr:absolute
		brl 	A
		.assume addr:absolute
		brl 	a

; zeropage is not forcible

		.echo **FAIL  BRL  acc as zeropage

		.assume addr:zeropage
		brl 	A
		.assume addr:zeropage
		brl 	a

; long is not forcible

		.echo **FAIL  BRL  acc as long

		.assume addr:long
		brl 	A
		.assume addr:long
		brl 	a

; checking BRL bmv

; absolute is not forcible

		.echo **FAIL  BRL  bmv as absolute

		.assume addr:absolute
		brl 	#bak08, #fwd08
		.assume addr:absolute
		brl 	bak24, fwd24
		.assume addr:absolute
		brl 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  BRL  bmv as zeropage

		.assume addr:zeropage
		brl 	#bak08, #fwd08
		.assume addr:zeropage
		brl 	bak24, fwd24
		.assume addr:zeropage
		brl 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  BRL  bmv as long

		.assume addr:long
		brl 	#bak08, #fwd08
		.assume addr:long
		brl 	bak24, fwd24
		.assume addr:long
		brl 	#bak08, fwd24

; checking BRL imm

; absolute is not forcible

		.echo **FAIL  BRL  imm as absolute

		.assume addr:absolute
		brl 	#$32
		.assume addr:absolute
		brl 	#bak08
		.assume addr:absolute
		brl 	#fwd08

; zeropage is not forcible

		.echo **FAIL  BRL  imm as zeropage

		.assume addr:zeropage
		brl 	#$32
		.assume addr:zeropage
		brl 	#bak08
		.assume addr:zeropage
		brl 	#fwd08

; long is not forcible

		.echo **FAIL  BRL  imm as long

		.assume addr:long
		brl 	#$32
		.assume addr:long
		brl 	#bak08
		.assume addr:long
		brl 	#fwd08

; checking BRL imp

; absolute is not forcible

		.echo **FAIL  BRL  imp as absolute

		.assume addr:absolute
		brl 

; zeropage is not forcible

		.echo **FAIL  BRL  imp as zeropage

		.assume addr:zeropage
		brl 

; long is not forcible

		.echo **FAIL  BRL  imp as long

		.assume addr:long
		brl 

; checking BRL lab

; lab cannot be forced to ab

		.echo **FAIL  BRL  lab as absolute

		.assume addr:absolute
		brl 	$547698
		.assume addr:absolute
		brl 	bak24
		.assume addr:absolute
		brl 	fwd24

; lab cannot be forced to zp

		.echo **FAIL  BRL  lab as zeropage

		.assume addr:zeropage
		brl 	$547698
		.assume addr:zeropage
		brl 	bak24
		.assume addr:zeropage
		brl 	fwd24

; checking BRL labi

; labi cannot be forced to abi

		.echo **FAIL  BRL  labi as absolute

		.assume addr:absolute
		brl 	[$4365]
		.assume addr:absolute
		brl 	[fwd16]
		.assume addr:absolute
		brl 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  BRL  labi as zeropage

		.assume addr:zeropage
		brl 	[$4365]
		.assume addr:zeropage
		brl 	[fwd16]
		.assume addr:zeropage
		brl 	[bak16]

; checking BRL labx

; labx cannot be forced to abx

		.echo **FAIL  BRL  labx as absolute

		.assume addr:absolute
		brl 	$547698,x
		.assume addr:absolute
		brl 	bak24,x
		.assume addr:absolute
		brl 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  BRL  labx as zeropage

		.assume addr:zeropage
		brl 	$547698,x
		.assume addr:zeropage
		brl 	bak24,x
		.assume addr:zeropage
		brl 	fwd24,x

; checking BRL lpcr

; lpcr cannot be forced to @

		.echo **FAIL  BRL  lpcr as absolute

		.assume addr:absolute
		brl 	:+
		.assume addr:absolute
		brl 	-
		.assume addr:absolute
		brl 	+
		.assume addr:absolute
		brl 	:-

; lpcr cannot be forced to @

		.echo **FAIL  BRL  lpcr as zeropage

		.assume addr:zeropage
		brl 	:+
		.assume addr:zeropage
		brl 	-
		.assume addr:zeropage
		brl 	+
		.assume addr:zeropage
		brl 	:-

; lpcr cannot be forced to @

		.echo **FAIL  BRL  lpcr as long

		.assume addr:long
		brl 	:+
		.assume addr:long
		brl 	-
		.assume addr:long
		brl 	+
		.assume addr:long
		brl 	:-

; checking BRL lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  BRL  lzpi as absolute

		.assume addr:absolute
		brl 	[$32]
		.assume addr:absolute
		brl 	[bak08]
		.assume addr:absolute
		brl 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  BRL  lzpi as zeropage

		.assume addr:zeropage
		brl 	[$32]
		.assume addr:zeropage
		brl 	[bak08]
		.assume addr:zeropage
		brl 	[fwd08]

; checking BRL lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  BRL  lzpiy as absolute

		.assume addr:absolute
		brl 	[$32],Y
		.assume addr:absolute
		brl 	[bak08],Y
		.assume addr:absolute
		brl 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  BRL  lzpiy as zeropage

		.assume addr:zeropage
		brl 	[$32],Y
		.assume addr:zeropage
		brl 	[bak08],Y
		.assume addr:zeropage
		brl 	[fwd08],Y

; checking BRL pcr

; pcr cannot be forced to @

		.echo **FAIL  BRL  pcr as absolute

		.assume addr:absolute
		brl 	:+
		.assume addr:absolute
		brl 	-
		.assume addr:absolute
		brl 	+
		.assume addr:absolute
		brl 	:-

; pcr cannot be forced to @

		.echo **FAIL  BRL  pcr as zeropage

		.assume addr:zeropage
		brl 	:+
		.assume addr:zeropage
		brl 	-
		.assume addr:zeropage
		brl 	+
		.assume addr:zeropage
		brl 	:-

; pcr cannot be forced to @

		.echo **FAIL  BRL  pcr as long

		.assume addr:long
		brl 	:+
		.assume addr:long
		brl 	-
		.assume addr:long
		brl 	+
		.assume addr:long
		brl 	:-

; checking BRL sr

; absolute is not forcible

		.echo **FAIL  BRL  sr as absolute

		.assume addr:absolute
		brl 	$32,S
		.assume addr:absolute
		brl 	bak08,S
		.assume addr:absolute
		brl 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  BRL  sr as zeropage

		.assume addr:zeropage
		brl 	$32,S
		.assume addr:zeropage
		brl 	bak08,S
		.assume addr:zeropage
		brl 	fwd08,S

; long is not forcible

		.echo **FAIL  BRL  sr as long

		.assume addr:long
		brl 	$32,S
		.assume addr:long
		brl 	bak08,S
		.assume addr:long
		brl 	fwd08,S

; checking BRL sriy

; absolute is not forcible

		.echo **FAIL  BRL  sriy as absolute

		.assume addr:absolute
		brl 	($32,S),Y
		.assume addr:absolute
		brl 	(bak08,S),Y
		.assume addr:absolute
		brl 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  BRL  sriy as zeropage

		.assume addr:zeropage
		brl 	($32,S),Y
		.assume addr:zeropage
		brl 	(bak08,S),Y
		.assume addr:zeropage
		brl 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  BRL  sriy as long

		.assume addr:long
		brl 	($32,S),Y
		.assume addr:long
		brl 	(bak08,S),Y
		.assume addr:long
		brl 	(fwd08,S),Y

; checking BRL zp

; zp cannot be forced to ab

		.echo **FAIL  BRL  zp as absolute

		.assume addr:absolute
		brl 	$32
		.assume addr:absolute
		brl 	bak08
		.assume addr:absolute
		brl 	fwd08

; zp cannot be forced to lab

		.echo **FAIL  BRL  zp as long

		.assume addr:long
		brl 	$32
		.assume addr:long
		brl 	bak08
		.assume addr:long
		brl 	fwd08

; checking BRL zpi

; zpi cannot be forced to abi

		.echo **FAIL  BRL  zpi as absolute

		.assume addr:absolute
		brl 	($32)
		.assume addr:absolute
		brl 	(bak08)
		.assume addr:absolute
		brl 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  BRL  zpi as long

		.assume addr:long
		brl 	($32)
		.assume addr:long
		brl 	(bak08)
		.assume addr:long
		brl 	(fwd08)

; checking BRL zpiy

; zpiy cannot be forced to @

		.echo **FAIL  BRL  zpiy as absolute

		.assume addr:absolute
		brl 	($32),y
		.assume addr:absolute
		brl 	(bak08),y
		.assume addr:absolute
		brl 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  BRL  zpiy as long

		.assume addr:long
		brl 	($32),y
		.assume addr:long
		brl 	(bak08),y
		.assume addr:long
		brl 	(fwd08),y

; checking BRL zpx

; zpx cannot be forced to abx

		.echo **FAIL  BRL  zpx as absolute

		.assume addr:absolute
		brl 	$32,x
		.assume addr:absolute
		brl 	bak08,x
		.assume addr:absolute
		brl 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  BRL  zpx as long

		.assume addr:long
		brl 	$32,x
		.assume addr:long
		brl 	bak08,x
		.assume addr:long
		brl 	fwd08,x

; checking BRL zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  BRL  zpxi as absolute

		.assume addr:absolute
		brl 	($32,x)
		.assume addr:absolute
		brl 	(bak08,x)
		.assume addr:absolute
		brl 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  BRL  zpxi as long

		.assume addr:long
		brl 	($32,x)
		.assume addr:long
		brl 	(bak08,x)
		.assume addr:long
		brl 	(fwd08,x)

; checking BRL zpy

; zpy cannot be forced to aby

		.echo **FAIL  BRL  zpy as absolute

		.assume addr:absolute
		brl 	$32,y
		.assume addr:absolute
		brl 	bak08,y
		.assume addr:absolute
		brl 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  BRL  zpy as long

		.assume addr:long
		brl 	$32,y
		.assume addr:long
		brl 	bak08,y
		.assume addr:long
		brl 	fwd08,y


; -------------------------------


; -------------------------------

		; check CLC
		; 51 mnemonics with modes ['imp']
		; CLD
		; CLI
		; CLV
		; DEA
		; DEX
		; DEY
		; INA
		; INX
		; INY
		; NOP
		; PHA
		; PHB
		; PHD
		; PHK
		; PHP
		; PHX
		; PHY
		; PLA
		; PLB
		; PLD
		; PLP
		; PLX
		; PLY
		; RTI
		; RTL
		; RTS
		; SEC
		; SED
		; SEI
		; STP
		; SWP
		; TAD
		; TAS
		; TAX
		; TAY
		; TCD
		; TCS
		; TDA
		; TDC
		; TSA
		; TSC
		; TSX
		; TXA
		; TXS
		; TXY
		; TYA
		; TYX
		; WAI
		; XBA
		; XCE

; checking CLC ab

; ab cannot be forced to zp

		.echo **FAIL  CLC  ab as zeropage

		.assume addr:zeropage
		clc 	$4365
		.assume addr:zeropage
		clc 	fwd16
		.assume addr:zeropage
		clc 	bak16

; ab cannot be forced to lab

		.echo **FAIL  CLC  ab as long

		.assume addr:long
		clc 	$4365
		.assume addr:long
		clc 	fwd16
		.assume addr:long
		clc 	bak16

; checking CLC abi

; abi cannot be forced to zpi

		.echo **FAIL  CLC  abi as zeropage

		.assume addr:zeropage
		clc 	($4365)
		.assume addr:zeropage
		clc 	(fwd16)
		.assume addr:zeropage
		clc 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  CLC  abi as long

		.assume addr:long
		clc 	($4365)
		.assume addr:long
		clc 	(fwd16)
		.assume addr:long
		clc 	(bak16)

; checking CLC abx

; abx cannot be forced to zpx

		.echo **FAIL  CLC  abx as zeropage

		.assume addr:zeropage
		clc 	$4365,X
		.assume addr:zeropage
		clc 	fwd16,X
		.assume addr:zeropage
		clc 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  CLC  abx as long

		.assume addr:long
		clc 	$4365,X
		.assume addr:long
		clc 	fwd16,X
		.assume addr:long
		clc 	bak16,X

; checking CLC abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  CLC  abxi as zeropage

		.assume addr:zeropage
		clc 	($4365,X)
		.assume addr:zeropage
		clc 	(fwd16,X)
		.assume addr:zeropage
		clc 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  CLC  abxi as long

		.assume addr:long
		clc 	($4365,X)
		.assume addr:long
		clc 	(fwd16,X)
		.assume addr:long
		clc 	(bak16,X)

; checking CLC aby

; aby cannot be forced to zpy

		.echo **FAIL  CLC  aby as zeropage

		.assume addr:zeropage
		clc 	$4365,Y
		.assume addr:zeropage
		clc 	fwd16,Y
		.assume addr:zeropage
		clc 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  CLC  aby as long

		.assume addr:long
		clc 	$4365,Y
		.assume addr:long
		clc 	fwd16,Y
		.assume addr:long
		clc 	bak16,Y

; checking CLC acc

; absolute is not forcible

		.echo **FAIL  CLC  acc as absolute

		.assume addr:absolute
		clc 	A
		.assume addr:absolute
		clc 	a

; zeropage is not forcible

		.echo **FAIL  CLC  acc as zeropage

		.assume addr:zeropage
		clc 	A
		.assume addr:zeropage
		clc 	a

; long is not forcible

		.echo **FAIL  CLC  acc as long

		.assume addr:long
		clc 	A
		.assume addr:long
		clc 	a

; checking CLC bmv

; absolute is not forcible

		.echo **FAIL  CLC  bmv as absolute

		.assume addr:absolute
		clc 	#bak08, #fwd08
		.assume addr:absolute
		clc 	bak24, fwd24
		.assume addr:absolute
		clc 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  CLC  bmv as zeropage

		.assume addr:zeropage
		clc 	#bak08, #fwd08
		.assume addr:zeropage
		clc 	bak24, fwd24
		.assume addr:zeropage
		clc 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  CLC  bmv as long

		.assume addr:long
		clc 	#bak08, #fwd08
		.assume addr:long
		clc 	bak24, fwd24
		.assume addr:long
		clc 	#bak08, fwd24

; checking CLC imm

; absolute is not forcible

		.echo **FAIL  CLC  imm as absolute

		.assume addr:absolute
		clc 	#$32
		.assume addr:absolute
		clc 	#bak08
		.assume addr:absolute
		clc 	#fwd08

; zeropage is not forcible

		.echo **FAIL  CLC  imm as zeropage

		.assume addr:zeropage
		clc 	#$32
		.assume addr:zeropage
		clc 	#bak08
		.assume addr:zeropage
		clc 	#fwd08

; long is not forcible

		.echo **FAIL  CLC  imm as long

		.assume addr:long
		clc 	#$32
		.assume addr:long
		clc 	#bak08
		.assume addr:long
		clc 	#fwd08

; checking CLC imp

; absolute is not forcible

		.echo **FAIL  CLC  imp as absolute

		.assume addr:absolute
		clc 

; zeropage is not forcible

		.echo **FAIL  CLC  imp as zeropage

		.assume addr:zeropage
		clc 

; long is not forcible

		.echo **FAIL  CLC  imp as long

		.assume addr:long
		clc 

; checking CLC lab

; lab cannot be forced to ab

		.echo **FAIL  CLC  lab as absolute

		.assume addr:absolute
		clc 	$547698
		.assume addr:absolute
		clc 	bak24
		.assume addr:absolute
		clc 	fwd24

; lab cannot be forced to zp

		.echo **FAIL  CLC  lab as zeropage

		.assume addr:zeropage
		clc 	$547698
		.assume addr:zeropage
		clc 	bak24
		.assume addr:zeropage
		clc 	fwd24

; checking CLC labi

; labi cannot be forced to abi

		.echo **FAIL  CLC  labi as absolute

		.assume addr:absolute
		clc 	[$4365]
		.assume addr:absolute
		clc 	[fwd16]
		.assume addr:absolute
		clc 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  CLC  labi as zeropage

		.assume addr:zeropage
		clc 	[$4365]
		.assume addr:zeropage
		clc 	[fwd16]
		.assume addr:zeropage
		clc 	[bak16]

; checking CLC labx

; labx cannot be forced to abx

		.echo **FAIL  CLC  labx as absolute

		.assume addr:absolute
		clc 	$547698,x
		.assume addr:absolute
		clc 	bak24,x
		.assume addr:absolute
		clc 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  CLC  labx as zeropage

		.assume addr:zeropage
		clc 	$547698,x
		.assume addr:zeropage
		clc 	bak24,x
		.assume addr:zeropage
		clc 	fwd24,x

; checking CLC lpcr

; lpcr cannot be forced to @

		.echo **FAIL  CLC  lpcr as absolute

		.assume addr:absolute
		clc 	:+
		.assume addr:absolute
		clc 	-
		.assume addr:absolute
		clc 	+
		.assume addr:absolute
		clc 	:-

; lpcr cannot be forced to @

		.echo **FAIL  CLC  lpcr as zeropage

		.assume addr:zeropage
		clc 	:+
		.assume addr:zeropage
		clc 	-
		.assume addr:zeropage
		clc 	+
		.assume addr:zeropage
		clc 	:-

; lpcr cannot be forced to @

		.echo **FAIL  CLC  lpcr as long

		.assume addr:long
		clc 	:+
		.assume addr:long
		clc 	-
		.assume addr:long
		clc 	+
		.assume addr:long
		clc 	:-

; checking CLC lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  CLC  lzpi as absolute

		.assume addr:absolute
		clc 	[$32]
		.assume addr:absolute
		clc 	[bak08]
		.assume addr:absolute
		clc 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  CLC  lzpi as zeropage

		.assume addr:zeropage
		clc 	[$32]
		.assume addr:zeropage
		clc 	[bak08]
		.assume addr:zeropage
		clc 	[fwd08]

; checking CLC lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  CLC  lzpiy as absolute

		.assume addr:absolute
		clc 	[$32],Y
		.assume addr:absolute
		clc 	[bak08],Y
		.assume addr:absolute
		clc 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  CLC  lzpiy as zeropage

		.assume addr:zeropage
		clc 	[$32],Y
		.assume addr:zeropage
		clc 	[bak08],Y
		.assume addr:zeropage
		clc 	[fwd08],Y

; checking CLC pcr

; pcr cannot be forced to @

		.echo **FAIL  CLC  pcr as absolute

		.assume addr:absolute
		clc 	:+
		.assume addr:absolute
		clc 	-
		.assume addr:absolute
		clc 	+
		.assume addr:absolute
		clc 	:-

; pcr cannot be forced to @

		.echo **FAIL  CLC  pcr as zeropage

		.assume addr:zeropage
		clc 	:+
		.assume addr:zeropage
		clc 	-
		.assume addr:zeropage
		clc 	+
		.assume addr:zeropage
		clc 	:-

; pcr cannot be forced to @

		.echo **FAIL  CLC  pcr as long

		.assume addr:long
		clc 	:+
		.assume addr:long
		clc 	-
		.assume addr:long
		clc 	+
		.assume addr:long
		clc 	:-

; checking CLC sr

; absolute is not forcible

		.echo **FAIL  CLC  sr as absolute

		.assume addr:absolute
		clc 	$32,S
		.assume addr:absolute
		clc 	bak08,S
		.assume addr:absolute
		clc 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  CLC  sr as zeropage

		.assume addr:zeropage
		clc 	$32,S
		.assume addr:zeropage
		clc 	bak08,S
		.assume addr:zeropage
		clc 	fwd08,S

; long is not forcible

		.echo **FAIL  CLC  sr as long

		.assume addr:long
		clc 	$32,S
		.assume addr:long
		clc 	bak08,S
		.assume addr:long
		clc 	fwd08,S

; checking CLC sriy

; absolute is not forcible

		.echo **FAIL  CLC  sriy as absolute

		.assume addr:absolute
		clc 	($32,S),Y
		.assume addr:absolute
		clc 	(bak08,S),Y
		.assume addr:absolute
		clc 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  CLC  sriy as zeropage

		.assume addr:zeropage
		clc 	($32,S),Y
		.assume addr:zeropage
		clc 	(bak08,S),Y
		.assume addr:zeropage
		clc 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  CLC  sriy as long

		.assume addr:long
		clc 	($32,S),Y
		.assume addr:long
		clc 	(bak08,S),Y
		.assume addr:long
		clc 	(fwd08,S),Y

; checking CLC zp

; zp cannot be forced to ab

		.echo **FAIL  CLC  zp as absolute

		.assume addr:absolute
		clc 	$32
		.assume addr:absolute
		clc 	bak08
		.assume addr:absolute
		clc 	fwd08

; zp cannot be forced to lab

		.echo **FAIL  CLC  zp as long

		.assume addr:long
		clc 	$32
		.assume addr:long
		clc 	bak08
		.assume addr:long
		clc 	fwd08

; checking CLC zpi

; zpi cannot be forced to abi

		.echo **FAIL  CLC  zpi as absolute

		.assume addr:absolute
		clc 	($32)
		.assume addr:absolute
		clc 	(bak08)
		.assume addr:absolute
		clc 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  CLC  zpi as long

		.assume addr:long
		clc 	($32)
		.assume addr:long
		clc 	(bak08)
		.assume addr:long
		clc 	(fwd08)

; checking CLC zpiy

; zpiy cannot be forced to @

		.echo **FAIL  CLC  zpiy as absolute

		.assume addr:absolute
		clc 	($32),y
		.assume addr:absolute
		clc 	(bak08),y
		.assume addr:absolute
		clc 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  CLC  zpiy as long

		.assume addr:long
		clc 	($32),y
		.assume addr:long
		clc 	(bak08),y
		.assume addr:long
		clc 	(fwd08),y

; checking CLC zpx

; zpx cannot be forced to abx

		.echo **FAIL  CLC  zpx as absolute

		.assume addr:absolute
		clc 	$32,x
		.assume addr:absolute
		clc 	bak08,x
		.assume addr:absolute
		clc 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  CLC  zpx as long

		.assume addr:long
		clc 	$32,x
		.assume addr:long
		clc 	bak08,x
		.assume addr:long
		clc 	fwd08,x

; checking CLC zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  CLC  zpxi as absolute

		.assume addr:absolute
		clc 	($32,x)
		.assume addr:absolute
		clc 	(bak08,x)
		.assume addr:absolute
		clc 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  CLC  zpxi as long

		.assume addr:long
		clc 	($32,x)
		.assume addr:long
		clc 	(bak08,x)
		.assume addr:long
		clc 	(fwd08,x)

; checking CLC zpy

; zpy cannot be forced to aby

		.echo **FAIL  CLC  zpy as absolute

		.assume addr:absolute
		clc 	$32,y
		.assume addr:absolute
		clc 	bak08,y
		.assume addr:absolute
		clc 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  CLC  zpy as long

		.assume addr:long
		clc 	$32,y
		.assume addr:long
		clc 	bak08,y
		.assume addr:long
		clc 	fwd08,y


; -------------------------------


; -------------------------------

		; check CPX
		; 2 mnemonics with modes ['ab', 'imm', 'zp']
		; CPY

; checking CPX ab

; ab cannot be forced to lab

		.echo **FAIL  CPX  ab as long

		.assume addr:long
		cpx 	$4365
		.assume addr:long
		cpx 	fwd16
		.assume addr:long
		cpx 	bak16

; checking CPX abi

; abi cannot be forced to zpi

		.echo **FAIL  CPX  abi as zeropage

		.assume addr:zeropage
		cpx 	($4365)
		.assume addr:zeropage
		cpx 	(fwd16)
		.assume addr:zeropage
		cpx 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  CPX  abi as long

		.assume addr:long
		cpx 	($4365)
		.assume addr:long
		cpx 	(fwd16)
		.assume addr:long
		cpx 	(bak16)

; checking CPX abx

; abx cannot be forced to zpx

		.echo **FAIL  CPX  abx as zeropage

		.assume addr:zeropage
		cpx 	$4365,X
		.assume addr:zeropage
		cpx 	fwd16,X
		.assume addr:zeropage
		cpx 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  CPX  abx as long

		.assume addr:long
		cpx 	$4365,X
		.assume addr:long
		cpx 	fwd16,X
		.assume addr:long
		cpx 	bak16,X

; checking CPX abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  CPX  abxi as zeropage

		.assume addr:zeropage
		cpx 	($4365,X)
		.assume addr:zeropage
		cpx 	(fwd16,X)
		.assume addr:zeropage
		cpx 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  CPX  abxi as long

		.assume addr:long
		cpx 	($4365,X)
		.assume addr:long
		cpx 	(fwd16,X)
		.assume addr:long
		cpx 	(bak16,X)

; checking CPX aby

; aby cannot be forced to zpy

		.echo **FAIL  CPX  aby as zeropage

		.assume addr:zeropage
		cpx 	$4365,Y
		.assume addr:zeropage
		cpx 	fwd16,Y
		.assume addr:zeropage
		cpx 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  CPX  aby as long

		.assume addr:long
		cpx 	$4365,Y
		.assume addr:long
		cpx 	fwd16,Y
		.assume addr:long
		cpx 	bak16,Y

; checking CPX acc

; absolute is not forcible

		.echo **FAIL  CPX  acc as absolute

		.assume addr:absolute
		cpx 	A
		.assume addr:absolute
		cpx 	a

; zeropage is not forcible

		.echo **FAIL  CPX  acc as zeropage

		.assume addr:zeropage
		cpx 	A
		.assume addr:zeropage
		cpx 	a

; long is not forcible

		.echo **FAIL  CPX  acc as long

		.assume addr:long
		cpx 	A
		.assume addr:long
		cpx 	a

; checking CPX bmv

; absolute is not forcible

		.echo **FAIL  CPX  bmv as absolute

		.assume addr:absolute
		cpx 	#bak08, #fwd08
		.assume addr:absolute
		cpx 	bak24, fwd24
		.assume addr:absolute
		cpx 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  CPX  bmv as zeropage

		.assume addr:zeropage
		cpx 	#bak08, #fwd08
		.assume addr:zeropage
		cpx 	bak24, fwd24
		.assume addr:zeropage
		cpx 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  CPX  bmv as long

		.assume addr:long
		cpx 	#bak08, #fwd08
		.assume addr:long
		cpx 	bak24, fwd24
		.assume addr:long
		cpx 	#bak08, fwd24

; checking CPX imm

; absolute is not forcible

		.echo **FAIL  CPX  imm as absolute

		.assume addr:absolute
		cpx 	#$32
		.assume addr:absolute
		cpx 	#bak08
		.assume addr:absolute
		cpx 	#fwd08

; zeropage is not forcible

		.echo **FAIL  CPX  imm as zeropage

		.assume addr:zeropage
		cpx 	#$32
		.assume addr:zeropage
		cpx 	#bak08
		.assume addr:zeropage
		cpx 	#fwd08

; long is not forcible

		.echo **FAIL  CPX  imm as long

		.assume addr:long
		cpx 	#$32
		.assume addr:long
		cpx 	#bak08
		.assume addr:long
		cpx 	#fwd08

; checking CPX imp

; absolute is not forcible

		.echo **FAIL  CPX  imp as absolute

		.assume addr:absolute
		cpx 

; zeropage is not forcible

		.echo **FAIL  CPX  imp as zeropage

		.assume addr:zeropage
		cpx 

; long is not forcible

		.echo **FAIL  CPX  imp as long

		.assume addr:long
		cpx 

; checking CPX lab

; checking CPX labi

; labi cannot be forced to abi

		.echo **FAIL  CPX  labi as absolute

		.assume addr:absolute
		cpx 	[$4365]
		.assume addr:absolute
		cpx 	[fwd16]
		.assume addr:absolute
		cpx 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  CPX  labi as zeropage

		.assume addr:zeropage
		cpx 	[$4365]
		.assume addr:zeropage
		cpx 	[fwd16]
		.assume addr:zeropage
		cpx 	[bak16]

; checking CPX labx

; labx cannot be forced to abx

		.echo **FAIL  CPX  labx as absolute

		.assume addr:absolute
		cpx 	$547698,x
		.assume addr:absolute
		cpx 	bak24,x
		.assume addr:absolute
		cpx 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  CPX  labx as zeropage

		.assume addr:zeropage
		cpx 	$547698,x
		.assume addr:zeropage
		cpx 	bak24,x
		.assume addr:zeropage
		cpx 	fwd24,x

; checking CPX lpcr

; lpcr cannot be forced to @

		.echo **FAIL  CPX  lpcr as long

		.assume addr:long
		cpx 	:+
		.assume addr:long
		cpx 	-
		.assume addr:long
		cpx 	+
		.assume addr:long
		cpx 	:-

; checking CPX lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  CPX  lzpi as absolute

		.assume addr:absolute
		cpx 	[$32]
		.assume addr:absolute
		cpx 	[bak08]
		.assume addr:absolute
		cpx 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  CPX  lzpi as zeropage

		.assume addr:zeropage
		cpx 	[$32]
		.assume addr:zeropage
		cpx 	[bak08]
		.assume addr:zeropage
		cpx 	[fwd08]

; checking CPX lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  CPX  lzpiy as absolute

		.assume addr:absolute
		cpx 	[$32],Y
		.assume addr:absolute
		cpx 	[bak08],Y
		.assume addr:absolute
		cpx 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  CPX  lzpiy as zeropage

		.assume addr:zeropage
		cpx 	[$32],Y
		.assume addr:zeropage
		cpx 	[bak08],Y
		.assume addr:zeropage
		cpx 	[fwd08],Y

; checking CPX pcr

; pcr cannot be forced to @

		.echo **FAIL  CPX  pcr as long

		.assume addr:long
		cpx 	:+
		.assume addr:long
		cpx 	-
		.assume addr:long
		cpx 	+
		.assume addr:long
		cpx 	:-

; checking CPX sr

; absolute is not forcible

		.echo **FAIL  CPX  sr as absolute

		.assume addr:absolute
		cpx 	$32,S
		.assume addr:absolute
		cpx 	bak08,S
		.assume addr:absolute
		cpx 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  CPX  sr as zeropage

		.assume addr:zeropage
		cpx 	$32,S
		.assume addr:zeropage
		cpx 	bak08,S
		.assume addr:zeropage
		cpx 	fwd08,S

; long is not forcible

		.echo **FAIL  CPX  sr as long

		.assume addr:long
		cpx 	$32,S
		.assume addr:long
		cpx 	bak08,S
		.assume addr:long
		cpx 	fwd08,S

; checking CPX sriy

; absolute is not forcible

		.echo **FAIL  CPX  sriy as absolute

		.assume addr:absolute
		cpx 	($32,S),Y
		.assume addr:absolute
		cpx 	(bak08,S),Y
		.assume addr:absolute
		cpx 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  CPX  sriy as zeropage

		.assume addr:zeropage
		cpx 	($32,S),Y
		.assume addr:zeropage
		cpx 	(bak08,S),Y
		.assume addr:zeropage
		cpx 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  CPX  sriy as long

		.assume addr:long
		cpx 	($32,S),Y
		.assume addr:long
		cpx 	(bak08,S),Y
		.assume addr:long
		cpx 	(fwd08,S),Y

; checking CPX zp

; zp cannot be forced to lab

		.echo **FAIL  CPX  zp as long

		.assume addr:long
		cpx 	$32
		.assume addr:long
		cpx 	bak08
		.assume addr:long
		cpx 	fwd08

; checking CPX zpi

; zpi cannot be forced to abi

		.echo **FAIL  CPX  zpi as absolute

		.assume addr:absolute
		cpx 	($32)
		.assume addr:absolute
		cpx 	(bak08)
		.assume addr:absolute
		cpx 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  CPX  zpi as long

		.assume addr:long
		cpx 	($32)
		.assume addr:long
		cpx 	(bak08)
		.assume addr:long
		cpx 	(fwd08)

; checking CPX zpiy

; zpiy cannot be forced to @

		.echo **FAIL  CPX  zpiy as absolute

		.assume addr:absolute
		cpx 	($32),y
		.assume addr:absolute
		cpx 	(bak08),y
		.assume addr:absolute
		cpx 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  CPX  zpiy as long

		.assume addr:long
		cpx 	($32),y
		.assume addr:long
		cpx 	(bak08),y
		.assume addr:long
		cpx 	(fwd08),y

; checking CPX zpx

; zpx cannot be forced to abx

		.echo **FAIL  CPX  zpx as absolute

		.assume addr:absolute
		cpx 	$32,x
		.assume addr:absolute
		cpx 	bak08,x
		.assume addr:absolute
		cpx 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  CPX  zpx as long

		.assume addr:long
		cpx 	$32,x
		.assume addr:long
		cpx 	bak08,x
		.assume addr:long
		cpx 	fwd08,x

; checking CPX zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  CPX  zpxi as absolute

		.assume addr:absolute
		cpx 	($32,x)
		.assume addr:absolute
		cpx 	(bak08,x)
		.assume addr:absolute
		cpx 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  CPX  zpxi as long

		.assume addr:long
		cpx 	($32,x)
		.assume addr:long
		cpx 	(bak08,x)
		.assume addr:long
		cpx 	(fwd08,x)

; checking CPX zpy

; zpy cannot be forced to aby

		.echo **FAIL  CPX  zpy as absolute

		.assume addr:absolute
		cpx 	$32,y
		.assume addr:absolute
		cpx 	bak08,y
		.assume addr:absolute
		cpx 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  CPX  zpy as long

		.assume addr:long
		cpx 	$32,y
		.assume addr:long
		cpx 	bak08,y
		.assume addr:long
		cpx 	fwd08,y


; -------------------------------


; -------------------------------

		; check JML
		; 1 mnemonics with modes ['abi', 'lab', 'labi']

; checking JML ab

; ab cannot be forced to zp

		.echo **FAIL  JML  ab as zeropage

		.assume addr:zeropage
		jml 	$4365
		.assume addr:zeropage
		jml 	fwd16
		.assume addr:zeropage
		jml 	bak16

; checking JML abi

; abi cannot be forced to zpi

		.echo **FAIL  JML  abi as zeropage

		.assume addr:zeropage
		jml 	($4365)
		.assume addr:zeropage
		jml 	(fwd16)
		.assume addr:zeropage
		jml 	(bak16)

; checking JML abx

; abx cannot be forced to zpx

		.echo **FAIL  JML  abx as zeropage

		.assume addr:zeropage
		jml 	$4365,X
		.assume addr:zeropage
		jml 	fwd16,X
		.assume addr:zeropage
		jml 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  JML  abx as long

		.assume addr:long
		jml 	$4365,X
		.assume addr:long
		jml 	fwd16,X
		.assume addr:long
		jml 	bak16,X

; checking JML abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  JML  abxi as zeropage

		.assume addr:zeropage
		jml 	($4365,X)
		.assume addr:zeropage
		jml 	(fwd16,X)
		.assume addr:zeropage
		jml 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  JML  abxi as long

		.assume addr:long
		jml 	($4365,X)
		.assume addr:long
		jml 	(fwd16,X)
		.assume addr:long
		jml 	(bak16,X)

; checking JML aby

; aby cannot be forced to zpy

		.echo **FAIL  JML  aby as zeropage

		.assume addr:zeropage
		jml 	$4365,Y
		.assume addr:zeropage
		jml 	fwd16,Y
		.assume addr:zeropage
		jml 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  JML  aby as long

		.assume addr:long
		jml 	$4365,Y
		.assume addr:long
		jml 	fwd16,Y
		.assume addr:long
		jml 	bak16,Y

; checking JML acc

; absolute is not forcible

		.echo **FAIL  JML  acc as absolute

		.assume addr:absolute
		jml 	A
		.assume addr:absolute
		jml 	a

; zeropage is not forcible

		.echo **FAIL  JML  acc as zeropage

		.assume addr:zeropage
		jml 	A
		.assume addr:zeropage
		jml 	a

; long is not forcible

		.echo **FAIL  JML  acc as long

		.assume addr:long
		jml 	A
		.assume addr:long
		jml 	a

; checking JML bmv

; absolute is not forcible

		.echo **FAIL  JML  bmv as absolute

		.assume addr:absolute
		jml 	#bak08, #fwd08
		.assume addr:absolute
		jml 	bak24, fwd24
		.assume addr:absolute
		jml 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  JML  bmv as zeropage

		.assume addr:zeropage
		jml 	#bak08, #fwd08
		.assume addr:zeropage
		jml 	bak24, fwd24
		.assume addr:zeropage
		jml 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  JML  bmv as long

		.assume addr:long
		jml 	#bak08, #fwd08
		.assume addr:long
		jml 	bak24, fwd24
		.assume addr:long
		jml 	#bak08, fwd24

; checking JML imm

; absolute is not forcible

		.echo **FAIL  JML  imm as absolute

		.assume addr:absolute
		jml 	#$32
		.assume addr:absolute
		jml 	#bak08
		.assume addr:absolute
		jml 	#fwd08

; zeropage is not forcible

		.echo **FAIL  JML  imm as zeropage

		.assume addr:zeropage
		jml 	#$32
		.assume addr:zeropage
		jml 	#bak08
		.assume addr:zeropage
		jml 	#fwd08

; long is not forcible

		.echo **FAIL  JML  imm as long

		.assume addr:long
		jml 	#$32
		.assume addr:long
		jml 	#bak08
		.assume addr:long
		jml 	#fwd08

; checking JML imp

; absolute is not forcible

		.echo **FAIL  JML  imp as absolute

		.assume addr:absolute
		jml 

; zeropage is not forcible

		.echo **FAIL  JML  imp as zeropage

		.assume addr:zeropage
		jml 

; long is not forcible

		.echo **FAIL  JML  imp as long

		.assume addr:long
		jml 

; checking JML lab

; lab cannot be forced to ab

		.echo **FAIL  JML  lab as absolute

		.assume addr:absolute
		jml 	$547698
		.assume addr:absolute
		jml 	bak24
		.assume addr:absolute
		jml 	fwd24

; lab cannot be forced to zp

		.echo **FAIL  JML  lab as zeropage

		.assume addr:zeropage
		jml 	$547698
		.assume addr:zeropage
		jml 	bak24
		.assume addr:zeropage
		jml 	fwd24

; checking JML labi

; labi cannot be forced to zpi

		.echo **FAIL  JML  labi as zeropage

		.assume addr:zeropage
		jml 	[$4365]
		.assume addr:zeropage
		jml 	[fwd16]
		.assume addr:zeropage
		jml 	[bak16]

; checking JML labx

; labx cannot be forced to abx

		.echo **FAIL  JML  labx as absolute

		.assume addr:absolute
		jml 	$547698,x
		.assume addr:absolute
		jml 	bak24,x
		.assume addr:absolute
		jml 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  JML  labx as zeropage

		.assume addr:zeropage
		jml 	$547698,x
		.assume addr:zeropage
		jml 	bak24,x
		.assume addr:zeropage
		jml 	fwd24,x

; checking JML lpcr

; lpcr cannot be forced to @

		.echo **FAIL  JML  lpcr as absolute

		.assume addr:absolute
		jml 	:+
		.assume addr:absolute
		jml 	-
		.assume addr:absolute
		jml 	+
		.assume addr:absolute
		jml 	:-

; lpcr cannot be forced to @

		.echo **FAIL  JML  lpcr as zeropage

		.assume addr:zeropage
		jml 	:+
		.assume addr:zeropage
		jml 	-
		.assume addr:zeropage
		jml 	+
		.assume addr:zeropage
		jml 	:-

; checking JML lzpi

; lzpi cannot be forced to zpi

		.echo **FAIL  JML  lzpi as zeropage

		.assume addr:zeropage
		jml 	[$32]
		.assume addr:zeropage
		jml 	[bak08]
		.assume addr:zeropage
		jml 	[fwd08]

; checking JML lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  JML  lzpiy as absolute

		.assume addr:absolute
		jml 	[$32],Y
		.assume addr:absolute
		jml 	[bak08],Y
		.assume addr:absolute
		jml 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  JML  lzpiy as zeropage

		.assume addr:zeropage
		jml 	[$32],Y
		.assume addr:zeropage
		jml 	[bak08],Y
		.assume addr:zeropage
		jml 	[fwd08],Y

; checking JML pcr

; pcr cannot be forced to @

		.echo **FAIL  JML  pcr as absolute

		.assume addr:absolute
		jml 	:+
		.assume addr:absolute
		jml 	-
		.assume addr:absolute
		jml 	+
		.assume addr:absolute
		jml 	:-

; pcr cannot be forced to @

		.echo **FAIL  JML  pcr as zeropage

		.assume addr:zeropage
		jml 	:+
		.assume addr:zeropage
		jml 	-
		.assume addr:zeropage
		jml 	+
		.assume addr:zeropage
		jml 	:-

; checking JML sr

; absolute is not forcible

		.echo **FAIL  JML  sr as absolute

		.assume addr:absolute
		jml 	$32,S
		.assume addr:absolute
		jml 	bak08,S
		.assume addr:absolute
		jml 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  JML  sr as zeropage

		.assume addr:zeropage
		jml 	$32,S
		.assume addr:zeropage
		jml 	bak08,S
		.assume addr:zeropage
		jml 	fwd08,S

; long is not forcible

		.echo **FAIL  JML  sr as long

		.assume addr:long
		jml 	$32,S
		.assume addr:long
		jml 	bak08,S
		.assume addr:long
		jml 	fwd08,S

; checking JML sriy

; absolute is not forcible

		.echo **FAIL  JML  sriy as absolute

		.assume addr:absolute
		jml 	($32,S),Y
		.assume addr:absolute
		jml 	(bak08,S),Y
		.assume addr:absolute
		jml 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  JML  sriy as zeropage

		.assume addr:zeropage
		jml 	($32,S),Y
		.assume addr:zeropage
		jml 	(bak08,S),Y
		.assume addr:zeropage
		jml 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  JML  sriy as long

		.assume addr:long
		jml 	($32,S),Y
		.assume addr:long
		jml 	(bak08,S),Y
		.assume addr:long
		jml 	(fwd08,S),Y

; checking JML zp

; zp cannot be forced to ab

		.echo **FAIL  JML  zp as absolute

		.assume addr:absolute
		jml 	$32
		.assume addr:absolute
		jml 	bak08
		.assume addr:absolute
		jml 	fwd08

; checking JML zpi

; checking JML zpiy

; zpiy cannot be forced to @

		.echo **FAIL  JML  zpiy as absolute

		.assume addr:absolute
		jml 	($32),y
		.assume addr:absolute
		jml 	(bak08),y
		.assume addr:absolute
		jml 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  JML  zpiy as long

		.assume addr:long
		jml 	($32),y
		.assume addr:long
		jml 	(bak08),y
		.assume addr:long
		jml 	(fwd08),y

; checking JML zpx

; zpx cannot be forced to abx

		.echo **FAIL  JML  zpx as absolute

		.assume addr:absolute
		jml 	$32,x
		.assume addr:absolute
		jml 	bak08,x
		.assume addr:absolute
		jml 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  JML  zpx as long

		.assume addr:long
		jml 	$32,x
		.assume addr:long
		jml 	bak08,x
		.assume addr:long
		jml 	fwd08,x

; checking JML zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  JML  zpxi as absolute

		.assume addr:absolute
		jml 	($32,x)
		.assume addr:absolute
		jml 	(bak08,x)
		.assume addr:absolute
		jml 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  JML  zpxi as long

		.assume addr:long
		jml 	($32,x)
		.assume addr:long
		jml 	(bak08,x)
		.assume addr:long
		jml 	(fwd08,x)

; checking JML zpy

; zpy cannot be forced to aby

		.echo **FAIL  JML  zpy as absolute

		.assume addr:absolute
		jml 	$32,y
		.assume addr:absolute
		jml 	bak08,y
		.assume addr:absolute
		jml 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  JML  zpy as long

		.assume addr:long
		jml 	$32,y
		.assume addr:long
		jml 	bak08,y
		.assume addr:long
		jml 	fwd08,y


; -------------------------------


; -------------------------------

		; check JMP
		; 1 mnemonics with modes ['ab', 'abi', 'abxi', 'labi']

; checking JMP ab

; ab cannot be forced to zp

		.echo **FAIL  JMP  ab as zeropage

		.assume addr:zeropage
		jmp 	$4365
		.assume addr:zeropage
		jmp 	fwd16
		.assume addr:zeropage
		jmp 	bak16

; ab cannot be forced to lab

		.echo **FAIL  JMP  ab as long

		.assume addr:long
		jmp 	$4365
		.assume addr:long
		jmp 	fwd16
		.assume addr:long
		jmp 	bak16

; checking JMP abi

; abi cannot be forced to zpi

		.echo **FAIL  JMP  abi as zeropage

		.assume addr:zeropage
		jmp 	($4365)
		.assume addr:zeropage
		jmp 	(fwd16)
		.assume addr:zeropage
		jmp 	(bak16)

; checking JMP abx

; abx cannot be forced to zpx

		.echo **FAIL  JMP  abx as zeropage

		.assume addr:zeropage
		jmp 	$4365,X
		.assume addr:zeropage
		jmp 	fwd16,X
		.assume addr:zeropage
		jmp 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  JMP  abx as long

		.assume addr:long
		jmp 	$4365,X
		.assume addr:long
		jmp 	fwd16,X
		.assume addr:long
		jmp 	bak16,X

; checking JMP abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  JMP  abxi as zeropage

		.assume addr:zeropage
		jmp 	($4365,X)
		.assume addr:zeropage
		jmp 	(fwd16,X)
		.assume addr:zeropage
		jmp 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  JMP  abxi as long

		.assume addr:long
		jmp 	($4365,X)
		.assume addr:long
		jmp 	(fwd16,X)
		.assume addr:long
		jmp 	(bak16,X)

; checking JMP aby

; aby cannot be forced to zpy

		.echo **FAIL  JMP  aby as zeropage

		.assume addr:zeropage
		jmp 	$4365,Y
		.assume addr:zeropage
		jmp 	fwd16,Y
		.assume addr:zeropage
		jmp 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  JMP  aby as long

		.assume addr:long
		jmp 	$4365,Y
		.assume addr:long
		jmp 	fwd16,Y
		.assume addr:long
		jmp 	bak16,Y

; checking JMP acc

; absolute is not forcible

		.echo **FAIL  JMP  acc as absolute

		.assume addr:absolute
		jmp 	A
		.assume addr:absolute
		jmp 	a

; zeropage is not forcible

		.echo **FAIL  JMP  acc as zeropage

		.assume addr:zeropage
		jmp 	A
		.assume addr:zeropage
		jmp 	a

; long is not forcible

		.echo **FAIL  JMP  acc as long

		.assume addr:long
		jmp 	A
		.assume addr:long
		jmp 	a

; checking JMP bmv

; absolute is not forcible

		.echo **FAIL  JMP  bmv as absolute

		.assume addr:absolute
		jmp 	#bak08, #fwd08
		.assume addr:absolute
		jmp 	bak24, fwd24
		.assume addr:absolute
		jmp 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  JMP  bmv as zeropage

		.assume addr:zeropage
		jmp 	#bak08, #fwd08
		.assume addr:zeropage
		jmp 	bak24, fwd24
		.assume addr:zeropage
		jmp 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  JMP  bmv as long

		.assume addr:long
		jmp 	#bak08, #fwd08
		.assume addr:long
		jmp 	bak24, fwd24
		.assume addr:long
		jmp 	#bak08, fwd24

; checking JMP imm

; absolute is not forcible

		.echo **FAIL  JMP  imm as absolute

		.assume addr:absolute
		jmp 	#$32
		.assume addr:absolute
		jmp 	#bak08
		.assume addr:absolute
		jmp 	#fwd08

; zeropage is not forcible

		.echo **FAIL  JMP  imm as zeropage

		.assume addr:zeropage
		jmp 	#$32
		.assume addr:zeropage
		jmp 	#bak08
		.assume addr:zeropage
		jmp 	#fwd08

; long is not forcible

		.echo **FAIL  JMP  imm as long

		.assume addr:long
		jmp 	#$32
		.assume addr:long
		jmp 	#bak08
		.assume addr:long
		jmp 	#fwd08

; checking JMP imp

; absolute is not forcible

		.echo **FAIL  JMP  imp as absolute

		.assume addr:absolute
		jmp 

; zeropage is not forcible

		.echo **FAIL  JMP  imp as zeropage

		.assume addr:zeropage
		jmp 

; long is not forcible

		.echo **FAIL  JMP  imp as long

		.assume addr:long
		jmp 

; checking JMP lab

; lab cannot be forced to zp

		.echo **FAIL  JMP  lab as zeropage

		.assume addr:zeropage
		jmp 	$547698
		.assume addr:zeropage
		jmp 	bak24
		.assume addr:zeropage
		jmp 	fwd24

; checking JMP labi

; labi cannot be forced to zpi

		.echo **FAIL  JMP  labi as zeropage

		.assume addr:zeropage
		jmp 	[$4365]
		.assume addr:zeropage
		jmp 	[fwd16]
		.assume addr:zeropage
		jmp 	[bak16]

; checking JMP labx

; labx cannot be forced to abx

		.echo **FAIL  JMP  labx as absolute

		.assume addr:absolute
		jmp 	$547698,x
		.assume addr:absolute
		jmp 	bak24,x
		.assume addr:absolute
		jmp 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  JMP  labx as zeropage

		.assume addr:zeropage
		jmp 	$547698,x
		.assume addr:zeropage
		jmp 	bak24,x
		.assume addr:zeropage
		jmp 	fwd24,x

; checking JMP lpcr

; lpcr cannot be forced to @

		.echo **FAIL  JMP  lpcr as zeropage

		.assume addr:zeropage
		jmp 	:+
		.assume addr:zeropage
		jmp 	-
		.assume addr:zeropage
		jmp 	+
		.assume addr:zeropage
		jmp 	:-

; lpcr cannot be forced to @

		.echo **FAIL  JMP  lpcr as long

		.assume addr:long
		jmp 	:+
		.assume addr:long
		jmp 	-
		.assume addr:long
		jmp 	+
		.assume addr:long
		jmp 	:-

; checking JMP lzpi

; lzpi cannot be forced to zpi

		.echo **FAIL  JMP  lzpi as zeropage

		.assume addr:zeropage
		jmp 	[$32]
		.assume addr:zeropage
		jmp 	[bak08]
		.assume addr:zeropage
		jmp 	[fwd08]

; checking JMP lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  JMP  lzpiy as absolute

		.assume addr:absolute
		jmp 	[$32],Y
		.assume addr:absolute
		jmp 	[bak08],Y
		.assume addr:absolute
		jmp 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  JMP  lzpiy as zeropage

		.assume addr:zeropage
		jmp 	[$32],Y
		.assume addr:zeropage
		jmp 	[bak08],Y
		.assume addr:zeropage
		jmp 	[fwd08],Y

; checking JMP pcr

; pcr cannot be forced to @

		.echo **FAIL  JMP  pcr as zeropage

		.assume addr:zeropage
		jmp 	:+
		.assume addr:zeropage
		jmp 	-
		.assume addr:zeropage
		jmp 	+
		.assume addr:zeropage
		jmp 	:-

; pcr cannot be forced to @

		.echo **FAIL  JMP  pcr as long

		.assume addr:long
		jmp 	:+
		.assume addr:long
		jmp 	-
		.assume addr:long
		jmp 	+
		.assume addr:long
		jmp 	:-

; checking JMP sr

; absolute is not forcible

		.echo **FAIL  JMP  sr as absolute

		.assume addr:absolute
		jmp 	$32,S
		.assume addr:absolute
		jmp 	bak08,S
		.assume addr:absolute
		jmp 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  JMP  sr as zeropage

		.assume addr:zeropage
		jmp 	$32,S
		.assume addr:zeropage
		jmp 	bak08,S
		.assume addr:zeropage
		jmp 	fwd08,S

; long is not forcible

		.echo **FAIL  JMP  sr as long

		.assume addr:long
		jmp 	$32,S
		.assume addr:long
		jmp 	bak08,S
		.assume addr:long
		jmp 	fwd08,S

; checking JMP sriy

; absolute is not forcible

		.echo **FAIL  JMP  sriy as absolute

		.assume addr:absolute
		jmp 	($32,S),Y
		.assume addr:absolute
		jmp 	(bak08,S),Y
		.assume addr:absolute
		jmp 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  JMP  sriy as zeropage

		.assume addr:zeropage
		jmp 	($32,S),Y
		.assume addr:zeropage
		jmp 	(bak08,S),Y
		.assume addr:zeropage
		jmp 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  JMP  sriy as long

		.assume addr:long
		jmp 	($32,S),Y
		.assume addr:long
		jmp 	(bak08,S),Y
		.assume addr:long
		jmp 	(fwd08,S),Y

; checking JMP zp

; zp cannot be forced to lab

		.echo **FAIL  JMP  zp as long

		.assume addr:long
		jmp 	$32
		.assume addr:long
		jmp 	bak08
		.assume addr:long
		jmp 	fwd08

; checking JMP zpi

; checking JMP zpiy

; zpiy cannot be forced to @

		.echo **FAIL  JMP  zpiy as absolute

		.assume addr:absolute
		jmp 	($32),y
		.assume addr:absolute
		jmp 	(bak08),y
		.assume addr:absolute
		jmp 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  JMP  zpiy as long

		.assume addr:long
		jmp 	($32),y
		.assume addr:long
		jmp 	(bak08),y
		.assume addr:long
		jmp 	(fwd08),y

; checking JMP zpx

; zpx cannot be forced to abx

		.echo **FAIL  JMP  zpx as absolute

		.assume addr:absolute
		jmp 	$32,x
		.assume addr:absolute
		jmp 	bak08,x
		.assume addr:absolute
		jmp 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  JMP  zpx as long

		.assume addr:long
		jmp 	$32,x
		.assume addr:long
		jmp 	bak08,x
		.assume addr:long
		jmp 	fwd08,x

; checking JMP zpxi

; zpxi cannot be forced to @

		.echo **FAIL  JMP  zpxi as long

		.assume addr:long
		jmp 	($32,x)
		.assume addr:long
		jmp 	(bak08,x)
		.assume addr:long
		jmp 	(fwd08,x)

; checking JMP zpy

; zpy cannot be forced to aby

		.echo **FAIL  JMP  zpy as absolute

		.assume addr:absolute
		jmp 	$32,y
		.assume addr:absolute
		jmp 	bak08,y
		.assume addr:absolute
		jmp 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  JMP  zpy as long

		.assume addr:long
		jmp 	$32,y
		.assume addr:long
		jmp 	bak08,y
		.assume addr:long
		jmp 	fwd08,y


; -------------------------------


; -------------------------------

		; check JSL
		; 1 mnemonics with modes ['lab']

; checking JSL ab

; ab cannot be forced to zp

		.echo **FAIL  JSL  ab as zeropage

		.assume addr:zeropage
		jsl 	$4365
		.assume addr:zeropage
		jsl 	fwd16
		.assume addr:zeropage
		jsl 	bak16

; checking JSL abi

; abi cannot be forced to zpi

		.echo **FAIL  JSL  abi as zeropage

		.assume addr:zeropage
		jsl 	($4365)
		.assume addr:zeropage
		jsl 	(fwd16)
		.assume addr:zeropage
		jsl 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  JSL  abi as long

		.assume addr:long
		jsl 	($4365)
		.assume addr:long
		jsl 	(fwd16)
		.assume addr:long
		jsl 	(bak16)

; checking JSL abx

; abx cannot be forced to zpx

		.echo **FAIL  JSL  abx as zeropage

		.assume addr:zeropage
		jsl 	$4365,X
		.assume addr:zeropage
		jsl 	fwd16,X
		.assume addr:zeropage
		jsl 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  JSL  abx as long

		.assume addr:long
		jsl 	$4365,X
		.assume addr:long
		jsl 	fwd16,X
		.assume addr:long
		jsl 	bak16,X

; checking JSL abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  JSL  abxi as zeropage

		.assume addr:zeropage
		jsl 	($4365,X)
		.assume addr:zeropage
		jsl 	(fwd16,X)
		.assume addr:zeropage
		jsl 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  JSL  abxi as long

		.assume addr:long
		jsl 	($4365,X)
		.assume addr:long
		jsl 	(fwd16,X)
		.assume addr:long
		jsl 	(bak16,X)

; checking JSL aby

; aby cannot be forced to zpy

		.echo **FAIL  JSL  aby as zeropage

		.assume addr:zeropage
		jsl 	$4365,Y
		.assume addr:zeropage
		jsl 	fwd16,Y
		.assume addr:zeropage
		jsl 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  JSL  aby as long

		.assume addr:long
		jsl 	$4365,Y
		.assume addr:long
		jsl 	fwd16,Y
		.assume addr:long
		jsl 	bak16,Y

; checking JSL acc

; absolute is not forcible

		.echo **FAIL  JSL  acc as absolute

		.assume addr:absolute
		jsl 	A
		.assume addr:absolute
		jsl 	a

; zeropage is not forcible

		.echo **FAIL  JSL  acc as zeropage

		.assume addr:zeropage
		jsl 	A
		.assume addr:zeropage
		jsl 	a

; long is not forcible

		.echo **FAIL  JSL  acc as long

		.assume addr:long
		jsl 	A
		.assume addr:long
		jsl 	a

; checking JSL bmv

; absolute is not forcible

		.echo **FAIL  JSL  bmv as absolute

		.assume addr:absolute
		jsl 	#bak08, #fwd08
		.assume addr:absolute
		jsl 	bak24, fwd24
		.assume addr:absolute
		jsl 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  JSL  bmv as zeropage

		.assume addr:zeropage
		jsl 	#bak08, #fwd08
		.assume addr:zeropage
		jsl 	bak24, fwd24
		.assume addr:zeropage
		jsl 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  JSL  bmv as long

		.assume addr:long
		jsl 	#bak08, #fwd08
		.assume addr:long
		jsl 	bak24, fwd24
		.assume addr:long
		jsl 	#bak08, fwd24

; checking JSL imm

; absolute is not forcible

		.echo **FAIL  JSL  imm as absolute

		.assume addr:absolute
		jsl 	#$32
		.assume addr:absolute
		jsl 	#bak08
		.assume addr:absolute
		jsl 	#fwd08

; zeropage is not forcible

		.echo **FAIL  JSL  imm as zeropage

		.assume addr:zeropage
		jsl 	#$32
		.assume addr:zeropage
		jsl 	#bak08
		.assume addr:zeropage
		jsl 	#fwd08

; long is not forcible

		.echo **FAIL  JSL  imm as long

		.assume addr:long
		jsl 	#$32
		.assume addr:long
		jsl 	#bak08
		.assume addr:long
		jsl 	#fwd08

; checking JSL imp

; absolute is not forcible

		.echo **FAIL  JSL  imp as absolute

		.assume addr:absolute
		jsl 

; zeropage is not forcible

		.echo **FAIL  JSL  imp as zeropage

		.assume addr:zeropage
		jsl 

; long is not forcible

		.echo **FAIL  JSL  imp as long

		.assume addr:long
		jsl 

; checking JSL lab

; lab cannot be forced to ab

		.echo **FAIL  JSL  lab as absolute

		.assume addr:absolute
		jsl 	$547698
		.assume addr:absolute
		jsl 	bak24
		.assume addr:absolute
		jsl 	fwd24

; lab cannot be forced to zp

		.echo **FAIL  JSL  lab as zeropage

		.assume addr:zeropage
		jsl 	$547698
		.assume addr:zeropage
		jsl 	bak24
		.assume addr:zeropage
		jsl 	fwd24

; checking JSL labi

; labi cannot be forced to abi

		.echo **FAIL  JSL  labi as absolute

		.assume addr:absolute
		jsl 	[$4365]
		.assume addr:absolute
		jsl 	[fwd16]
		.assume addr:absolute
		jsl 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  JSL  labi as zeropage

		.assume addr:zeropage
		jsl 	[$4365]
		.assume addr:zeropage
		jsl 	[fwd16]
		.assume addr:zeropage
		jsl 	[bak16]

; checking JSL labx

; labx cannot be forced to abx

		.echo **FAIL  JSL  labx as absolute

		.assume addr:absolute
		jsl 	$547698,x
		.assume addr:absolute
		jsl 	bak24,x
		.assume addr:absolute
		jsl 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  JSL  labx as zeropage

		.assume addr:zeropage
		jsl 	$547698,x
		.assume addr:zeropage
		jsl 	bak24,x
		.assume addr:zeropage
		jsl 	fwd24,x

; checking JSL lpcr

; lpcr cannot be forced to @

		.echo **FAIL  JSL  lpcr as absolute

		.assume addr:absolute
		jsl 	:+
		.assume addr:absolute
		jsl 	-
		.assume addr:absolute
		jsl 	+
		.assume addr:absolute
		jsl 	:-

; lpcr cannot be forced to @

		.echo **FAIL  JSL  lpcr as zeropage

		.assume addr:zeropage
		jsl 	:+
		.assume addr:zeropage
		jsl 	-
		.assume addr:zeropage
		jsl 	+
		.assume addr:zeropage
		jsl 	:-

; checking JSL lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  JSL  lzpi as absolute

		.assume addr:absolute
		jsl 	[$32]
		.assume addr:absolute
		jsl 	[bak08]
		.assume addr:absolute
		jsl 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  JSL  lzpi as zeropage

		.assume addr:zeropage
		jsl 	[$32]
		.assume addr:zeropage
		jsl 	[bak08]
		.assume addr:zeropage
		jsl 	[fwd08]

; checking JSL lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  JSL  lzpiy as absolute

		.assume addr:absolute
		jsl 	[$32],Y
		.assume addr:absolute
		jsl 	[bak08],Y
		.assume addr:absolute
		jsl 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  JSL  lzpiy as zeropage

		.assume addr:zeropage
		jsl 	[$32],Y
		.assume addr:zeropage
		jsl 	[bak08],Y
		.assume addr:zeropage
		jsl 	[fwd08],Y

; checking JSL pcr

; pcr cannot be forced to @

		.echo **FAIL  JSL  pcr as absolute

		.assume addr:absolute
		jsl 	:+
		.assume addr:absolute
		jsl 	-
		.assume addr:absolute
		jsl 	+
		.assume addr:absolute
		jsl 	:-

; pcr cannot be forced to @

		.echo **FAIL  JSL  pcr as zeropage

		.assume addr:zeropage
		jsl 	:+
		.assume addr:zeropage
		jsl 	-
		.assume addr:zeropage
		jsl 	+
		.assume addr:zeropage
		jsl 	:-

; checking JSL sr

; absolute is not forcible

		.echo **FAIL  JSL  sr as absolute

		.assume addr:absolute
		jsl 	$32,S
		.assume addr:absolute
		jsl 	bak08,S
		.assume addr:absolute
		jsl 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  JSL  sr as zeropage

		.assume addr:zeropage
		jsl 	$32,S
		.assume addr:zeropage
		jsl 	bak08,S
		.assume addr:zeropage
		jsl 	fwd08,S

; long is not forcible

		.echo **FAIL  JSL  sr as long

		.assume addr:long
		jsl 	$32,S
		.assume addr:long
		jsl 	bak08,S
		.assume addr:long
		jsl 	fwd08,S

; checking JSL sriy

; absolute is not forcible

		.echo **FAIL  JSL  sriy as absolute

		.assume addr:absolute
		jsl 	($32,S),Y
		.assume addr:absolute
		jsl 	(bak08,S),Y
		.assume addr:absolute
		jsl 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  JSL  sriy as zeropage

		.assume addr:zeropage
		jsl 	($32,S),Y
		.assume addr:zeropage
		jsl 	(bak08,S),Y
		.assume addr:zeropage
		jsl 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  JSL  sriy as long

		.assume addr:long
		jsl 	($32,S),Y
		.assume addr:long
		jsl 	(bak08,S),Y
		.assume addr:long
		jsl 	(fwd08,S),Y

; checking JSL zp

; zp cannot be forced to ab

		.echo **FAIL  JSL  zp as absolute

		.assume addr:absolute
		jsl 	$32
		.assume addr:absolute
		jsl 	bak08
		.assume addr:absolute
		jsl 	fwd08

; checking JSL zpi

; zpi cannot be forced to abi

		.echo **FAIL  JSL  zpi as absolute

		.assume addr:absolute
		jsl 	($32)
		.assume addr:absolute
		jsl 	(bak08)
		.assume addr:absolute
		jsl 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  JSL  zpi as long

		.assume addr:long
		jsl 	($32)
		.assume addr:long
		jsl 	(bak08)
		.assume addr:long
		jsl 	(fwd08)

; checking JSL zpiy

; zpiy cannot be forced to @

		.echo **FAIL  JSL  zpiy as absolute

		.assume addr:absolute
		jsl 	($32),y
		.assume addr:absolute
		jsl 	(bak08),y
		.assume addr:absolute
		jsl 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  JSL  zpiy as long

		.assume addr:long
		jsl 	($32),y
		.assume addr:long
		jsl 	(bak08),y
		.assume addr:long
		jsl 	(fwd08),y

; checking JSL zpx

; zpx cannot be forced to abx

		.echo **FAIL  JSL  zpx as absolute

		.assume addr:absolute
		jsl 	$32,x
		.assume addr:absolute
		jsl 	bak08,x
		.assume addr:absolute
		jsl 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  JSL  zpx as long

		.assume addr:long
		jsl 	$32,x
		.assume addr:long
		jsl 	bak08,x
		.assume addr:long
		jsl 	fwd08,x

; checking JSL zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  JSL  zpxi as absolute

		.assume addr:absolute
		jsl 	($32,x)
		.assume addr:absolute
		jsl 	(bak08,x)
		.assume addr:absolute
		jsl 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  JSL  zpxi as long

		.assume addr:long
		jsl 	($32,x)
		.assume addr:long
		jsl 	(bak08,x)
		.assume addr:long
		jsl 	(fwd08,x)

; checking JSL zpy

; zpy cannot be forced to aby

		.echo **FAIL  JSL  zpy as absolute

		.assume addr:absolute
		jsl 	$32,y
		.assume addr:absolute
		jsl 	bak08,y
		.assume addr:absolute
		jsl 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  JSL  zpy as long

		.assume addr:long
		jsl 	$32,y
		.assume addr:long
		jsl 	bak08,y
		.assume addr:long
		jsl 	fwd08,y


; -------------------------------


; -------------------------------

		; check JSR
		; 1 mnemonics with modes ['ab', 'abxi']

; checking JSR ab

; ab cannot be forced to zp

		.echo **FAIL  JSR  ab as zeropage

		.assume addr:zeropage
		jsr 	$4365
		.assume addr:zeropage
		jsr 	fwd16
		.assume addr:zeropage
		jsr 	bak16

; ab cannot be forced to lab

		.echo **FAIL  JSR  ab as long

		.assume addr:long
		jsr 	$4365
		.assume addr:long
		jsr 	fwd16
		.assume addr:long
		jsr 	bak16

; checking JSR abi

; abi cannot be forced to zpi

		.echo **FAIL  JSR  abi as zeropage

		.assume addr:zeropage
		jsr 	($4365)
		.assume addr:zeropage
		jsr 	(fwd16)
		.assume addr:zeropage
		jsr 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  JSR  abi as long

		.assume addr:long
		jsr 	($4365)
		.assume addr:long
		jsr 	(fwd16)
		.assume addr:long
		jsr 	(bak16)

; checking JSR abx

; abx cannot be forced to zpx

		.echo **FAIL  JSR  abx as zeropage

		.assume addr:zeropage
		jsr 	$4365,X
		.assume addr:zeropage
		jsr 	fwd16,X
		.assume addr:zeropage
		jsr 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  JSR  abx as long

		.assume addr:long
		jsr 	$4365,X
		.assume addr:long
		jsr 	fwd16,X
		.assume addr:long
		jsr 	bak16,X

; checking JSR abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  JSR  abxi as zeropage

		.assume addr:zeropage
		jsr 	($4365,X)
		.assume addr:zeropage
		jsr 	(fwd16,X)
		.assume addr:zeropage
		jsr 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  JSR  abxi as long

		.assume addr:long
		jsr 	($4365,X)
		.assume addr:long
		jsr 	(fwd16,X)
		.assume addr:long
		jsr 	(bak16,X)

; checking JSR aby

; aby cannot be forced to zpy

		.echo **FAIL  JSR  aby as zeropage

		.assume addr:zeropage
		jsr 	$4365,Y
		.assume addr:zeropage
		jsr 	fwd16,Y
		.assume addr:zeropage
		jsr 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  JSR  aby as long

		.assume addr:long
		jsr 	$4365,Y
		.assume addr:long
		jsr 	fwd16,Y
		.assume addr:long
		jsr 	bak16,Y

; checking JSR acc

; absolute is not forcible

		.echo **FAIL  JSR  acc as absolute

		.assume addr:absolute
		jsr 	A
		.assume addr:absolute
		jsr 	a

; zeropage is not forcible

		.echo **FAIL  JSR  acc as zeropage

		.assume addr:zeropage
		jsr 	A
		.assume addr:zeropage
		jsr 	a

; long is not forcible

		.echo **FAIL  JSR  acc as long

		.assume addr:long
		jsr 	A
		.assume addr:long
		jsr 	a

; checking JSR bmv

; absolute is not forcible

		.echo **FAIL  JSR  bmv as absolute

		.assume addr:absolute
		jsr 	#bak08, #fwd08
		.assume addr:absolute
		jsr 	bak24, fwd24
		.assume addr:absolute
		jsr 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  JSR  bmv as zeropage

		.assume addr:zeropage
		jsr 	#bak08, #fwd08
		.assume addr:zeropage
		jsr 	bak24, fwd24
		.assume addr:zeropage
		jsr 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  JSR  bmv as long

		.assume addr:long
		jsr 	#bak08, #fwd08
		.assume addr:long
		jsr 	bak24, fwd24
		.assume addr:long
		jsr 	#bak08, fwd24

; checking JSR imm

; absolute is not forcible

		.echo **FAIL  JSR  imm as absolute

		.assume addr:absolute
		jsr 	#$32
		.assume addr:absolute
		jsr 	#bak08
		.assume addr:absolute
		jsr 	#fwd08

; zeropage is not forcible

		.echo **FAIL  JSR  imm as zeropage

		.assume addr:zeropage
		jsr 	#$32
		.assume addr:zeropage
		jsr 	#bak08
		.assume addr:zeropage
		jsr 	#fwd08

; long is not forcible

		.echo **FAIL  JSR  imm as long

		.assume addr:long
		jsr 	#$32
		.assume addr:long
		jsr 	#bak08
		.assume addr:long
		jsr 	#fwd08

; checking JSR imp

; absolute is not forcible

		.echo **FAIL  JSR  imp as absolute

		.assume addr:absolute
		jsr 

; zeropage is not forcible

		.echo **FAIL  JSR  imp as zeropage

		.assume addr:zeropage
		jsr 

; long is not forcible

		.echo **FAIL  JSR  imp as long

		.assume addr:long
		jsr 

; checking JSR lab

; lab cannot be forced to zp

		.echo **FAIL  JSR  lab as zeropage

		.assume addr:zeropage
		jsr 	$547698
		.assume addr:zeropage
		jsr 	bak24
		.assume addr:zeropage
		jsr 	fwd24

; checking JSR labi

; labi cannot be forced to abi

		.echo **FAIL  JSR  labi as absolute

		.assume addr:absolute
		jsr 	[$4365]
		.assume addr:absolute
		jsr 	[fwd16]
		.assume addr:absolute
		jsr 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  JSR  labi as zeropage

		.assume addr:zeropage
		jsr 	[$4365]
		.assume addr:zeropage
		jsr 	[fwd16]
		.assume addr:zeropage
		jsr 	[bak16]

; checking JSR labx

; labx cannot be forced to abx

		.echo **FAIL  JSR  labx as absolute

		.assume addr:absolute
		jsr 	$547698,x
		.assume addr:absolute
		jsr 	bak24,x
		.assume addr:absolute
		jsr 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  JSR  labx as zeropage

		.assume addr:zeropage
		jsr 	$547698,x
		.assume addr:zeropage
		jsr 	bak24,x
		.assume addr:zeropage
		jsr 	fwd24,x

; checking JSR lpcr

; lpcr cannot be forced to @

		.echo **FAIL  JSR  lpcr as zeropage

		.assume addr:zeropage
		jsr 	:+
		.assume addr:zeropage
		jsr 	-
		.assume addr:zeropage
		jsr 	+
		.assume addr:zeropage
		jsr 	:-

; lpcr cannot be forced to @

		.echo **FAIL  JSR  lpcr as long

		.assume addr:long
		jsr 	:+
		.assume addr:long
		jsr 	-
		.assume addr:long
		jsr 	+
		.assume addr:long
		jsr 	:-

; checking JSR lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  JSR  lzpi as absolute

		.assume addr:absolute
		jsr 	[$32]
		.assume addr:absolute
		jsr 	[bak08]
		.assume addr:absolute
		jsr 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  JSR  lzpi as zeropage

		.assume addr:zeropage
		jsr 	[$32]
		.assume addr:zeropage
		jsr 	[bak08]
		.assume addr:zeropage
		jsr 	[fwd08]

; checking JSR lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  JSR  lzpiy as absolute

		.assume addr:absolute
		jsr 	[$32],Y
		.assume addr:absolute
		jsr 	[bak08],Y
		.assume addr:absolute
		jsr 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  JSR  lzpiy as zeropage

		.assume addr:zeropage
		jsr 	[$32],Y
		.assume addr:zeropage
		jsr 	[bak08],Y
		.assume addr:zeropage
		jsr 	[fwd08],Y

; checking JSR pcr

; pcr cannot be forced to @

		.echo **FAIL  JSR  pcr as zeropage

		.assume addr:zeropage
		jsr 	:+
		.assume addr:zeropage
		jsr 	-
		.assume addr:zeropage
		jsr 	+
		.assume addr:zeropage
		jsr 	:-

; pcr cannot be forced to @

		.echo **FAIL  JSR  pcr as long

		.assume addr:long
		jsr 	:+
		.assume addr:long
		jsr 	-
		.assume addr:long
		jsr 	+
		.assume addr:long
		jsr 	:-

; checking JSR sr

; absolute is not forcible

		.echo **FAIL  JSR  sr as absolute

		.assume addr:absolute
		jsr 	$32,S
		.assume addr:absolute
		jsr 	bak08,S
		.assume addr:absolute
		jsr 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  JSR  sr as zeropage

		.assume addr:zeropage
		jsr 	$32,S
		.assume addr:zeropage
		jsr 	bak08,S
		.assume addr:zeropage
		jsr 	fwd08,S

; long is not forcible

		.echo **FAIL  JSR  sr as long

		.assume addr:long
		jsr 	$32,S
		.assume addr:long
		jsr 	bak08,S
		.assume addr:long
		jsr 	fwd08,S

; checking JSR sriy

; absolute is not forcible

		.echo **FAIL  JSR  sriy as absolute

		.assume addr:absolute
		jsr 	($32,S),Y
		.assume addr:absolute
		jsr 	(bak08,S),Y
		.assume addr:absolute
		jsr 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  JSR  sriy as zeropage

		.assume addr:zeropage
		jsr 	($32,S),Y
		.assume addr:zeropage
		jsr 	(bak08,S),Y
		.assume addr:zeropage
		jsr 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  JSR  sriy as long

		.assume addr:long
		jsr 	($32,S),Y
		.assume addr:long
		jsr 	(bak08,S),Y
		.assume addr:long
		jsr 	(fwd08,S),Y

; checking JSR zp

; zp cannot be forced to lab

		.echo **FAIL  JSR  zp as long

		.assume addr:long
		jsr 	$32
		.assume addr:long
		jsr 	bak08
		.assume addr:long
		jsr 	fwd08

; checking JSR zpi

; zpi cannot be forced to abi

		.echo **FAIL  JSR  zpi as absolute

		.assume addr:absolute
		jsr 	($32)
		.assume addr:absolute
		jsr 	(bak08)
		.assume addr:absolute
		jsr 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  JSR  zpi as long

		.assume addr:long
		jsr 	($32)
		.assume addr:long
		jsr 	(bak08)
		.assume addr:long
		jsr 	(fwd08)

; checking JSR zpiy

; zpiy cannot be forced to @

		.echo **FAIL  JSR  zpiy as absolute

		.assume addr:absolute
		jsr 	($32),y
		.assume addr:absolute
		jsr 	(bak08),y
		.assume addr:absolute
		jsr 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  JSR  zpiy as long

		.assume addr:long
		jsr 	($32),y
		.assume addr:long
		jsr 	(bak08),y
		.assume addr:long
		jsr 	(fwd08),y

; checking JSR zpx

; zpx cannot be forced to abx

		.echo **FAIL  JSR  zpx as absolute

		.assume addr:absolute
		jsr 	$32,x
		.assume addr:absolute
		jsr 	bak08,x
		.assume addr:absolute
		jsr 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  JSR  zpx as long

		.assume addr:long
		jsr 	$32,x
		.assume addr:long
		jsr 	bak08,x
		.assume addr:long
		jsr 	fwd08,x

; checking JSR zpxi

; zpxi cannot be forced to @

		.echo **FAIL  JSR  zpxi as long

		.assume addr:long
		jsr 	($32,x)
		.assume addr:long
		jsr 	(bak08,x)
		.assume addr:long
		jsr 	(fwd08,x)

; checking JSR zpy

; zpy cannot be forced to aby

		.echo **FAIL  JSR  zpy as absolute

		.assume addr:absolute
		jsr 	$32,y
		.assume addr:absolute
		jsr 	bak08,y
		.assume addr:absolute
		jsr 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  JSR  zpy as long

		.assume addr:long
		jsr 	$32,y
		.assume addr:long
		jsr 	bak08,y
		.assume addr:long
		jsr 	fwd08,y


; -------------------------------


; -------------------------------

		; check LDX
		; 1 mnemonics with modes ['ab', 'aby', 'imm', 'zp', 'zpy']

; checking LDX ab

; ab cannot be forced to lab

		.echo **FAIL  LDX  ab as long

		.assume addr:long
		ldx 	$4365
		.assume addr:long
		ldx 	fwd16
		.assume addr:long
		ldx 	bak16

; checking LDX abi

; abi cannot be forced to zpi

		.echo **FAIL  LDX  abi as zeropage

		.assume addr:zeropage
		ldx 	($4365)
		.assume addr:zeropage
		ldx 	(fwd16)
		.assume addr:zeropage
		ldx 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  LDX  abi as long

		.assume addr:long
		ldx 	($4365)
		.assume addr:long
		ldx 	(fwd16)
		.assume addr:long
		ldx 	(bak16)

; checking LDX abx

; abx cannot be forced to zpx

		.echo **FAIL  LDX  abx as zeropage

		.assume addr:zeropage
		ldx 	$4365,X
		.assume addr:zeropage
		ldx 	fwd16,X
		.assume addr:zeropage
		ldx 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  LDX  abx as long

		.assume addr:long
		ldx 	$4365,X
		.assume addr:long
		ldx 	fwd16,X
		.assume addr:long
		ldx 	bak16,X

; checking LDX abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  LDX  abxi as zeropage

		.assume addr:zeropage
		ldx 	($4365,X)
		.assume addr:zeropage
		ldx 	(fwd16,X)
		.assume addr:zeropage
		ldx 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  LDX  abxi as long

		.assume addr:long
		ldx 	($4365,X)
		.assume addr:long
		ldx 	(fwd16,X)
		.assume addr:long
		ldx 	(bak16,X)

; checking LDX aby

; aby cannot be forced to @

		.echo **FAIL  LDX  aby as long

		.assume addr:long
		ldx 	$4365,Y
		.assume addr:long
		ldx 	fwd16,Y
		.assume addr:long
		ldx 	bak16,Y

; checking LDX acc

; absolute is not forcible

		.echo **FAIL  LDX  acc as absolute

		.assume addr:absolute
		ldx 	A
		.assume addr:absolute
		ldx 	a

; zeropage is not forcible

		.echo **FAIL  LDX  acc as zeropage

		.assume addr:zeropage
		ldx 	A
		.assume addr:zeropage
		ldx 	a

; long is not forcible

		.echo **FAIL  LDX  acc as long

		.assume addr:long
		ldx 	A
		.assume addr:long
		ldx 	a

; checking LDX bmv

; absolute is not forcible

		.echo **FAIL  LDX  bmv as absolute

		.assume addr:absolute
		ldx 	#bak08, #fwd08
		.assume addr:absolute
		ldx 	bak24, fwd24
		.assume addr:absolute
		ldx 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  LDX  bmv as zeropage

		.assume addr:zeropage
		ldx 	#bak08, #fwd08
		.assume addr:zeropage
		ldx 	bak24, fwd24
		.assume addr:zeropage
		ldx 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  LDX  bmv as long

		.assume addr:long
		ldx 	#bak08, #fwd08
		.assume addr:long
		ldx 	bak24, fwd24
		.assume addr:long
		ldx 	#bak08, fwd24

; checking LDX imm

; absolute is not forcible

		.echo **FAIL  LDX  imm as absolute

		.assume addr:absolute
		ldx 	#$32
		.assume addr:absolute
		ldx 	#bak08
		.assume addr:absolute
		ldx 	#fwd08

; zeropage is not forcible

		.echo **FAIL  LDX  imm as zeropage

		.assume addr:zeropage
		ldx 	#$32
		.assume addr:zeropage
		ldx 	#bak08
		.assume addr:zeropage
		ldx 	#fwd08

; long is not forcible

		.echo **FAIL  LDX  imm as long

		.assume addr:long
		ldx 	#$32
		.assume addr:long
		ldx 	#bak08
		.assume addr:long
		ldx 	#fwd08

; checking LDX imp

; absolute is not forcible

		.echo **FAIL  LDX  imp as absolute

		.assume addr:absolute
		ldx 

; zeropage is not forcible

		.echo **FAIL  LDX  imp as zeropage

		.assume addr:zeropage
		ldx 

; long is not forcible

		.echo **FAIL  LDX  imp as long

		.assume addr:long
		ldx 

; checking LDX lab

; checking LDX labi

; labi cannot be forced to abi

		.echo **FAIL  LDX  labi as absolute

		.assume addr:absolute
		ldx 	[$4365]
		.assume addr:absolute
		ldx 	[fwd16]
		.assume addr:absolute
		ldx 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  LDX  labi as zeropage

		.assume addr:zeropage
		ldx 	[$4365]
		.assume addr:zeropage
		ldx 	[fwd16]
		.assume addr:zeropage
		ldx 	[bak16]

; checking LDX labx

; labx cannot be forced to abx

		.echo **FAIL  LDX  labx as absolute

		.assume addr:absolute
		ldx 	$547698,x
		.assume addr:absolute
		ldx 	bak24,x
		.assume addr:absolute
		ldx 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  LDX  labx as zeropage

		.assume addr:zeropage
		ldx 	$547698,x
		.assume addr:zeropage
		ldx 	bak24,x
		.assume addr:zeropage
		ldx 	fwd24,x

; checking LDX lpcr

; lpcr cannot be forced to @

		.echo **FAIL  LDX  lpcr as long

		.assume addr:long
		ldx 	:+
		.assume addr:long
		ldx 	-
		.assume addr:long
		ldx 	+
		.assume addr:long
		ldx 	:-

; checking LDX lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  LDX  lzpi as absolute

		.assume addr:absolute
		ldx 	[$32]
		.assume addr:absolute
		ldx 	[bak08]
		.assume addr:absolute
		ldx 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  LDX  lzpi as zeropage

		.assume addr:zeropage
		ldx 	[$32]
		.assume addr:zeropage
		ldx 	[bak08]
		.assume addr:zeropage
		ldx 	[fwd08]

; checking LDX lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  LDX  lzpiy as absolute

		.assume addr:absolute
		ldx 	[$32],Y
		.assume addr:absolute
		ldx 	[bak08],Y
		.assume addr:absolute
		ldx 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  LDX  lzpiy as zeropage

		.assume addr:zeropage
		ldx 	[$32],Y
		.assume addr:zeropage
		ldx 	[bak08],Y
		.assume addr:zeropage
		ldx 	[fwd08],Y

; checking LDX pcr

; pcr cannot be forced to @

		.echo **FAIL  LDX  pcr as long

		.assume addr:long
		ldx 	:+
		.assume addr:long
		ldx 	-
		.assume addr:long
		ldx 	+
		.assume addr:long
		ldx 	:-

; checking LDX sr

; absolute is not forcible

		.echo **FAIL  LDX  sr as absolute

		.assume addr:absolute
		ldx 	$32,S
		.assume addr:absolute
		ldx 	bak08,S
		.assume addr:absolute
		ldx 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  LDX  sr as zeropage

		.assume addr:zeropage
		ldx 	$32,S
		.assume addr:zeropage
		ldx 	bak08,S
		.assume addr:zeropage
		ldx 	fwd08,S

; long is not forcible

		.echo **FAIL  LDX  sr as long

		.assume addr:long
		ldx 	$32,S
		.assume addr:long
		ldx 	bak08,S
		.assume addr:long
		ldx 	fwd08,S

; checking LDX sriy

; absolute is not forcible

		.echo **FAIL  LDX  sriy as absolute

		.assume addr:absolute
		ldx 	($32,S),Y
		.assume addr:absolute
		ldx 	(bak08,S),Y
		.assume addr:absolute
		ldx 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  LDX  sriy as zeropage

		.assume addr:zeropage
		ldx 	($32,S),Y
		.assume addr:zeropage
		ldx 	(bak08,S),Y
		.assume addr:zeropage
		ldx 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  LDX  sriy as long

		.assume addr:long
		ldx 	($32,S),Y
		.assume addr:long
		ldx 	(bak08,S),Y
		.assume addr:long
		ldx 	(fwd08,S),Y

; checking LDX zp

; zp cannot be forced to lab

		.echo **FAIL  LDX  zp as long

		.assume addr:long
		ldx 	$32
		.assume addr:long
		ldx 	bak08
		.assume addr:long
		ldx 	fwd08

; checking LDX zpi

; zpi cannot be forced to abi

		.echo **FAIL  LDX  zpi as absolute

		.assume addr:absolute
		ldx 	($32)
		.assume addr:absolute
		ldx 	(bak08)
		.assume addr:absolute
		ldx 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  LDX  zpi as long

		.assume addr:long
		ldx 	($32)
		.assume addr:long
		ldx 	(bak08)
		.assume addr:long
		ldx 	(fwd08)

; checking LDX zpiy

; zpiy cannot be forced to @

		.echo **FAIL  LDX  zpiy as absolute

		.assume addr:absolute
		ldx 	($32),y
		.assume addr:absolute
		ldx 	(bak08),y
		.assume addr:absolute
		ldx 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  LDX  zpiy as long

		.assume addr:long
		ldx 	($32),y
		.assume addr:long
		ldx 	(bak08),y
		.assume addr:long
		ldx 	(fwd08),y

; checking LDX zpx

; zpx cannot be forced to abx

		.echo **FAIL  LDX  zpx as absolute

		.assume addr:absolute
		ldx 	$32,x
		.assume addr:absolute
		ldx 	bak08,x
		.assume addr:absolute
		ldx 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  LDX  zpx as long

		.assume addr:long
		ldx 	$32,x
		.assume addr:long
		ldx 	bak08,x
		.assume addr:long
		ldx 	fwd08,x

; checking LDX zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  LDX  zpxi as absolute

		.assume addr:absolute
		ldx 	($32,x)
		.assume addr:absolute
		ldx 	(bak08,x)
		.assume addr:absolute
		ldx 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  LDX  zpxi as long

		.assume addr:long
		ldx 	($32,x)
		.assume addr:long
		ldx 	(bak08,x)
		.assume addr:long
		ldx 	(fwd08,x)

; checking LDX zpy

; zpy cannot be forced to @

		.echo **FAIL  LDX  zpy as long

		.assume addr:long
		ldx 	$32,y
		.assume addr:long
		ldx 	bak08,y
		.assume addr:long
		ldx 	fwd08,y


; -------------------------------


; -------------------------------

		; check MVN
		; 2 mnemonics with modes ['bmv']
		; MVP

; checking MVN ab

; ab cannot be forced to zp

		.echo **FAIL  MVN  ab as zeropage

		.assume addr:zeropage
		mvn 	$4365
		.assume addr:zeropage
		mvn 	fwd16
		.assume addr:zeropage
		mvn 	bak16

; ab cannot be forced to lab

		.echo **FAIL  MVN  ab as long

		.assume addr:long
		mvn 	$4365
		.assume addr:long
		mvn 	fwd16
		.assume addr:long
		mvn 	bak16

; checking MVN abi

; abi cannot be forced to zpi

		.echo **FAIL  MVN  abi as zeropage

		.assume addr:zeropage
		mvn 	($4365)
		.assume addr:zeropage
		mvn 	(fwd16)
		.assume addr:zeropage
		mvn 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  MVN  abi as long

		.assume addr:long
		mvn 	($4365)
		.assume addr:long
		mvn 	(fwd16)
		.assume addr:long
		mvn 	(bak16)

; checking MVN abx

; abx cannot be forced to zpx

		.echo **FAIL  MVN  abx as zeropage

		.assume addr:zeropage
		mvn 	$4365,X
		.assume addr:zeropage
		mvn 	fwd16,X
		.assume addr:zeropage
		mvn 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  MVN  abx as long

		.assume addr:long
		mvn 	$4365,X
		.assume addr:long
		mvn 	fwd16,X
		.assume addr:long
		mvn 	bak16,X

; checking MVN abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  MVN  abxi as zeropage

		.assume addr:zeropage
		mvn 	($4365,X)
		.assume addr:zeropage
		mvn 	(fwd16,X)
		.assume addr:zeropage
		mvn 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  MVN  abxi as long

		.assume addr:long
		mvn 	($4365,X)
		.assume addr:long
		mvn 	(fwd16,X)
		.assume addr:long
		mvn 	(bak16,X)

; checking MVN aby

; aby cannot be forced to zpy

		.echo **FAIL  MVN  aby as zeropage

		.assume addr:zeropage
		mvn 	$4365,Y
		.assume addr:zeropage
		mvn 	fwd16,Y
		.assume addr:zeropage
		mvn 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  MVN  aby as long

		.assume addr:long
		mvn 	$4365,Y
		.assume addr:long
		mvn 	fwd16,Y
		.assume addr:long
		mvn 	bak16,Y

; checking MVN acc

; absolute is not forcible

		.echo **FAIL  MVN  acc as absolute

		.assume addr:absolute
		mvn 	A
		.assume addr:absolute
		mvn 	a

; zeropage is not forcible

		.echo **FAIL  MVN  acc as zeropage

		.assume addr:zeropage
		mvn 	A
		.assume addr:zeropage
		mvn 	a

; long is not forcible

		.echo **FAIL  MVN  acc as long

		.assume addr:long
		mvn 	A
		.assume addr:long
		mvn 	a

; checking MVN bmv

; absolute is not forcible

		.echo **FAIL  MVN  bmv as absolute

		.assume addr:absolute
		mvn 	#bak08, #fwd08
		.assume addr:absolute
		mvn 	bak24, fwd24
		.assume addr:absolute
		mvn 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  MVN  bmv as zeropage

		.assume addr:zeropage
		mvn 	#bak08, #fwd08
		.assume addr:zeropage
		mvn 	bak24, fwd24
		.assume addr:zeropage
		mvn 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  MVN  bmv as long

		.assume addr:long
		mvn 	#bak08, #fwd08
		.assume addr:long
		mvn 	bak24, fwd24
		.assume addr:long
		mvn 	#bak08, fwd24

; checking MVN imm

; absolute is not forcible

		.echo **FAIL  MVN  imm as absolute

		.assume addr:absolute
		mvn 	#$32
		.assume addr:absolute
		mvn 	#bak08
		.assume addr:absolute
		mvn 	#fwd08

; zeropage is not forcible

		.echo **FAIL  MVN  imm as zeropage

		.assume addr:zeropage
		mvn 	#$32
		.assume addr:zeropage
		mvn 	#bak08
		.assume addr:zeropage
		mvn 	#fwd08

; long is not forcible

		.echo **FAIL  MVN  imm as long

		.assume addr:long
		mvn 	#$32
		.assume addr:long
		mvn 	#bak08
		.assume addr:long
		mvn 	#fwd08

; checking MVN imp

; absolute is not forcible

		.echo **FAIL  MVN  imp as absolute

		.assume addr:absolute
		mvn 

; zeropage is not forcible

		.echo **FAIL  MVN  imp as zeropage

		.assume addr:zeropage
		mvn 

; long is not forcible

		.echo **FAIL  MVN  imp as long

		.assume addr:long
		mvn 

; checking MVN lab

; lab cannot be forced to ab

		.echo **FAIL  MVN  lab as absolute

		.assume addr:absolute
		mvn 	$547698
		.assume addr:absolute
		mvn 	bak24
		.assume addr:absolute
		mvn 	fwd24

; lab cannot be forced to zp

		.echo **FAIL  MVN  lab as zeropage

		.assume addr:zeropage
		mvn 	$547698
		.assume addr:zeropage
		mvn 	bak24
		.assume addr:zeropage
		mvn 	fwd24

; checking MVN labi

; labi cannot be forced to abi

		.echo **FAIL  MVN  labi as absolute

		.assume addr:absolute
		mvn 	[$4365]
		.assume addr:absolute
		mvn 	[fwd16]
		.assume addr:absolute
		mvn 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  MVN  labi as zeropage

		.assume addr:zeropage
		mvn 	[$4365]
		.assume addr:zeropage
		mvn 	[fwd16]
		.assume addr:zeropage
		mvn 	[bak16]

; checking MVN labx

; labx cannot be forced to abx

		.echo **FAIL  MVN  labx as absolute

		.assume addr:absolute
		mvn 	$547698,x
		.assume addr:absolute
		mvn 	bak24,x
		.assume addr:absolute
		mvn 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  MVN  labx as zeropage

		.assume addr:zeropage
		mvn 	$547698,x
		.assume addr:zeropage
		mvn 	bak24,x
		.assume addr:zeropage
		mvn 	fwd24,x

; checking MVN lpcr

; lpcr cannot be forced to @

		.echo **FAIL  MVN  lpcr as absolute

		.assume addr:absolute
		mvn 	:+
		.assume addr:absolute
		mvn 	-
		.assume addr:absolute
		mvn 	+
		.assume addr:absolute
		mvn 	:-

; lpcr cannot be forced to @

		.echo **FAIL  MVN  lpcr as zeropage

		.assume addr:zeropage
		mvn 	:+
		.assume addr:zeropage
		mvn 	-
		.assume addr:zeropage
		mvn 	+
		.assume addr:zeropage
		mvn 	:-

; lpcr cannot be forced to @

		.echo **FAIL  MVN  lpcr as long

		.assume addr:long
		mvn 	:+
		.assume addr:long
		mvn 	-
		.assume addr:long
		mvn 	+
		.assume addr:long
		mvn 	:-

; checking MVN lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  MVN  lzpi as absolute

		.assume addr:absolute
		mvn 	[$32]
		.assume addr:absolute
		mvn 	[bak08]
		.assume addr:absolute
		mvn 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  MVN  lzpi as zeropage

		.assume addr:zeropage
		mvn 	[$32]
		.assume addr:zeropage
		mvn 	[bak08]
		.assume addr:zeropage
		mvn 	[fwd08]

; checking MVN lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  MVN  lzpiy as absolute

		.assume addr:absolute
		mvn 	[$32],Y
		.assume addr:absolute
		mvn 	[bak08],Y
		.assume addr:absolute
		mvn 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  MVN  lzpiy as zeropage

		.assume addr:zeropage
		mvn 	[$32],Y
		.assume addr:zeropage
		mvn 	[bak08],Y
		.assume addr:zeropage
		mvn 	[fwd08],Y

; checking MVN pcr

; pcr cannot be forced to @

		.echo **FAIL  MVN  pcr as absolute

		.assume addr:absolute
		mvn 	:+
		.assume addr:absolute
		mvn 	-
		.assume addr:absolute
		mvn 	+
		.assume addr:absolute
		mvn 	:-

; pcr cannot be forced to @

		.echo **FAIL  MVN  pcr as zeropage

		.assume addr:zeropage
		mvn 	:+
		.assume addr:zeropage
		mvn 	-
		.assume addr:zeropage
		mvn 	+
		.assume addr:zeropage
		mvn 	:-

; pcr cannot be forced to @

		.echo **FAIL  MVN  pcr as long

		.assume addr:long
		mvn 	:+
		.assume addr:long
		mvn 	-
		.assume addr:long
		mvn 	+
		.assume addr:long
		mvn 	:-

; checking MVN sr

; absolute is not forcible

		.echo **FAIL  MVN  sr as absolute

		.assume addr:absolute
		mvn 	$32,S
		.assume addr:absolute
		mvn 	bak08,S
		.assume addr:absolute
		mvn 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  MVN  sr as zeropage

		.assume addr:zeropage
		mvn 	$32,S
		.assume addr:zeropage
		mvn 	bak08,S
		.assume addr:zeropage
		mvn 	fwd08,S

; long is not forcible

		.echo **FAIL  MVN  sr as long

		.assume addr:long
		mvn 	$32,S
		.assume addr:long
		mvn 	bak08,S
		.assume addr:long
		mvn 	fwd08,S

; checking MVN sriy

; absolute is not forcible

		.echo **FAIL  MVN  sriy as absolute

		.assume addr:absolute
		mvn 	($32,S),Y
		.assume addr:absolute
		mvn 	(bak08,S),Y
		.assume addr:absolute
		mvn 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  MVN  sriy as zeropage

		.assume addr:zeropage
		mvn 	($32,S),Y
		.assume addr:zeropage
		mvn 	(bak08,S),Y
		.assume addr:zeropage
		mvn 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  MVN  sriy as long

		.assume addr:long
		mvn 	($32,S),Y
		.assume addr:long
		mvn 	(bak08,S),Y
		.assume addr:long
		mvn 	(fwd08,S),Y

; checking MVN zp

; zp cannot be forced to ab

		.echo **FAIL  MVN  zp as absolute

		.assume addr:absolute
		mvn 	$32
		.assume addr:absolute
		mvn 	bak08
		.assume addr:absolute
		mvn 	fwd08

; zp cannot be forced to lab

		.echo **FAIL  MVN  zp as long

		.assume addr:long
		mvn 	$32
		.assume addr:long
		mvn 	bak08
		.assume addr:long
		mvn 	fwd08

; checking MVN zpi

; zpi cannot be forced to abi

		.echo **FAIL  MVN  zpi as absolute

		.assume addr:absolute
		mvn 	($32)
		.assume addr:absolute
		mvn 	(bak08)
		.assume addr:absolute
		mvn 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  MVN  zpi as long

		.assume addr:long
		mvn 	($32)
		.assume addr:long
		mvn 	(bak08)
		.assume addr:long
		mvn 	(fwd08)

; checking MVN zpiy

; zpiy cannot be forced to @

		.echo **FAIL  MVN  zpiy as absolute

		.assume addr:absolute
		mvn 	($32),y
		.assume addr:absolute
		mvn 	(bak08),y
		.assume addr:absolute
		mvn 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  MVN  zpiy as long

		.assume addr:long
		mvn 	($32),y
		.assume addr:long
		mvn 	(bak08),y
		.assume addr:long
		mvn 	(fwd08),y

; checking MVN zpx

; zpx cannot be forced to abx

		.echo **FAIL  MVN  zpx as absolute

		.assume addr:absolute
		mvn 	$32,x
		.assume addr:absolute
		mvn 	bak08,x
		.assume addr:absolute
		mvn 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  MVN  zpx as long

		.assume addr:long
		mvn 	$32,x
		.assume addr:long
		mvn 	bak08,x
		.assume addr:long
		mvn 	fwd08,x

; checking MVN zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  MVN  zpxi as absolute

		.assume addr:absolute
		mvn 	($32,x)
		.assume addr:absolute
		mvn 	(bak08,x)
		.assume addr:absolute
		mvn 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  MVN  zpxi as long

		.assume addr:long
		mvn 	($32,x)
		.assume addr:long
		mvn 	(bak08,x)
		.assume addr:long
		mvn 	(fwd08,x)

; checking MVN zpy

; zpy cannot be forced to aby

		.echo **FAIL  MVN  zpy as absolute

		.assume addr:absolute
		mvn 	$32,y
		.assume addr:absolute
		mvn 	bak08,y
		.assume addr:absolute
		mvn 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  MVN  zpy as long

		.assume addr:long
		mvn 	$32,y
		.assume addr:long
		mvn 	bak08,y
		.assume addr:long
		mvn 	fwd08,y


; -------------------------------


; -------------------------------

		; check PEA
		; 1 mnemonics with modes ['ab', 'imm']

; checking PEA ab

; ab cannot be forced to zp

		.echo **FAIL  PEA  ab as zeropage

		.assume addr:zeropage
		pea 	$4365
		.assume addr:zeropage
		pea 	fwd16
		.assume addr:zeropage
		pea 	bak16

; ab cannot be forced to lab

		.echo **FAIL  PEA  ab as long

		.assume addr:long
		pea 	$4365
		.assume addr:long
		pea 	fwd16
		.assume addr:long
		pea 	bak16

; checking PEA abi

; abi cannot be forced to zpi

		.echo **FAIL  PEA  abi as zeropage

		.assume addr:zeropage
		pea 	($4365)
		.assume addr:zeropage
		pea 	(fwd16)
		.assume addr:zeropage
		pea 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  PEA  abi as long

		.assume addr:long
		pea 	($4365)
		.assume addr:long
		pea 	(fwd16)
		.assume addr:long
		pea 	(bak16)

; checking PEA abx

; abx cannot be forced to zpx

		.echo **FAIL  PEA  abx as zeropage

		.assume addr:zeropage
		pea 	$4365,X
		.assume addr:zeropage
		pea 	fwd16,X
		.assume addr:zeropage
		pea 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  PEA  abx as long

		.assume addr:long
		pea 	$4365,X
		.assume addr:long
		pea 	fwd16,X
		.assume addr:long
		pea 	bak16,X

; checking PEA abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  PEA  abxi as zeropage

		.assume addr:zeropage
		pea 	($4365,X)
		.assume addr:zeropage
		pea 	(fwd16,X)
		.assume addr:zeropage
		pea 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  PEA  abxi as long

		.assume addr:long
		pea 	($4365,X)
		.assume addr:long
		pea 	(fwd16,X)
		.assume addr:long
		pea 	(bak16,X)

; checking PEA aby

; aby cannot be forced to zpy

		.echo **FAIL  PEA  aby as zeropage

		.assume addr:zeropage
		pea 	$4365,Y
		.assume addr:zeropage
		pea 	fwd16,Y
		.assume addr:zeropage
		pea 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  PEA  aby as long

		.assume addr:long
		pea 	$4365,Y
		.assume addr:long
		pea 	fwd16,Y
		.assume addr:long
		pea 	bak16,Y

; checking PEA acc

; absolute is not forcible

		.echo **FAIL  PEA  acc as absolute

		.assume addr:absolute
		pea 	A
		.assume addr:absolute
		pea 	a

; zeropage is not forcible

		.echo **FAIL  PEA  acc as zeropage

		.assume addr:zeropage
		pea 	A
		.assume addr:zeropage
		pea 	a

; long is not forcible

		.echo **FAIL  PEA  acc as long

		.assume addr:long
		pea 	A
		.assume addr:long
		pea 	a

; checking PEA bmv

; absolute is not forcible

		.echo **FAIL  PEA  bmv as absolute

		.assume addr:absolute
		pea 	#bak08, #fwd08
		.assume addr:absolute
		pea 	bak24, fwd24
		.assume addr:absolute
		pea 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  PEA  bmv as zeropage

		.assume addr:zeropage
		pea 	#bak08, #fwd08
		.assume addr:zeropage
		pea 	bak24, fwd24
		.assume addr:zeropage
		pea 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  PEA  bmv as long

		.assume addr:long
		pea 	#bak08, #fwd08
		.assume addr:long
		pea 	bak24, fwd24
		.assume addr:long
		pea 	#bak08, fwd24

; checking PEA imm

; absolute is not forcible

		.echo **FAIL  PEA  imm as absolute

		.assume addr:absolute
		pea 	#$32
		.assume addr:absolute
		pea 	#bak08
		.assume addr:absolute
		pea 	#fwd08

; zeropage is not forcible

		.echo **FAIL  PEA  imm as zeropage

		.assume addr:zeropage
		pea 	#$32
		.assume addr:zeropage
		pea 	#bak08
		.assume addr:zeropage
		pea 	#fwd08

; long is not forcible

		.echo **FAIL  PEA  imm as long

		.assume addr:long
		pea 	#$32
		.assume addr:long
		pea 	#bak08
		.assume addr:long
		pea 	#fwd08

; checking PEA imp

; absolute is not forcible

		.echo **FAIL  PEA  imp as absolute

		.assume addr:absolute
		pea 

; zeropage is not forcible

		.echo **FAIL  PEA  imp as zeropage

		.assume addr:zeropage
		pea 

; long is not forcible

		.echo **FAIL  PEA  imp as long

		.assume addr:long
		pea 

; checking PEA lab

; lab cannot be forced to zp

		.echo **FAIL  PEA  lab as zeropage

		.assume addr:zeropage
		pea 	$547698
		.assume addr:zeropage
		pea 	bak24
		.assume addr:zeropage
		pea 	fwd24

; checking PEA labi

; labi cannot be forced to abi

		.echo **FAIL  PEA  labi as absolute

		.assume addr:absolute
		pea 	[$4365]
		.assume addr:absolute
		pea 	[fwd16]
		.assume addr:absolute
		pea 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  PEA  labi as zeropage

		.assume addr:zeropage
		pea 	[$4365]
		.assume addr:zeropage
		pea 	[fwd16]
		.assume addr:zeropage
		pea 	[bak16]

; checking PEA labx

; labx cannot be forced to abx

		.echo **FAIL  PEA  labx as absolute

		.assume addr:absolute
		pea 	$547698,x
		.assume addr:absolute
		pea 	bak24,x
		.assume addr:absolute
		pea 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  PEA  labx as zeropage

		.assume addr:zeropage
		pea 	$547698,x
		.assume addr:zeropage
		pea 	bak24,x
		.assume addr:zeropage
		pea 	fwd24,x

; checking PEA lpcr

; lpcr cannot be forced to @

		.echo **FAIL  PEA  lpcr as zeropage

		.assume addr:zeropage
		pea 	:+
		.assume addr:zeropage
		pea 	-
		.assume addr:zeropage
		pea 	+
		.assume addr:zeropage
		pea 	:-

; lpcr cannot be forced to @

		.echo **FAIL  PEA  lpcr as long

		.assume addr:long
		pea 	:+
		.assume addr:long
		pea 	-
		.assume addr:long
		pea 	+
		.assume addr:long
		pea 	:-

; checking PEA lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  PEA  lzpi as absolute

		.assume addr:absolute
		pea 	[$32]
		.assume addr:absolute
		pea 	[bak08]
		.assume addr:absolute
		pea 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  PEA  lzpi as zeropage

		.assume addr:zeropage
		pea 	[$32]
		.assume addr:zeropage
		pea 	[bak08]
		.assume addr:zeropage
		pea 	[fwd08]

; checking PEA lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  PEA  lzpiy as absolute

		.assume addr:absolute
		pea 	[$32],Y
		.assume addr:absolute
		pea 	[bak08],Y
		.assume addr:absolute
		pea 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  PEA  lzpiy as zeropage

		.assume addr:zeropage
		pea 	[$32],Y
		.assume addr:zeropage
		pea 	[bak08],Y
		.assume addr:zeropage
		pea 	[fwd08],Y

; checking PEA pcr

; pcr cannot be forced to @

		.echo **FAIL  PEA  pcr as zeropage

		.assume addr:zeropage
		pea 	:+
		.assume addr:zeropage
		pea 	-
		.assume addr:zeropage
		pea 	+
		.assume addr:zeropage
		pea 	:-

; pcr cannot be forced to @

		.echo **FAIL  PEA  pcr as long

		.assume addr:long
		pea 	:+
		.assume addr:long
		pea 	-
		.assume addr:long
		pea 	+
		.assume addr:long
		pea 	:-

; checking PEA sr

; absolute is not forcible

		.echo **FAIL  PEA  sr as absolute

		.assume addr:absolute
		pea 	$32,S
		.assume addr:absolute
		pea 	bak08,S
		.assume addr:absolute
		pea 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  PEA  sr as zeropage

		.assume addr:zeropage
		pea 	$32,S
		.assume addr:zeropage
		pea 	bak08,S
		.assume addr:zeropage
		pea 	fwd08,S

; long is not forcible

		.echo **FAIL  PEA  sr as long

		.assume addr:long
		pea 	$32,S
		.assume addr:long
		pea 	bak08,S
		.assume addr:long
		pea 	fwd08,S

; checking PEA sriy

; absolute is not forcible

		.echo **FAIL  PEA  sriy as absolute

		.assume addr:absolute
		pea 	($32,S),Y
		.assume addr:absolute
		pea 	(bak08,S),Y
		.assume addr:absolute
		pea 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  PEA  sriy as zeropage

		.assume addr:zeropage
		pea 	($32,S),Y
		.assume addr:zeropage
		pea 	(bak08,S),Y
		.assume addr:zeropage
		pea 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  PEA  sriy as long

		.assume addr:long
		pea 	($32,S),Y
		.assume addr:long
		pea 	(bak08,S),Y
		.assume addr:long
		pea 	(fwd08,S),Y

; checking PEA zp

; zp cannot be forced to lab

		.echo **FAIL  PEA  zp as long

		.assume addr:long
		pea 	$32
		.assume addr:long
		pea 	bak08
		.assume addr:long
		pea 	fwd08

; checking PEA zpi

; zpi cannot be forced to abi

		.echo **FAIL  PEA  zpi as absolute

		.assume addr:absolute
		pea 	($32)
		.assume addr:absolute
		pea 	(bak08)
		.assume addr:absolute
		pea 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  PEA  zpi as long

		.assume addr:long
		pea 	($32)
		.assume addr:long
		pea 	(bak08)
		.assume addr:long
		pea 	(fwd08)

; checking PEA zpiy

; zpiy cannot be forced to @

		.echo **FAIL  PEA  zpiy as absolute

		.assume addr:absolute
		pea 	($32),y
		.assume addr:absolute
		pea 	(bak08),y
		.assume addr:absolute
		pea 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  PEA  zpiy as long

		.assume addr:long
		pea 	($32),y
		.assume addr:long
		pea 	(bak08),y
		.assume addr:long
		pea 	(fwd08),y

; checking PEA zpx

; zpx cannot be forced to abx

		.echo **FAIL  PEA  zpx as absolute

		.assume addr:absolute
		pea 	$32,x
		.assume addr:absolute
		pea 	bak08,x
		.assume addr:absolute
		pea 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  PEA  zpx as long

		.assume addr:long
		pea 	$32,x
		.assume addr:long
		pea 	bak08,x
		.assume addr:long
		pea 	fwd08,x

; checking PEA zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  PEA  zpxi as absolute

		.assume addr:absolute
		pea 	($32,x)
		.assume addr:absolute
		pea 	(bak08,x)
		.assume addr:absolute
		pea 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  PEA  zpxi as long

		.assume addr:long
		pea 	($32,x)
		.assume addr:long
		pea 	(bak08,x)
		.assume addr:long
		pea 	(fwd08,x)

; checking PEA zpy

; zpy cannot be forced to aby

		.echo **FAIL  PEA  zpy as absolute

		.assume addr:absolute
		pea 	$32,y
		.assume addr:absolute
		pea 	bak08,y
		.assume addr:absolute
		pea 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  PEA  zpy as long

		.assume addr:long
		pea 	$32,y
		.assume addr:long
		pea 	bak08,y
		.assume addr:long
		pea 	fwd08,y


; -------------------------------


; -------------------------------

		; check PEI
		; 1 mnemonics with modes ['zp', 'zpi']

; checking PEI ab

; ab cannot be forced to lab

		.echo **FAIL  PEI  ab as long

		.assume addr:long
		pei 	$4365
		.assume addr:long
		pei 	fwd16
		.assume addr:long
		pei 	bak16

; checking PEI abi

; abi cannot be forced to labi

		.echo **FAIL  PEI  abi as long

		.assume addr:long
		pei 	($4365)
		.assume addr:long
		pei 	(fwd16)
		.assume addr:long
		pei 	(bak16)

; checking PEI abx

; abx cannot be forced to zpx

		.echo **FAIL  PEI  abx as zeropage

		.assume addr:zeropage
		pei 	$4365,X
		.assume addr:zeropage
		pei 	fwd16,X
		.assume addr:zeropage
		pei 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  PEI  abx as long

		.assume addr:long
		pei 	$4365,X
		.assume addr:long
		pei 	fwd16,X
		.assume addr:long
		pei 	bak16,X

; checking PEI abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  PEI  abxi as zeropage

		.assume addr:zeropage
		pei 	($4365,X)
		.assume addr:zeropage
		pei 	(fwd16,X)
		.assume addr:zeropage
		pei 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  PEI  abxi as long

		.assume addr:long
		pei 	($4365,X)
		.assume addr:long
		pei 	(fwd16,X)
		.assume addr:long
		pei 	(bak16,X)

; checking PEI aby

; aby cannot be forced to zpy

		.echo **FAIL  PEI  aby as zeropage

		.assume addr:zeropage
		pei 	$4365,Y
		.assume addr:zeropage
		pei 	fwd16,Y
		.assume addr:zeropage
		pei 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  PEI  aby as long

		.assume addr:long
		pei 	$4365,Y
		.assume addr:long
		pei 	fwd16,Y
		.assume addr:long
		pei 	bak16,Y

; checking PEI acc

; absolute is not forcible

		.echo **FAIL  PEI  acc as absolute

		.assume addr:absolute
		pei 	A
		.assume addr:absolute
		pei 	a

; zeropage is not forcible

		.echo **FAIL  PEI  acc as zeropage

		.assume addr:zeropage
		pei 	A
		.assume addr:zeropage
		pei 	a

; long is not forcible

		.echo **FAIL  PEI  acc as long

		.assume addr:long
		pei 	A
		.assume addr:long
		pei 	a

; checking PEI bmv

; absolute is not forcible

		.echo **FAIL  PEI  bmv as absolute

		.assume addr:absolute
		pei 	#bak08, #fwd08
		.assume addr:absolute
		pei 	bak24, fwd24
		.assume addr:absolute
		pei 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  PEI  bmv as zeropage

		.assume addr:zeropage
		pei 	#bak08, #fwd08
		.assume addr:zeropage
		pei 	bak24, fwd24
		.assume addr:zeropage
		pei 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  PEI  bmv as long

		.assume addr:long
		pei 	#bak08, #fwd08
		.assume addr:long
		pei 	bak24, fwd24
		.assume addr:long
		pei 	#bak08, fwd24

; checking PEI imm

; absolute is not forcible

		.echo **FAIL  PEI  imm as absolute

		.assume addr:absolute
		pei 	#$32
		.assume addr:absolute
		pei 	#bak08
		.assume addr:absolute
		pei 	#fwd08

; zeropage is not forcible

		.echo **FAIL  PEI  imm as zeropage

		.assume addr:zeropage
		pei 	#$32
		.assume addr:zeropage
		pei 	#bak08
		.assume addr:zeropage
		pei 	#fwd08

; long is not forcible

		.echo **FAIL  PEI  imm as long

		.assume addr:long
		pei 	#$32
		.assume addr:long
		pei 	#bak08
		.assume addr:long
		pei 	#fwd08

; checking PEI imp

; absolute is not forcible

		.echo **FAIL  PEI  imp as absolute

		.assume addr:absolute
		pei 

; zeropage is not forcible

		.echo **FAIL  PEI  imp as zeropage

		.assume addr:zeropage
		pei 

; long is not forcible

		.echo **FAIL  PEI  imp as long

		.assume addr:long
		pei 

; checking PEI lab

; lab cannot be forced to ab

		.echo **FAIL  PEI  lab as absolute

		.assume addr:absolute
		pei 	$547698
		.assume addr:absolute
		pei 	bak24
		.assume addr:absolute
		pei 	fwd24

; checking PEI labi

; labi cannot be forced to abi

		.echo **FAIL  PEI  labi as absolute

		.assume addr:absolute
		pei 	[$4365]
		.assume addr:absolute
		pei 	[fwd16]
		.assume addr:absolute
		pei 	[bak16]

; checking PEI labx

; labx cannot be forced to abx

		.echo **FAIL  PEI  labx as absolute

		.assume addr:absolute
		pei 	$547698,x
		.assume addr:absolute
		pei 	bak24,x
		.assume addr:absolute
		pei 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  PEI  labx as zeropage

		.assume addr:zeropage
		pei 	$547698,x
		.assume addr:zeropage
		pei 	bak24,x
		.assume addr:zeropage
		pei 	fwd24,x

; checking PEI lpcr

; lpcr cannot be forced to @

		.echo **FAIL  PEI  lpcr as absolute

		.assume addr:absolute
		pei 	:+
		.assume addr:absolute
		pei 	-
		.assume addr:absolute
		pei 	+
		.assume addr:absolute
		pei 	:-

; lpcr cannot be forced to @

		.echo **FAIL  PEI  lpcr as long

		.assume addr:long
		pei 	:+
		.assume addr:long
		pei 	-
		.assume addr:long
		pei 	+
		.assume addr:long
		pei 	:-

; checking PEI lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  PEI  lzpi as absolute

		.assume addr:absolute
		pei 	[$32]
		.assume addr:absolute
		pei 	[bak08]
		.assume addr:absolute
		pei 	[fwd08]

; checking PEI lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  PEI  lzpiy as absolute

		.assume addr:absolute
		pei 	[$32],Y
		.assume addr:absolute
		pei 	[bak08],Y
		.assume addr:absolute
		pei 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  PEI  lzpiy as zeropage

		.assume addr:zeropage
		pei 	[$32],Y
		.assume addr:zeropage
		pei 	[bak08],Y
		.assume addr:zeropage
		pei 	[fwd08],Y

; checking PEI pcr

; pcr cannot be forced to @

		.echo **FAIL  PEI  pcr as absolute

		.assume addr:absolute
		pei 	:+
		.assume addr:absolute
		pei 	-
		.assume addr:absolute
		pei 	+
		.assume addr:absolute
		pei 	:-

; pcr cannot be forced to @

		.echo **FAIL  PEI  pcr as long

		.assume addr:long
		pei 	:+
		.assume addr:long
		pei 	-
		.assume addr:long
		pei 	+
		.assume addr:long
		pei 	:-

; checking PEI sr

; absolute is not forcible

		.echo **FAIL  PEI  sr as absolute

		.assume addr:absolute
		pei 	$32,S
		.assume addr:absolute
		pei 	bak08,S
		.assume addr:absolute
		pei 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  PEI  sr as zeropage

		.assume addr:zeropage
		pei 	$32,S
		.assume addr:zeropage
		pei 	bak08,S
		.assume addr:zeropage
		pei 	fwd08,S

; long is not forcible

		.echo **FAIL  PEI  sr as long

		.assume addr:long
		pei 	$32,S
		.assume addr:long
		pei 	bak08,S
		.assume addr:long
		pei 	fwd08,S

; checking PEI sriy

; absolute is not forcible

		.echo **FAIL  PEI  sriy as absolute

		.assume addr:absolute
		pei 	($32,S),Y
		.assume addr:absolute
		pei 	(bak08,S),Y
		.assume addr:absolute
		pei 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  PEI  sriy as zeropage

		.assume addr:zeropage
		pei 	($32,S),Y
		.assume addr:zeropage
		pei 	(bak08,S),Y
		.assume addr:zeropage
		pei 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  PEI  sriy as long

		.assume addr:long
		pei 	($32,S),Y
		.assume addr:long
		pei 	(bak08,S),Y
		.assume addr:long
		pei 	(fwd08,S),Y

; checking PEI zp

; zp cannot be forced to ab

		.echo **FAIL  PEI  zp as absolute

		.assume addr:absolute
		pei 	$32
		.assume addr:absolute
		pei 	bak08
		.assume addr:absolute
		pei 	fwd08

; zp cannot be forced to lab

		.echo **FAIL  PEI  zp as long

		.assume addr:long
		pei 	$32
		.assume addr:long
		pei 	bak08
		.assume addr:long
		pei 	fwd08

; checking PEI zpi

; zpi cannot be forced to abi

		.echo **FAIL  PEI  zpi as absolute

		.assume addr:absolute
		pei 	($32)
		.assume addr:absolute
		pei 	(bak08)
		.assume addr:absolute
		pei 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  PEI  zpi as long

		.assume addr:long
		pei 	($32)
		.assume addr:long
		pei 	(bak08)
		.assume addr:long
		pei 	(fwd08)

; checking PEI zpiy

; zpiy cannot be forced to @

		.echo **FAIL  PEI  zpiy as absolute

		.assume addr:absolute
		pei 	($32),y
		.assume addr:absolute
		pei 	(bak08),y
		.assume addr:absolute
		pei 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  PEI  zpiy as long

		.assume addr:long
		pei 	($32),y
		.assume addr:long
		pei 	(bak08),y
		.assume addr:long
		pei 	(fwd08),y

; checking PEI zpx

; zpx cannot be forced to abx

		.echo **FAIL  PEI  zpx as absolute

		.assume addr:absolute
		pei 	$32,x
		.assume addr:absolute
		pei 	bak08,x
		.assume addr:absolute
		pei 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  PEI  zpx as long

		.assume addr:long
		pei 	$32,x
		.assume addr:long
		pei 	bak08,x
		.assume addr:long
		pei 	fwd08,x

; checking PEI zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  PEI  zpxi as absolute

		.assume addr:absolute
		pei 	($32,x)
		.assume addr:absolute
		pei 	(bak08,x)
		.assume addr:absolute
		pei 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  PEI  zpxi as long

		.assume addr:long
		pei 	($32,x)
		.assume addr:long
		pei 	(bak08,x)
		.assume addr:long
		pei 	(fwd08,x)

; checking PEI zpy

; zpy cannot be forced to aby

		.echo **FAIL  PEI  zpy as absolute

		.assume addr:absolute
		pei 	$32,y
		.assume addr:absolute
		pei 	bak08,y
		.assume addr:absolute
		pei 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  PEI  zpy as long

		.assume addr:long
		pei 	$32,y
		.assume addr:long
		pei 	bak08,y
		.assume addr:long
		pei 	fwd08,y


; -------------------------------


; -------------------------------

		; check REP
		; 2 mnemonics with modes ['imm']
		; SEP

; checking REP ab

; ab cannot be forced to zp

		.echo **FAIL  REP  ab as zeropage

		.assume addr:zeropage
		rep 	$4365
		.assume addr:zeropage
		rep 	fwd16
		.assume addr:zeropage
		rep 	bak16

; ab cannot be forced to lab

		.echo **FAIL  REP  ab as long

		.assume addr:long
		rep 	$4365
		.assume addr:long
		rep 	fwd16
		.assume addr:long
		rep 	bak16

; checking REP abi

; abi cannot be forced to zpi

		.echo **FAIL  REP  abi as zeropage

		.assume addr:zeropage
		rep 	($4365)
		.assume addr:zeropage
		rep 	(fwd16)
		.assume addr:zeropage
		rep 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  REP  abi as long

		.assume addr:long
		rep 	($4365)
		.assume addr:long
		rep 	(fwd16)
		.assume addr:long
		rep 	(bak16)

; checking REP abx

; abx cannot be forced to zpx

		.echo **FAIL  REP  abx as zeropage

		.assume addr:zeropage
		rep 	$4365,X
		.assume addr:zeropage
		rep 	fwd16,X
		.assume addr:zeropage
		rep 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  REP  abx as long

		.assume addr:long
		rep 	$4365,X
		.assume addr:long
		rep 	fwd16,X
		.assume addr:long
		rep 	bak16,X

; checking REP abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  REP  abxi as zeropage

		.assume addr:zeropage
		rep 	($4365,X)
		.assume addr:zeropage
		rep 	(fwd16,X)
		.assume addr:zeropage
		rep 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  REP  abxi as long

		.assume addr:long
		rep 	($4365,X)
		.assume addr:long
		rep 	(fwd16,X)
		.assume addr:long
		rep 	(bak16,X)

; checking REP aby

; aby cannot be forced to zpy

		.echo **FAIL  REP  aby as zeropage

		.assume addr:zeropage
		rep 	$4365,Y
		.assume addr:zeropage
		rep 	fwd16,Y
		.assume addr:zeropage
		rep 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  REP  aby as long

		.assume addr:long
		rep 	$4365,Y
		.assume addr:long
		rep 	fwd16,Y
		.assume addr:long
		rep 	bak16,Y

; checking REP acc

; absolute is not forcible

		.echo **FAIL  REP  acc as absolute

		.assume addr:absolute
		rep 	A
		.assume addr:absolute
		rep 	a

; zeropage is not forcible

		.echo **FAIL  REP  acc as zeropage

		.assume addr:zeropage
		rep 	A
		.assume addr:zeropage
		rep 	a

; long is not forcible

		.echo **FAIL  REP  acc as long

		.assume addr:long
		rep 	A
		.assume addr:long
		rep 	a

; checking REP bmv

; absolute is not forcible

		.echo **FAIL  REP  bmv as absolute

		.assume addr:absolute
		rep 	#bak08, #fwd08
		.assume addr:absolute
		rep 	bak24, fwd24
		.assume addr:absolute
		rep 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  REP  bmv as zeropage

		.assume addr:zeropage
		rep 	#bak08, #fwd08
		.assume addr:zeropage
		rep 	bak24, fwd24
		.assume addr:zeropage
		rep 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  REP  bmv as long

		.assume addr:long
		rep 	#bak08, #fwd08
		.assume addr:long
		rep 	bak24, fwd24
		.assume addr:long
		rep 	#bak08, fwd24

; checking REP imm

; absolute is not forcible

		.echo **FAIL  REP  imm as absolute

		.assume addr:absolute
		rep 	#$32
		.assume addr:absolute
		rep 	#bak08
		.assume addr:absolute
		rep 	#fwd08

; zeropage is not forcible

		.echo **FAIL  REP  imm as zeropage

		.assume addr:zeropage
		rep 	#$32
		.assume addr:zeropage
		rep 	#bak08
		.assume addr:zeropage
		rep 	#fwd08

; long is not forcible

		.echo **FAIL  REP  imm as long

		.assume addr:long
		rep 	#$32
		.assume addr:long
		rep 	#bak08
		.assume addr:long
		rep 	#fwd08

; checking REP imp

; absolute is not forcible

		.echo **FAIL  REP  imp as absolute

		.assume addr:absolute
		rep 

; zeropage is not forcible

		.echo **FAIL  REP  imp as zeropage

		.assume addr:zeropage
		rep 

; long is not forcible

		.echo **FAIL  REP  imp as long

		.assume addr:long
		rep 

; checking REP lab

; lab cannot be forced to ab

		.echo **FAIL  REP  lab as absolute

		.assume addr:absolute
		rep 	$547698
		.assume addr:absolute
		rep 	bak24
		.assume addr:absolute
		rep 	fwd24

; lab cannot be forced to zp

		.echo **FAIL  REP  lab as zeropage

		.assume addr:zeropage
		rep 	$547698
		.assume addr:zeropage
		rep 	bak24
		.assume addr:zeropage
		rep 	fwd24

; checking REP labi

; labi cannot be forced to abi

		.echo **FAIL  REP  labi as absolute

		.assume addr:absolute
		rep 	[$4365]
		.assume addr:absolute
		rep 	[fwd16]
		.assume addr:absolute
		rep 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  REP  labi as zeropage

		.assume addr:zeropage
		rep 	[$4365]
		.assume addr:zeropage
		rep 	[fwd16]
		.assume addr:zeropage
		rep 	[bak16]

; checking REP labx

; labx cannot be forced to abx

		.echo **FAIL  REP  labx as absolute

		.assume addr:absolute
		rep 	$547698,x
		.assume addr:absolute
		rep 	bak24,x
		.assume addr:absolute
		rep 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  REP  labx as zeropage

		.assume addr:zeropage
		rep 	$547698,x
		.assume addr:zeropage
		rep 	bak24,x
		.assume addr:zeropage
		rep 	fwd24,x

; checking REP lpcr

; lpcr cannot be forced to @

		.echo **FAIL  REP  lpcr as absolute

		.assume addr:absolute
		rep 	:+
		.assume addr:absolute
		rep 	-
		.assume addr:absolute
		rep 	+
		.assume addr:absolute
		rep 	:-

; lpcr cannot be forced to @

		.echo **FAIL  REP  lpcr as zeropage

		.assume addr:zeropage
		rep 	:+
		.assume addr:zeropage
		rep 	-
		.assume addr:zeropage
		rep 	+
		.assume addr:zeropage
		rep 	:-

; lpcr cannot be forced to @

		.echo **FAIL  REP  lpcr as long

		.assume addr:long
		rep 	:+
		.assume addr:long
		rep 	-
		.assume addr:long
		rep 	+
		.assume addr:long
		rep 	:-

; checking REP lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  REP  lzpi as absolute

		.assume addr:absolute
		rep 	[$32]
		.assume addr:absolute
		rep 	[bak08]
		.assume addr:absolute
		rep 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  REP  lzpi as zeropage

		.assume addr:zeropage
		rep 	[$32]
		.assume addr:zeropage
		rep 	[bak08]
		.assume addr:zeropage
		rep 	[fwd08]

; checking REP lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  REP  lzpiy as absolute

		.assume addr:absolute
		rep 	[$32],Y
		.assume addr:absolute
		rep 	[bak08],Y
		.assume addr:absolute
		rep 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  REP  lzpiy as zeropage

		.assume addr:zeropage
		rep 	[$32],Y
		.assume addr:zeropage
		rep 	[bak08],Y
		.assume addr:zeropage
		rep 	[fwd08],Y

; checking REP pcr

; pcr cannot be forced to @

		.echo **FAIL  REP  pcr as absolute

		.assume addr:absolute
		rep 	:+
		.assume addr:absolute
		rep 	-
		.assume addr:absolute
		rep 	+
		.assume addr:absolute
		rep 	:-

; pcr cannot be forced to @

		.echo **FAIL  REP  pcr as zeropage

		.assume addr:zeropage
		rep 	:+
		.assume addr:zeropage
		rep 	-
		.assume addr:zeropage
		rep 	+
		.assume addr:zeropage
		rep 	:-

; pcr cannot be forced to @

		.echo **FAIL  REP  pcr as long

		.assume addr:long
		rep 	:+
		.assume addr:long
		rep 	-
		.assume addr:long
		rep 	+
		.assume addr:long
		rep 	:-

; checking REP sr

; absolute is not forcible

		.echo **FAIL  REP  sr as absolute

		.assume addr:absolute
		rep 	$32,S
		.assume addr:absolute
		rep 	bak08,S
		.assume addr:absolute
		rep 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  REP  sr as zeropage

		.assume addr:zeropage
		rep 	$32,S
		.assume addr:zeropage
		rep 	bak08,S
		.assume addr:zeropage
		rep 	fwd08,S

; long is not forcible

		.echo **FAIL  REP  sr as long

		.assume addr:long
		rep 	$32,S
		.assume addr:long
		rep 	bak08,S
		.assume addr:long
		rep 	fwd08,S

; checking REP sriy

; absolute is not forcible

		.echo **FAIL  REP  sriy as absolute

		.assume addr:absolute
		rep 	($32,S),Y
		.assume addr:absolute
		rep 	(bak08,S),Y
		.assume addr:absolute
		rep 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  REP  sriy as zeropage

		.assume addr:zeropage
		rep 	($32,S),Y
		.assume addr:zeropage
		rep 	(bak08,S),Y
		.assume addr:zeropage
		rep 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  REP  sriy as long

		.assume addr:long
		rep 	($32,S),Y
		.assume addr:long
		rep 	(bak08,S),Y
		.assume addr:long
		rep 	(fwd08,S),Y

; checking REP zp

; zp cannot be forced to ab

		.echo **FAIL  REP  zp as absolute

		.assume addr:absolute
		rep 	$32
		.assume addr:absolute
		rep 	bak08
		.assume addr:absolute
		rep 	fwd08

; zp cannot be forced to lab

		.echo **FAIL  REP  zp as long

		.assume addr:long
		rep 	$32
		.assume addr:long
		rep 	bak08
		.assume addr:long
		rep 	fwd08

; checking REP zpi

; zpi cannot be forced to abi

		.echo **FAIL  REP  zpi as absolute

		.assume addr:absolute
		rep 	($32)
		.assume addr:absolute
		rep 	(bak08)
		.assume addr:absolute
		rep 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  REP  zpi as long

		.assume addr:long
		rep 	($32)
		.assume addr:long
		rep 	(bak08)
		.assume addr:long
		rep 	(fwd08)

; checking REP zpiy

; zpiy cannot be forced to @

		.echo **FAIL  REP  zpiy as absolute

		.assume addr:absolute
		rep 	($32),y
		.assume addr:absolute
		rep 	(bak08),y
		.assume addr:absolute
		rep 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  REP  zpiy as long

		.assume addr:long
		rep 	($32),y
		.assume addr:long
		rep 	(bak08),y
		.assume addr:long
		rep 	(fwd08),y

; checking REP zpx

; zpx cannot be forced to abx

		.echo **FAIL  REP  zpx as absolute

		.assume addr:absolute
		rep 	$32,x
		.assume addr:absolute
		rep 	bak08,x
		.assume addr:absolute
		rep 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  REP  zpx as long

		.assume addr:long
		rep 	$32,x
		.assume addr:long
		rep 	bak08,x
		.assume addr:long
		rep 	fwd08,x

; checking REP zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  REP  zpxi as absolute

		.assume addr:absolute
		rep 	($32,x)
		.assume addr:absolute
		rep 	(bak08,x)
		.assume addr:absolute
		rep 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  REP  zpxi as long

		.assume addr:long
		rep 	($32,x)
		.assume addr:long
		rep 	(bak08,x)
		.assume addr:long
		rep 	(fwd08,x)

; checking REP zpy

; zpy cannot be forced to aby

		.echo **FAIL  REP  zpy as absolute

		.assume addr:absolute
		rep 	$32,y
		.assume addr:absolute
		rep 	bak08,y
		.assume addr:absolute
		rep 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  REP  zpy as long

		.assume addr:long
		rep 	$32,y
		.assume addr:long
		rep 	bak08,y
		.assume addr:long
		rep 	fwd08,y


; -------------------------------


; -------------------------------

		; check STA
		; 1 mnemonics with modes ['ab', 'abx', 'aby', 'lab', 'labx', 'lzpi', 'lzpiy', 'sr', 'sriy', 'zp', 'zpi', 'zpiy', 'zpx', 'zpxi']

; checking STA ab

; checking STA abi

; abi cannot be forced to labi

		.echo **FAIL  STA  abi as long

		.assume addr:long
		sta 	($4365)
		.assume addr:long
		sta 	(fwd16)
		.assume addr:long
		sta 	(bak16)

; checking STA abx

; checking STA abxi

; abxi cannot be forced to @

		.echo **FAIL  STA  abxi as long

		.assume addr:long
		sta 	($4365,X)
		.assume addr:long
		sta 	(fwd16,X)
		.assume addr:long
		sta 	(bak16,X)

; checking STA aby

; aby cannot be forced to zpy

		.echo **FAIL  STA  aby as zeropage

		.assume addr:zeropage
		sta 	$4365,Y
		.assume addr:zeropage
		sta 	fwd16,Y
		.assume addr:zeropage
		sta 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  STA  aby as long

		.assume addr:long
		sta 	$4365,Y
		.assume addr:long
		sta 	fwd16,Y
		.assume addr:long
		sta 	bak16,Y

; checking STA acc

; absolute is not forcible

		.echo **FAIL  STA  acc as absolute

		.assume addr:absolute
		sta 	A
		.assume addr:absolute
		sta 	a

; zeropage is not forcible

		.echo **FAIL  STA  acc as zeropage

		.assume addr:zeropage
		sta 	A
		.assume addr:zeropage
		sta 	a

; long is not forcible

		.echo **FAIL  STA  acc as long

		.assume addr:long
		sta 	A
		.assume addr:long
		sta 	a

; checking STA bmv

; absolute is not forcible

		.echo **FAIL  STA  bmv as absolute

		.assume addr:absolute
		sta 	#bak08, #fwd08
		.assume addr:absolute
		sta 	bak24, fwd24
		.assume addr:absolute
		sta 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  STA  bmv as zeropage

		.assume addr:zeropage
		sta 	#bak08, #fwd08
		.assume addr:zeropage
		sta 	bak24, fwd24
		.assume addr:zeropage
		sta 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  STA  bmv as long

		.assume addr:long
		sta 	#bak08, #fwd08
		.assume addr:long
		sta 	bak24, fwd24
		.assume addr:long
		sta 	#bak08, fwd24

; checking STA imm

; absolute is not forcible

		.echo **FAIL  STA  imm as absolute

		.assume addr:absolute
		sta 	#$32
		.assume addr:absolute
		sta 	#bak08
		.assume addr:absolute
		sta 	#fwd08

; zeropage is not forcible

		.echo **FAIL  STA  imm as zeropage

		.assume addr:zeropage
		sta 	#$32
		.assume addr:zeropage
		sta 	#bak08
		.assume addr:zeropage
		sta 	#fwd08

; long is not forcible

		.echo **FAIL  STA  imm as long

		.assume addr:long
		sta 	#$32
		.assume addr:long
		sta 	#bak08
		.assume addr:long
		sta 	#fwd08

; checking STA imp

; absolute is not forcible

		.echo **FAIL  STA  imp as absolute

		.assume addr:absolute
		sta 

; zeropage is not forcible

		.echo **FAIL  STA  imp as zeropage

		.assume addr:zeropage
		sta 

; long is not forcible

		.echo **FAIL  STA  imp as long

		.assume addr:long
		sta 

; checking STA lab

; checking STA labi

; labi cannot be forced to abi

		.echo **FAIL  STA  labi as absolute

		.assume addr:absolute
		sta 	[$4365]
		.assume addr:absolute
		sta 	[fwd16]
		.assume addr:absolute
		sta 	[bak16]

; checking STA labx

; checking STA lpcr

; checking STA lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  STA  lzpi as absolute

		.assume addr:absolute
		sta 	[$32]
		.assume addr:absolute
		sta 	[bak08]
		.assume addr:absolute
		sta 	[fwd08]

; checking STA lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  STA  lzpiy as absolute

		.assume addr:absolute
		sta 	[$32],Y
		.assume addr:absolute
		sta 	[bak08],Y
		.assume addr:absolute
		sta 	[fwd08],Y

; checking STA pcr

; checking STA sr

; absolute is not forcible

		.echo **FAIL  STA  sr as absolute

		.assume addr:absolute
		sta 	$32,S
		.assume addr:absolute
		sta 	bak08,S
		.assume addr:absolute
		sta 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  STA  sr as zeropage

		.assume addr:zeropage
		sta 	$32,S
		.assume addr:zeropage
		sta 	bak08,S
		.assume addr:zeropage
		sta 	fwd08,S

; long is not forcible

		.echo **FAIL  STA  sr as long

		.assume addr:long
		sta 	$32,S
		.assume addr:long
		sta 	bak08,S
		.assume addr:long
		sta 	fwd08,S

; checking STA sriy

; absolute is not forcible

		.echo **FAIL  STA  sriy as absolute

		.assume addr:absolute
		sta 	($32,S),Y
		.assume addr:absolute
		sta 	(bak08,S),Y
		.assume addr:absolute
		sta 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  STA  sriy as zeropage

		.assume addr:zeropage
		sta 	($32,S),Y
		.assume addr:zeropage
		sta 	(bak08,S),Y
		.assume addr:zeropage
		sta 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  STA  sriy as long

		.assume addr:long
		sta 	($32,S),Y
		.assume addr:long
		sta 	(bak08,S),Y
		.assume addr:long
		sta 	(fwd08,S),Y

; checking STA zp

; checking STA zpi

; zpi cannot be forced to abi

		.echo **FAIL  STA  zpi as absolute

		.assume addr:absolute
		sta 	($32)
		.assume addr:absolute
		sta 	(bak08)
		.assume addr:absolute
		sta 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  STA  zpi as long

		.assume addr:long
		sta 	($32)
		.assume addr:long
		sta 	(bak08)
		.assume addr:long
		sta 	(fwd08)

; checking STA zpiy

; zpiy cannot be forced to @

		.echo **FAIL  STA  zpiy as absolute

		.assume addr:absolute
		sta 	($32),y
		.assume addr:absolute
		sta 	(bak08),y
		.assume addr:absolute
		sta 	(fwd08),y

; checking STA zpx

; checking STA zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  STA  zpxi as absolute

		.assume addr:absolute
		sta 	($32,x)
		.assume addr:absolute
		sta 	(bak08,x)
		.assume addr:absolute
		sta 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  STA  zpxi as long

		.assume addr:long
		sta 	($32,x)
		.assume addr:long
		sta 	(bak08,x)
		.assume addr:long
		sta 	(fwd08,x)

; checking STA zpy

; zpy cannot be forced to @

		.echo **FAIL  STA  zpy as long

		.assume addr:long
		sta 	$32,y
		.assume addr:long
		sta 	bak08,y
		.assume addr:long
		sta 	fwd08,y


; -------------------------------


; -------------------------------

		; check STX
		; 1 mnemonics with modes ['ab', 'zp', 'zpy']

; checking STX ab

; ab cannot be forced to lab

		.echo **FAIL  STX  ab as long

		.assume addr:long
		stx 	$4365
		.assume addr:long
		stx 	fwd16
		.assume addr:long
		stx 	bak16

; checking STX abi

; abi cannot be forced to zpi

		.echo **FAIL  STX  abi as zeropage

		.assume addr:zeropage
		stx 	($4365)
		.assume addr:zeropage
		stx 	(fwd16)
		.assume addr:zeropage
		stx 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  STX  abi as long

		.assume addr:long
		stx 	($4365)
		.assume addr:long
		stx 	(fwd16)
		.assume addr:long
		stx 	(bak16)

; checking STX abx

; abx cannot be forced to zpx

		.echo **FAIL  STX  abx as zeropage

		.assume addr:zeropage
		stx 	$4365,X
		.assume addr:zeropage
		stx 	fwd16,X
		.assume addr:zeropage
		stx 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  STX  abx as long

		.assume addr:long
		stx 	$4365,X
		.assume addr:long
		stx 	fwd16,X
		.assume addr:long
		stx 	bak16,X

; checking STX abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  STX  abxi as zeropage

		.assume addr:zeropage
		stx 	($4365,X)
		.assume addr:zeropage
		stx 	(fwd16,X)
		.assume addr:zeropage
		stx 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  STX  abxi as long

		.assume addr:long
		stx 	($4365,X)
		.assume addr:long
		stx 	(fwd16,X)
		.assume addr:long
		stx 	(bak16,X)

; checking STX aby

; aby cannot be forced to @

		.echo **FAIL  STX  aby as long

		.assume addr:long
		stx 	$4365,Y
		.assume addr:long
		stx 	fwd16,Y
		.assume addr:long
		stx 	bak16,Y

; checking STX acc

; absolute is not forcible

		.echo **FAIL  STX  acc as absolute

		.assume addr:absolute
		stx 	A
		.assume addr:absolute
		stx 	a

; zeropage is not forcible

		.echo **FAIL  STX  acc as zeropage

		.assume addr:zeropage
		stx 	A
		.assume addr:zeropage
		stx 	a

; long is not forcible

		.echo **FAIL  STX  acc as long

		.assume addr:long
		stx 	A
		.assume addr:long
		stx 	a

; checking STX bmv

; absolute is not forcible

		.echo **FAIL  STX  bmv as absolute

		.assume addr:absolute
		stx 	#bak08, #fwd08
		.assume addr:absolute
		stx 	bak24, fwd24
		.assume addr:absolute
		stx 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  STX  bmv as zeropage

		.assume addr:zeropage
		stx 	#bak08, #fwd08
		.assume addr:zeropage
		stx 	bak24, fwd24
		.assume addr:zeropage
		stx 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  STX  bmv as long

		.assume addr:long
		stx 	#bak08, #fwd08
		.assume addr:long
		stx 	bak24, fwd24
		.assume addr:long
		stx 	#bak08, fwd24

; checking STX imm

; absolute is not forcible

		.echo **FAIL  STX  imm as absolute

		.assume addr:absolute
		stx 	#$32
		.assume addr:absolute
		stx 	#bak08
		.assume addr:absolute
		stx 	#fwd08

; zeropage is not forcible

		.echo **FAIL  STX  imm as zeropage

		.assume addr:zeropage
		stx 	#$32
		.assume addr:zeropage
		stx 	#bak08
		.assume addr:zeropage
		stx 	#fwd08

; long is not forcible

		.echo **FAIL  STX  imm as long

		.assume addr:long
		stx 	#$32
		.assume addr:long
		stx 	#bak08
		.assume addr:long
		stx 	#fwd08

; checking STX imp

; absolute is not forcible

		.echo **FAIL  STX  imp as absolute

		.assume addr:absolute
		stx 

; zeropage is not forcible

		.echo **FAIL  STX  imp as zeropage

		.assume addr:zeropage
		stx 

; long is not forcible

		.echo **FAIL  STX  imp as long

		.assume addr:long
		stx 

; checking STX lab

; checking STX labi

; labi cannot be forced to abi

		.echo **FAIL  STX  labi as absolute

		.assume addr:absolute
		stx 	[$4365]
		.assume addr:absolute
		stx 	[fwd16]
		.assume addr:absolute
		stx 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  STX  labi as zeropage

		.assume addr:zeropage
		stx 	[$4365]
		.assume addr:zeropage
		stx 	[fwd16]
		.assume addr:zeropage
		stx 	[bak16]

; checking STX labx

; labx cannot be forced to abx

		.echo **FAIL  STX  labx as absolute

		.assume addr:absolute
		stx 	$547698,x
		.assume addr:absolute
		stx 	bak24,x
		.assume addr:absolute
		stx 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  STX  labx as zeropage

		.assume addr:zeropage
		stx 	$547698,x
		.assume addr:zeropage
		stx 	bak24,x
		.assume addr:zeropage
		stx 	fwd24,x

; checking STX lpcr

; lpcr cannot be forced to @

		.echo **FAIL  STX  lpcr as long

		.assume addr:long
		stx 	:+
		.assume addr:long
		stx 	-
		.assume addr:long
		stx 	+
		.assume addr:long
		stx 	:-

; checking STX lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  STX  lzpi as absolute

		.assume addr:absolute
		stx 	[$32]
		.assume addr:absolute
		stx 	[bak08]
		.assume addr:absolute
		stx 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  STX  lzpi as zeropage

		.assume addr:zeropage
		stx 	[$32]
		.assume addr:zeropage
		stx 	[bak08]
		.assume addr:zeropage
		stx 	[fwd08]

; checking STX lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  STX  lzpiy as absolute

		.assume addr:absolute
		stx 	[$32],Y
		.assume addr:absolute
		stx 	[bak08],Y
		.assume addr:absolute
		stx 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  STX  lzpiy as zeropage

		.assume addr:zeropage
		stx 	[$32],Y
		.assume addr:zeropage
		stx 	[bak08],Y
		.assume addr:zeropage
		stx 	[fwd08],Y

; checking STX pcr

; pcr cannot be forced to @

		.echo **FAIL  STX  pcr as long

		.assume addr:long
		stx 	:+
		.assume addr:long
		stx 	-
		.assume addr:long
		stx 	+
		.assume addr:long
		stx 	:-

; checking STX sr

; absolute is not forcible

		.echo **FAIL  STX  sr as absolute

		.assume addr:absolute
		stx 	$32,S
		.assume addr:absolute
		stx 	bak08,S
		.assume addr:absolute
		stx 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  STX  sr as zeropage

		.assume addr:zeropage
		stx 	$32,S
		.assume addr:zeropage
		stx 	bak08,S
		.assume addr:zeropage
		stx 	fwd08,S

; long is not forcible

		.echo **FAIL  STX  sr as long

		.assume addr:long
		stx 	$32,S
		.assume addr:long
		stx 	bak08,S
		.assume addr:long
		stx 	fwd08,S

; checking STX sriy

; absolute is not forcible

		.echo **FAIL  STX  sriy as absolute

		.assume addr:absolute
		stx 	($32,S),Y
		.assume addr:absolute
		stx 	(bak08,S),Y
		.assume addr:absolute
		stx 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  STX  sriy as zeropage

		.assume addr:zeropage
		stx 	($32,S),Y
		.assume addr:zeropage
		stx 	(bak08,S),Y
		.assume addr:zeropage
		stx 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  STX  sriy as long

		.assume addr:long
		stx 	($32,S),Y
		.assume addr:long
		stx 	(bak08,S),Y
		.assume addr:long
		stx 	(fwd08,S),Y

; checking STX zp

; zp cannot be forced to lab

		.echo **FAIL  STX  zp as long

		.assume addr:long
		stx 	$32
		.assume addr:long
		stx 	bak08
		.assume addr:long
		stx 	fwd08

; checking STX zpi

; zpi cannot be forced to abi

		.echo **FAIL  STX  zpi as absolute

		.assume addr:absolute
		stx 	($32)
		.assume addr:absolute
		stx 	(bak08)
		.assume addr:absolute
		stx 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  STX  zpi as long

		.assume addr:long
		stx 	($32)
		.assume addr:long
		stx 	(bak08)
		.assume addr:long
		stx 	(fwd08)

; checking STX zpiy

; zpiy cannot be forced to @

		.echo **FAIL  STX  zpiy as absolute

		.assume addr:absolute
		stx 	($32),y
		.assume addr:absolute
		stx 	(bak08),y
		.assume addr:absolute
		stx 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  STX  zpiy as long

		.assume addr:long
		stx 	($32),y
		.assume addr:long
		stx 	(bak08),y
		.assume addr:long
		stx 	(fwd08),y

; checking STX zpx

; zpx cannot be forced to abx

		.echo **FAIL  STX  zpx as absolute

		.assume addr:absolute
		stx 	$32,x
		.assume addr:absolute
		stx 	bak08,x
		.assume addr:absolute
		stx 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  STX  zpx as long

		.assume addr:long
		stx 	$32,x
		.assume addr:long
		stx 	bak08,x
		.assume addr:long
		stx 	fwd08,x

; checking STX zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  STX  zpxi as absolute

		.assume addr:absolute
		stx 	($32,x)
		.assume addr:absolute
		stx 	(bak08,x)
		.assume addr:absolute
		stx 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  STX  zpxi as long

		.assume addr:long
		stx 	($32,x)
		.assume addr:long
		stx 	(bak08,x)
		.assume addr:long
		stx 	(fwd08,x)

; checking STX zpy

; zpy cannot be forced to aby

		.echo **FAIL  STX  zpy as absolute

		.assume addr:absolute
		stx 	$32,y
		.assume addr:absolute
		stx 	bak08,y
		.assume addr:absolute
		stx 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  STX  zpy as long

		.assume addr:long
		stx 	$32,y
		.assume addr:long
		stx 	bak08,y
		.assume addr:long
		stx 	fwd08,y


; -------------------------------


; -------------------------------

		; check STY
		; 1 mnemonics with modes ['ab', 'zp', 'zpx']

; checking STY ab

; ab cannot be forced to lab

		.echo **FAIL  STY  ab as long

		.assume addr:long
		sty 	$4365
		.assume addr:long
		sty 	fwd16
		.assume addr:long
		sty 	bak16

; checking STY abi

; abi cannot be forced to zpi

		.echo **FAIL  STY  abi as zeropage

		.assume addr:zeropage
		sty 	($4365)
		.assume addr:zeropage
		sty 	(fwd16)
		.assume addr:zeropage
		sty 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  STY  abi as long

		.assume addr:long
		sty 	($4365)
		.assume addr:long
		sty 	(fwd16)
		.assume addr:long
		sty 	(bak16)

; checking STY abx

; abx cannot be forced to labx

		.echo **FAIL  STY  abx as long

		.assume addr:long
		sty 	$4365,X
		.assume addr:long
		sty 	fwd16,X
		.assume addr:long
		sty 	bak16,X

; checking STY abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  STY  abxi as zeropage

		.assume addr:zeropage
		sty 	($4365,X)
		.assume addr:zeropage
		sty 	(fwd16,X)
		.assume addr:zeropage
		sty 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  STY  abxi as long

		.assume addr:long
		sty 	($4365,X)
		.assume addr:long
		sty 	(fwd16,X)
		.assume addr:long
		sty 	(bak16,X)

; checking STY aby

; aby cannot be forced to zpy

		.echo **FAIL  STY  aby as zeropage

		.assume addr:zeropage
		sty 	$4365,Y
		.assume addr:zeropage
		sty 	fwd16,Y
		.assume addr:zeropage
		sty 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  STY  aby as long

		.assume addr:long
		sty 	$4365,Y
		.assume addr:long
		sty 	fwd16,Y
		.assume addr:long
		sty 	bak16,Y

; checking STY acc

; absolute is not forcible

		.echo **FAIL  STY  acc as absolute

		.assume addr:absolute
		sty 	A
		.assume addr:absolute
		sty 	a

; zeropage is not forcible

		.echo **FAIL  STY  acc as zeropage

		.assume addr:zeropage
		sty 	A
		.assume addr:zeropage
		sty 	a

; long is not forcible

		.echo **FAIL  STY  acc as long

		.assume addr:long
		sty 	A
		.assume addr:long
		sty 	a

; checking STY bmv

; absolute is not forcible

		.echo **FAIL  STY  bmv as absolute

		.assume addr:absolute
		sty 	#bak08, #fwd08
		.assume addr:absolute
		sty 	bak24, fwd24
		.assume addr:absolute
		sty 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  STY  bmv as zeropage

		.assume addr:zeropage
		sty 	#bak08, #fwd08
		.assume addr:zeropage
		sty 	bak24, fwd24
		.assume addr:zeropage
		sty 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  STY  bmv as long

		.assume addr:long
		sty 	#bak08, #fwd08
		.assume addr:long
		sty 	bak24, fwd24
		.assume addr:long
		sty 	#bak08, fwd24

; checking STY imm

; absolute is not forcible

		.echo **FAIL  STY  imm as absolute

		.assume addr:absolute
		sty 	#$32
		.assume addr:absolute
		sty 	#bak08
		.assume addr:absolute
		sty 	#fwd08

; zeropage is not forcible

		.echo **FAIL  STY  imm as zeropage

		.assume addr:zeropage
		sty 	#$32
		.assume addr:zeropage
		sty 	#bak08
		.assume addr:zeropage
		sty 	#fwd08

; long is not forcible

		.echo **FAIL  STY  imm as long

		.assume addr:long
		sty 	#$32
		.assume addr:long
		sty 	#bak08
		.assume addr:long
		sty 	#fwd08

; checking STY imp

; absolute is not forcible

		.echo **FAIL  STY  imp as absolute

		.assume addr:absolute
		sty 

; zeropage is not forcible

		.echo **FAIL  STY  imp as zeropage

		.assume addr:zeropage
		sty 

; long is not forcible

		.echo **FAIL  STY  imp as long

		.assume addr:long
		sty 

; checking STY lab

; checking STY labi

; labi cannot be forced to abi

		.echo **FAIL  STY  labi as absolute

		.assume addr:absolute
		sty 	[$4365]
		.assume addr:absolute
		sty 	[fwd16]
		.assume addr:absolute
		sty 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  STY  labi as zeropage

		.assume addr:zeropage
		sty 	[$4365]
		.assume addr:zeropage
		sty 	[fwd16]
		.assume addr:zeropage
		sty 	[bak16]

; checking STY labx

; labx cannot be forced to abx

		.echo **FAIL  STY  labx as absolute

		.assume addr:absolute
		sty 	$547698,x
		.assume addr:absolute
		sty 	bak24,x
		.assume addr:absolute
		sty 	fwd24,x

; checking STY lpcr

; lpcr cannot be forced to @

		.echo **FAIL  STY  lpcr as long

		.assume addr:long
		sty 	:+
		.assume addr:long
		sty 	-
		.assume addr:long
		sty 	+
		.assume addr:long
		sty 	:-

; checking STY lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  STY  lzpi as absolute

		.assume addr:absolute
		sty 	[$32]
		.assume addr:absolute
		sty 	[bak08]
		.assume addr:absolute
		sty 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  STY  lzpi as zeropage

		.assume addr:zeropage
		sty 	[$32]
		.assume addr:zeropage
		sty 	[bak08]
		.assume addr:zeropage
		sty 	[fwd08]

; checking STY lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  STY  lzpiy as absolute

		.assume addr:absolute
		sty 	[$32],Y
		.assume addr:absolute
		sty 	[bak08],Y
		.assume addr:absolute
		sty 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  STY  lzpiy as zeropage

		.assume addr:zeropage
		sty 	[$32],Y
		.assume addr:zeropage
		sty 	[bak08],Y
		.assume addr:zeropage
		sty 	[fwd08],Y

; checking STY pcr

; pcr cannot be forced to @

		.echo **FAIL  STY  pcr as long

		.assume addr:long
		sty 	:+
		.assume addr:long
		sty 	-
		.assume addr:long
		sty 	+
		.assume addr:long
		sty 	:-

; checking STY sr

; absolute is not forcible

		.echo **FAIL  STY  sr as absolute

		.assume addr:absolute
		sty 	$32,S
		.assume addr:absolute
		sty 	bak08,S
		.assume addr:absolute
		sty 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  STY  sr as zeropage

		.assume addr:zeropage
		sty 	$32,S
		.assume addr:zeropage
		sty 	bak08,S
		.assume addr:zeropage
		sty 	fwd08,S

; long is not forcible

		.echo **FAIL  STY  sr as long

		.assume addr:long
		sty 	$32,S
		.assume addr:long
		sty 	bak08,S
		.assume addr:long
		sty 	fwd08,S

; checking STY sriy

; absolute is not forcible

		.echo **FAIL  STY  sriy as absolute

		.assume addr:absolute
		sty 	($32,S),Y
		.assume addr:absolute
		sty 	(bak08,S),Y
		.assume addr:absolute
		sty 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  STY  sriy as zeropage

		.assume addr:zeropage
		sty 	($32,S),Y
		.assume addr:zeropage
		sty 	(bak08,S),Y
		.assume addr:zeropage
		sty 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  STY  sriy as long

		.assume addr:long
		sty 	($32,S),Y
		.assume addr:long
		sty 	(bak08,S),Y
		.assume addr:long
		sty 	(fwd08,S),Y

; checking STY zp

; zp cannot be forced to lab

		.echo **FAIL  STY  zp as long

		.assume addr:long
		sty 	$32
		.assume addr:long
		sty 	bak08
		.assume addr:long
		sty 	fwd08

; checking STY zpi

; zpi cannot be forced to abi

		.echo **FAIL  STY  zpi as absolute

		.assume addr:absolute
		sty 	($32)
		.assume addr:absolute
		sty 	(bak08)
		.assume addr:absolute
		sty 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  STY  zpi as long

		.assume addr:long
		sty 	($32)
		.assume addr:long
		sty 	(bak08)
		.assume addr:long
		sty 	(fwd08)

; checking STY zpiy

; zpiy cannot be forced to @

		.echo **FAIL  STY  zpiy as absolute

		.assume addr:absolute
		sty 	($32),y
		.assume addr:absolute
		sty 	(bak08),y
		.assume addr:absolute
		sty 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  STY  zpiy as long

		.assume addr:long
		sty 	($32),y
		.assume addr:long
		sty 	(bak08),y
		.assume addr:long
		sty 	(fwd08),y

; checking STY zpx

; zpx cannot be forced to abx

		.echo **FAIL  STY  zpx as absolute

		.assume addr:absolute
		sty 	$32,x
		.assume addr:absolute
		sty 	bak08,x
		.assume addr:absolute
		sty 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  STY  zpx as long

		.assume addr:long
		sty 	$32,x
		.assume addr:long
		sty 	bak08,x
		.assume addr:long
		sty 	fwd08,x

; checking STY zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  STY  zpxi as absolute

		.assume addr:absolute
		sty 	($32,x)
		.assume addr:absolute
		sty 	(bak08,x)
		.assume addr:absolute
		sty 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  STY  zpxi as long

		.assume addr:long
		sty 	($32,x)
		.assume addr:long
		sty 	(bak08,x)
		.assume addr:long
		sty 	(fwd08,x)

; checking STY zpy

; zpy cannot be forced to aby

		.echo **FAIL  STY  zpy as absolute

		.assume addr:absolute
		sty 	$32,y
		.assume addr:absolute
		sty 	bak08,y
		.assume addr:absolute
		sty 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  STY  zpy as long

		.assume addr:long
		sty 	$32,y
		.assume addr:long
		sty 	bak08,y
		.assume addr:long
		sty 	fwd08,y


; -------------------------------


; -------------------------------

		; check STZ
		; 1 mnemonics with modes ['ab', 'abx', 'zp', 'zpx']

; checking STZ ab

; ab cannot be forced to lab

		.echo **FAIL  STZ  ab as long

		.assume addr:long
		stz 	$4365
		.assume addr:long
		stz 	fwd16
		.assume addr:long
		stz 	bak16

; checking STZ abi

; abi cannot be forced to zpi

		.echo **FAIL  STZ  abi as zeropage

		.assume addr:zeropage
		stz 	($4365)
		.assume addr:zeropage
		stz 	(fwd16)
		.assume addr:zeropage
		stz 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  STZ  abi as long

		.assume addr:long
		stz 	($4365)
		.assume addr:long
		stz 	(fwd16)
		.assume addr:long
		stz 	(bak16)

; checking STZ abx

; abx cannot be forced to labx

		.echo **FAIL  STZ  abx as long

		.assume addr:long
		stz 	$4365,X
		.assume addr:long
		stz 	fwd16,X
		.assume addr:long
		stz 	bak16,X

; checking STZ abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  STZ  abxi as zeropage

		.assume addr:zeropage
		stz 	($4365,X)
		.assume addr:zeropage
		stz 	(fwd16,X)
		.assume addr:zeropage
		stz 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  STZ  abxi as long

		.assume addr:long
		stz 	($4365,X)
		.assume addr:long
		stz 	(fwd16,X)
		.assume addr:long
		stz 	(bak16,X)

; checking STZ aby

; aby cannot be forced to zpy

		.echo **FAIL  STZ  aby as zeropage

		.assume addr:zeropage
		stz 	$4365,Y
		.assume addr:zeropage
		stz 	fwd16,Y
		.assume addr:zeropage
		stz 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  STZ  aby as long

		.assume addr:long
		stz 	$4365,Y
		.assume addr:long
		stz 	fwd16,Y
		.assume addr:long
		stz 	bak16,Y

; checking STZ acc

; absolute is not forcible

		.echo **FAIL  STZ  acc as absolute

		.assume addr:absolute
		stz 	A
		.assume addr:absolute
		stz 	a

; zeropage is not forcible

		.echo **FAIL  STZ  acc as zeropage

		.assume addr:zeropage
		stz 	A
		.assume addr:zeropage
		stz 	a

; long is not forcible

		.echo **FAIL  STZ  acc as long

		.assume addr:long
		stz 	A
		.assume addr:long
		stz 	a

; checking STZ bmv

; absolute is not forcible

		.echo **FAIL  STZ  bmv as absolute

		.assume addr:absolute
		stz 	#bak08, #fwd08
		.assume addr:absolute
		stz 	bak24, fwd24
		.assume addr:absolute
		stz 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  STZ  bmv as zeropage

		.assume addr:zeropage
		stz 	#bak08, #fwd08
		.assume addr:zeropage
		stz 	bak24, fwd24
		.assume addr:zeropage
		stz 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  STZ  bmv as long

		.assume addr:long
		stz 	#bak08, #fwd08
		.assume addr:long
		stz 	bak24, fwd24
		.assume addr:long
		stz 	#bak08, fwd24

; checking STZ imm

; absolute is not forcible

		.echo **FAIL  STZ  imm as absolute

		.assume addr:absolute
		stz 	#$32
		.assume addr:absolute
		stz 	#bak08
		.assume addr:absolute
		stz 	#fwd08

; zeropage is not forcible

		.echo **FAIL  STZ  imm as zeropage

		.assume addr:zeropage
		stz 	#$32
		.assume addr:zeropage
		stz 	#bak08
		.assume addr:zeropage
		stz 	#fwd08

; long is not forcible

		.echo **FAIL  STZ  imm as long

		.assume addr:long
		stz 	#$32
		.assume addr:long
		stz 	#bak08
		.assume addr:long
		stz 	#fwd08

; checking STZ imp

; absolute is not forcible

		.echo **FAIL  STZ  imp as absolute

		.assume addr:absolute
		stz 

; zeropage is not forcible

		.echo **FAIL  STZ  imp as zeropage

		.assume addr:zeropage
		stz 

; long is not forcible

		.echo **FAIL  STZ  imp as long

		.assume addr:long
		stz 

; checking STZ lab

; checking STZ labi

; labi cannot be forced to abi

		.echo **FAIL  STZ  labi as absolute

		.assume addr:absolute
		stz 	[$4365]
		.assume addr:absolute
		stz 	[fwd16]
		.assume addr:absolute
		stz 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  STZ  labi as zeropage

		.assume addr:zeropage
		stz 	[$4365]
		.assume addr:zeropage
		stz 	[fwd16]
		.assume addr:zeropage
		stz 	[bak16]

; checking STZ labx

; checking STZ lpcr

; lpcr cannot be forced to @

		.echo **FAIL  STZ  lpcr as long

		.assume addr:long
		stz 	:+
		.assume addr:long
		stz 	-
		.assume addr:long
		stz 	+
		.assume addr:long
		stz 	:-

; checking STZ lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  STZ  lzpi as absolute

		.assume addr:absolute
		stz 	[$32]
		.assume addr:absolute
		stz 	[bak08]
		.assume addr:absolute
		stz 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  STZ  lzpi as zeropage

		.assume addr:zeropage
		stz 	[$32]
		.assume addr:zeropage
		stz 	[bak08]
		.assume addr:zeropage
		stz 	[fwd08]

; checking STZ lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  STZ  lzpiy as absolute

		.assume addr:absolute
		stz 	[$32],Y
		.assume addr:absolute
		stz 	[bak08],Y
		.assume addr:absolute
		stz 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  STZ  lzpiy as zeropage

		.assume addr:zeropage
		stz 	[$32],Y
		.assume addr:zeropage
		stz 	[bak08],Y
		.assume addr:zeropage
		stz 	[fwd08],Y

; checking STZ pcr

; pcr cannot be forced to @

		.echo **FAIL  STZ  pcr as long

		.assume addr:long
		stz 	:+
		.assume addr:long
		stz 	-
		.assume addr:long
		stz 	+
		.assume addr:long
		stz 	:-

; checking STZ sr

; absolute is not forcible

		.echo **FAIL  STZ  sr as absolute

		.assume addr:absolute
		stz 	$32,S
		.assume addr:absolute
		stz 	bak08,S
		.assume addr:absolute
		stz 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  STZ  sr as zeropage

		.assume addr:zeropage
		stz 	$32,S
		.assume addr:zeropage
		stz 	bak08,S
		.assume addr:zeropage
		stz 	fwd08,S

; long is not forcible

		.echo **FAIL  STZ  sr as long

		.assume addr:long
		stz 	$32,S
		.assume addr:long
		stz 	bak08,S
		.assume addr:long
		stz 	fwd08,S

; checking STZ sriy

; absolute is not forcible

		.echo **FAIL  STZ  sriy as absolute

		.assume addr:absolute
		stz 	($32,S),Y
		.assume addr:absolute
		stz 	(bak08,S),Y
		.assume addr:absolute
		stz 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  STZ  sriy as zeropage

		.assume addr:zeropage
		stz 	($32,S),Y
		.assume addr:zeropage
		stz 	(bak08,S),Y
		.assume addr:zeropage
		stz 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  STZ  sriy as long

		.assume addr:long
		stz 	($32,S),Y
		.assume addr:long
		stz 	(bak08,S),Y
		.assume addr:long
		stz 	(fwd08,S),Y

; checking STZ zp

; zp cannot be forced to lab

		.echo **FAIL  STZ  zp as long

		.assume addr:long
		stz 	$32
		.assume addr:long
		stz 	bak08
		.assume addr:long
		stz 	fwd08

; checking STZ zpi

; zpi cannot be forced to abi

		.echo **FAIL  STZ  zpi as absolute

		.assume addr:absolute
		stz 	($32)
		.assume addr:absolute
		stz 	(bak08)
		.assume addr:absolute
		stz 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  STZ  zpi as long

		.assume addr:long
		stz 	($32)
		.assume addr:long
		stz 	(bak08)
		.assume addr:long
		stz 	(fwd08)

; checking STZ zpiy

; zpiy cannot be forced to @

		.echo **FAIL  STZ  zpiy as absolute

		.assume addr:absolute
		stz 	($32),y
		.assume addr:absolute
		stz 	(bak08),y
		.assume addr:absolute
		stz 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  STZ  zpiy as long

		.assume addr:long
		stz 	($32),y
		.assume addr:long
		stz 	(bak08),y
		.assume addr:long
		stz 	(fwd08),y

; checking STZ zpx

; zpx cannot be forced to labx

		.echo **FAIL  STZ  zpx as long

		.assume addr:long
		stz 	$32,x
		.assume addr:long
		stz 	bak08,x
		.assume addr:long
		stz 	fwd08,x

; checking STZ zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  STZ  zpxi as absolute

		.assume addr:absolute
		stz 	($32,x)
		.assume addr:absolute
		stz 	(bak08,x)
		.assume addr:absolute
		stz 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  STZ  zpxi as long

		.assume addr:long
		stz 	($32,x)
		.assume addr:long
		stz 	(bak08,x)
		.assume addr:long
		stz 	(fwd08,x)

; checking STZ zpy

; zpy cannot be forced to aby

		.echo **FAIL  STZ  zpy as absolute

		.assume addr:absolute
		stz 	$32,y
		.assume addr:absolute
		stz 	bak08,y
		.assume addr:absolute
		stz 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  STZ  zpy as long

		.assume addr:long
		stz 	$32,y
		.assume addr:long
		stz 	bak08,y
		.assume addr:long
		stz 	fwd08,y


; -------------------------------


; -------------------------------

		; check TRB
		; 2 mnemonics with modes ['ab', 'zp']
		; TSB

; checking TRB ab

; ab cannot be forced to lab

		.echo **FAIL  TRB  ab as long

		.assume addr:long
		trb 	$4365
		.assume addr:long
		trb 	fwd16
		.assume addr:long
		trb 	bak16

; checking TRB abi

; abi cannot be forced to zpi

		.echo **FAIL  TRB  abi as zeropage

		.assume addr:zeropage
		trb 	($4365)
		.assume addr:zeropage
		trb 	(fwd16)
		.assume addr:zeropage
		trb 	(bak16)

; abi cannot be forced to labi

		.echo **FAIL  TRB  abi as long

		.assume addr:long
		trb 	($4365)
		.assume addr:long
		trb 	(fwd16)
		.assume addr:long
		trb 	(bak16)

; checking TRB abx

; abx cannot be forced to zpx

		.echo **FAIL  TRB  abx as zeropage

		.assume addr:zeropage
		trb 	$4365,X
		.assume addr:zeropage
		trb 	fwd16,X
		.assume addr:zeropage
		trb 	bak16,X

; abx cannot be forced to labx

		.echo **FAIL  TRB  abx as long

		.assume addr:long
		trb 	$4365,X
		.assume addr:long
		trb 	fwd16,X
		.assume addr:long
		trb 	bak16,X

; checking TRB abxi

; abxi cannot be forced to zpxi

		.echo **FAIL  TRB  abxi as zeropage

		.assume addr:zeropage
		trb 	($4365,X)
		.assume addr:zeropage
		trb 	(fwd16,X)
		.assume addr:zeropage
		trb 	(bak16,X)

; abxi cannot be forced to @

		.echo **FAIL  TRB  abxi as long

		.assume addr:long
		trb 	($4365,X)
		.assume addr:long
		trb 	(fwd16,X)
		.assume addr:long
		trb 	(bak16,X)

; checking TRB aby

; aby cannot be forced to zpy

		.echo **FAIL  TRB  aby as zeropage

		.assume addr:zeropage
		trb 	$4365,Y
		.assume addr:zeropage
		trb 	fwd16,Y
		.assume addr:zeropage
		trb 	bak16,Y

; aby cannot be forced to @

		.echo **FAIL  TRB  aby as long

		.assume addr:long
		trb 	$4365,Y
		.assume addr:long
		trb 	fwd16,Y
		.assume addr:long
		trb 	bak16,Y

; checking TRB acc

; absolute is not forcible

		.echo **FAIL  TRB  acc as absolute

		.assume addr:absolute
		trb 	A
		.assume addr:absolute
		trb 	a

; zeropage is not forcible

		.echo **FAIL  TRB  acc as zeropage

		.assume addr:zeropage
		trb 	A
		.assume addr:zeropage
		trb 	a

; long is not forcible

		.echo **FAIL  TRB  acc as long

		.assume addr:long
		trb 	A
		.assume addr:long
		trb 	a

; checking TRB bmv

; absolute is not forcible

		.echo **FAIL  TRB  bmv as absolute

		.assume addr:absolute
		trb 	#bak08, #fwd08
		.assume addr:absolute
		trb 	bak24, fwd24
		.assume addr:absolute
		trb 	#bak08, fwd24

; zeropage is not forcible

		.echo **FAIL  TRB  bmv as zeropage

		.assume addr:zeropage
		trb 	#bak08, #fwd08
		.assume addr:zeropage
		trb 	bak24, fwd24
		.assume addr:zeropage
		trb 	#bak08, fwd24

; long is not forcible

		.echo **FAIL  TRB  bmv as long

		.assume addr:long
		trb 	#bak08, #fwd08
		.assume addr:long
		trb 	bak24, fwd24
		.assume addr:long
		trb 	#bak08, fwd24

; checking TRB imm

; absolute is not forcible

		.echo **FAIL  TRB  imm as absolute

		.assume addr:absolute
		trb 	#$32
		.assume addr:absolute
		trb 	#bak08
		.assume addr:absolute
		trb 	#fwd08

; zeropage is not forcible

		.echo **FAIL  TRB  imm as zeropage

		.assume addr:zeropage
		trb 	#$32
		.assume addr:zeropage
		trb 	#bak08
		.assume addr:zeropage
		trb 	#fwd08

; long is not forcible

		.echo **FAIL  TRB  imm as long

		.assume addr:long
		trb 	#$32
		.assume addr:long
		trb 	#bak08
		.assume addr:long
		trb 	#fwd08

; checking TRB imp

; absolute is not forcible

		.echo **FAIL  TRB  imp as absolute

		.assume addr:absolute
		trb 

; zeropage is not forcible

		.echo **FAIL  TRB  imp as zeropage

		.assume addr:zeropage
		trb 

; long is not forcible

		.echo **FAIL  TRB  imp as long

		.assume addr:long
		trb 

; checking TRB lab

; checking TRB labi

; labi cannot be forced to abi

		.echo **FAIL  TRB  labi as absolute

		.assume addr:absolute
		trb 	[$4365]
		.assume addr:absolute
		trb 	[fwd16]
		.assume addr:absolute
		trb 	[bak16]

; labi cannot be forced to zpi

		.echo **FAIL  TRB  labi as zeropage

		.assume addr:zeropage
		trb 	[$4365]
		.assume addr:zeropage
		trb 	[fwd16]
		.assume addr:zeropage
		trb 	[bak16]

; checking TRB labx

; labx cannot be forced to abx

		.echo **FAIL  TRB  labx as absolute

		.assume addr:absolute
		trb 	$547698,x
		.assume addr:absolute
		trb 	bak24,x
		.assume addr:absolute
		trb 	fwd24,x

; labx cannot be forced to zpx

		.echo **FAIL  TRB  labx as zeropage

		.assume addr:zeropage
		trb 	$547698,x
		.assume addr:zeropage
		trb 	bak24,x
		.assume addr:zeropage
		trb 	fwd24,x

; checking TRB lpcr

; lpcr cannot be forced to @

		.echo **FAIL  TRB  lpcr as long

		.assume addr:long
		trb 	:+
		.assume addr:long
		trb 	-
		.assume addr:long
		trb 	+
		.assume addr:long
		trb 	:-

; checking TRB lzpi

; lzpi cannot be forced to abi

		.echo **FAIL  TRB  lzpi as absolute

		.assume addr:absolute
		trb 	[$32]
		.assume addr:absolute
		trb 	[bak08]
		.assume addr:absolute
		trb 	[fwd08]

; lzpi cannot be forced to zpi

		.echo **FAIL  TRB  lzpi as zeropage

		.assume addr:zeropage
		trb 	[$32]
		.assume addr:zeropage
		trb 	[bak08]
		.assume addr:zeropage
		trb 	[fwd08]

; checking TRB lzpiy

; lzpiy cannot be forced to @

		.echo **FAIL  TRB  lzpiy as absolute

		.assume addr:absolute
		trb 	[$32],Y
		.assume addr:absolute
		trb 	[bak08],Y
		.assume addr:absolute
		trb 	[fwd08],Y

; lzpiy cannot be forced to zpiy

		.echo **FAIL  TRB  lzpiy as zeropage

		.assume addr:zeropage
		trb 	[$32],Y
		.assume addr:zeropage
		trb 	[bak08],Y
		.assume addr:zeropage
		trb 	[fwd08],Y

; checking TRB pcr

; pcr cannot be forced to @

		.echo **FAIL  TRB  pcr as long

		.assume addr:long
		trb 	:+
		.assume addr:long
		trb 	-
		.assume addr:long
		trb 	+
		.assume addr:long
		trb 	:-

; checking TRB sr

; absolute is not forcible

		.echo **FAIL  TRB  sr as absolute

		.assume addr:absolute
		trb 	$32,S
		.assume addr:absolute
		trb 	bak08,S
		.assume addr:absolute
		trb 	fwd08,S

; zeropage is not forcible

		.echo **FAIL  TRB  sr as zeropage

		.assume addr:zeropage
		trb 	$32,S
		.assume addr:zeropage
		trb 	bak08,S
		.assume addr:zeropage
		trb 	fwd08,S

; long is not forcible

		.echo **FAIL  TRB  sr as long

		.assume addr:long
		trb 	$32,S
		.assume addr:long
		trb 	bak08,S
		.assume addr:long
		trb 	fwd08,S

; checking TRB sriy

; absolute is not forcible

		.echo **FAIL  TRB  sriy as absolute

		.assume addr:absolute
		trb 	($32,S),Y
		.assume addr:absolute
		trb 	(bak08,S),Y
		.assume addr:absolute
		trb 	(fwd08,S),Y

; zeropage is not forcible

		.echo **FAIL  TRB  sriy as zeropage

		.assume addr:zeropage
		trb 	($32,S),Y
		.assume addr:zeropage
		trb 	(bak08,S),Y
		.assume addr:zeropage
		trb 	(fwd08,S),Y

; long is not forcible

		.echo **FAIL  TRB  sriy as long

		.assume addr:long
		trb 	($32,S),Y
		.assume addr:long
		trb 	(bak08,S),Y
		.assume addr:long
		trb 	(fwd08,S),Y

; checking TRB zp

; zp cannot be forced to lab

		.echo **FAIL  TRB  zp as long

		.assume addr:long
		trb 	$32
		.assume addr:long
		trb 	bak08
		.assume addr:long
		trb 	fwd08

; checking TRB zpi

; zpi cannot be forced to abi

		.echo **FAIL  TRB  zpi as absolute

		.assume addr:absolute
		trb 	($32)
		.assume addr:absolute
		trb 	(bak08)
		.assume addr:absolute
		trb 	(fwd08)

; zpi cannot be forced to labi

		.echo **FAIL  TRB  zpi as long

		.assume addr:long
		trb 	($32)
		.assume addr:long
		trb 	(bak08)
		.assume addr:long
		trb 	(fwd08)

; checking TRB zpiy

; zpiy cannot be forced to @

		.echo **FAIL  TRB  zpiy as absolute

		.assume addr:absolute
		trb 	($32),y
		.assume addr:absolute
		trb 	(bak08),y
		.assume addr:absolute
		trb 	(fwd08),y

; zpiy cannot be forced to lzpiy

		.echo **FAIL  TRB  zpiy as long

		.assume addr:long
		trb 	($32),y
		.assume addr:long
		trb 	(bak08),y
		.assume addr:long
		trb 	(fwd08),y

; checking TRB zpx

; zpx cannot be forced to abx

		.echo **FAIL  TRB  zpx as absolute

		.assume addr:absolute
		trb 	$32,x
		.assume addr:absolute
		trb 	bak08,x
		.assume addr:absolute
		trb 	fwd08,x

; zpx cannot be forced to labx

		.echo **FAIL  TRB  zpx as long

		.assume addr:long
		trb 	$32,x
		.assume addr:long
		trb 	bak08,x
		.assume addr:long
		trb 	fwd08,x

; checking TRB zpxi

; zpxi cannot be forced to abxi

		.echo **FAIL  TRB  zpxi as absolute

		.assume addr:absolute
		trb 	($32,x)
		.assume addr:absolute
		trb 	(bak08,x)
		.assume addr:absolute
		trb 	(fwd08,x)

; zpxi cannot be forced to @

		.echo **FAIL  TRB  zpxi as long

		.assume addr:long
		trb 	($32,x)
		.assume addr:long
		trb 	(bak08,x)
		.assume addr:long
		trb 	(fwd08,x)

; checking TRB zpy

; zpy cannot be forced to aby

		.echo **FAIL  TRB  zpy as absolute

		.assume addr:absolute
		trb 	$32,y
		.assume addr:absolute
		trb 	bak08,y
		.assume addr:absolute
		trb 	fwd08,y

; zpy cannot be forced to @

		.echo **FAIL  TRB  zpy as long

		.assume addr:long
		trb 	$32,y
		.assume addr:long
		trb 	bak08,y
		.assume addr:long
		trb 	fwd08,y


; -------------------------------


; -------------------------------

; forward reference

fwd32	.equ	$89ABCDEF
fwd24	.equ	$456789
fwd16	.equ	$1234
fwd08	.equ	$12

; -------------------------------

		.end

; -------------------------------

; 0 pass
; 3050 fail
