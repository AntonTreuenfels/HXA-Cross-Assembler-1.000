; Hobby Cross-Assembler HXA65 Error Test W65C816Se
; W65C816S\Instruction Set
; error: W65C816S All Instructions, All Address Modes

; generated by MODE65.PY - Fri Nov 29 11:59:15 2024


; warning(s):

; errors(s):

; fatal:

; -------------------------------

		.listfile
		.errfile

		.maxerr	10000		; increase default count

; -------------------------------

		.cpu	W65C816S
		.org	$1000

; -------------------------------

; backward reference

bak08	.equ	$12
bak16	.equ	$1234
bak24	.equ	$456789
bak32	.equ	$89ABCDEF

; -------------------------------

:	; backward ref for ADC

		.echo **PASS  ADC  ab

		ADC 	$1234
		ADC 	bak16
		ADC 	fwd16

		.echo **PASS  ADC  abi  (as zpi)

		Adc 	($1234)
		Adc 	(bak16)
		Adc 	(fwd16)

		.echo **PASS  ADC  abx

		ADC 	$1234,X
		ADC 	bak16,x
		ADC 	fwd16,X

		.echo **PASS  ADC  abxi  (as zpxi)

		Adc 	($1234,X)
		Adc 	(bak16,x)
		Adc 	(fwd16,X)

		.echo **PASS  ADC  aby

		ADC 	$1234,Y
		ADC 	bak16,y
		ADC 	fwd16,Y

		.echo **FAIL  ADC  acc

		adc 	A
		adc 	a

		.echo **FAIL  ADC  bmv

		adc 	#$12, #$34
		adc 	#bak08, #fwd08
		adc 	$123456, $789ABC
		adc 	bak24, fwd24

		.echo **PASS  ADC  imm

		ADC 	#$12
		ADC 	#bak08
		ADC 	#fwd08

		.echo **FAIL  ADC  imp

		adc 

		.echo **PASS  ADC  lab

		ADC 	$123456
		ADC 	bak24
		ADC 	fwd24

		.echo **PASS  ADC  labi  (as lzpi)

		Adc 	[$123456]
		Adc 	[bak24]
		Adc 	[fwd24]

		.echo **PASS  ADC  labx

		ADC 	$123456,X
		ADC 	bak24,x
		ADC 	fwd24,X

		.echo **PASS  ADC  lpcr  (as ab)

		Adc 	:+
		Adc 	-
		Adc 	+
		Adc 	:-

		.echo **PASS  ADC  lzpi

		ADC 	[$12]
		ADC 	[bak08]
		ADC 	[fwd08]

		.echo **PASS  ADC  lzpiy

		ADC 	[$12],Y
		ADC 	[bak08],y
		ADC 	[fwd08],Y

		.echo **PASS  ADC  pcr  (as ab)

		Adc 	:+
		Adc 	-
		Adc 	+
		Adc 	:-

		.echo **PASS  ADC  sr

		ADC 	$12,S
		ADC 	bak08,s
		ADC 	fwd08,S

		.echo **PASS  ADC  sriy

		ADC 	($12,s),Y
		ADC 	(bak08,S),y
		ADC 	(fwd08,s),Y

		.echo **PASS  ADC  zp

		ADC 	$12
		ADC 	bak08
		Adc 	fwd08   	; (absolute)

		.echo **PASS  ADC  zpi

		ADC 	($12)
		ADC 	(bak08)
		ADC 	(fwd08)

		.echo **PASS  ADC  zpiy

		ADC 	($12),Y
		ADC 	(bak08),y
		ADC 	(fwd08),Y

		.echo **PASS  ADC  zpx

		ADC 	$12,X
		ADC 	bak08,x
		Adc 	fwd08,X 	; (absolute)

		.echo **PASS  ADC  zpxi

		ADC 	($12,X)
		ADC 	(bak08,x)
		ADC 	(fwd08,X)

		.echo **PASS  ADC  zpy  (as aby)

		Adc 	$12,Y
		Adc 	bak08,y
		Adc 	fwd08,Y


:	; forward ref for ADC

; -------------------------------

:	; backward ref for AND

		.echo **PASS  AND  ab

		AND 	$1234
		AND 	bak16
		AND 	fwd16

		.echo **PASS  AND  abi  (as zpi)

		And 	($1234)
		And 	(bak16)
		And 	(fwd16)

		.echo **PASS  AND  abx

		AND 	$1234,X
		AND 	bak16,x
		AND 	fwd16,X

		.echo **PASS  AND  abxi  (as zpxi)

		And 	($1234,X)
		And 	(bak16,x)
		And 	(fwd16,X)

		.echo **PASS  AND  aby

		AND 	$1234,Y
		AND 	bak16,y
		AND 	fwd16,Y

		.echo **FAIL  AND  acc

		and 	A
		and 	a

		.echo **FAIL  AND  bmv

		and 	#$12, #$34
		and 	#bak08, #fwd08
		and 	$123456, $789ABC
		and 	bak24, fwd24

		.echo **PASS  AND  imm

		AND 	#$12
		AND 	#bak08
		AND 	#fwd08

		.echo **FAIL  AND  imp

		and 

		.echo **PASS  AND  lab

		AND 	$123456
		AND 	bak24
		AND 	fwd24

		.echo **PASS  AND  labi  (as lzpi)

		And 	[$123456]
		And 	[bak24]
		And 	[fwd24]

		.echo **PASS  AND  labx

		AND 	$123456,X
		AND 	bak24,x
		AND 	fwd24,X

		.echo **PASS  AND  lpcr  (as ab)

		And 	:+
		And 	-
		And 	+
		And 	:-

		.echo **PASS  AND  lzpi

		AND 	[$12]
		AND 	[bak08]
		AND 	[fwd08]

		.echo **PASS  AND  lzpiy

		AND 	[$12],Y
		AND 	[bak08],y
		AND 	[fwd08],Y

		.echo **PASS  AND  pcr  (as ab)

		And 	:+
		And 	-
		And 	+
		And 	:-

		.echo **PASS  AND  sr

		AND 	$12,S
		AND 	bak08,s
		AND 	fwd08,S

		.echo **PASS  AND  sriy

		AND 	($12,s),Y
		AND 	(bak08,S),y
		AND 	(fwd08,s),Y

		.echo **PASS  AND  zp

		AND 	$12
		AND 	bak08
		And 	fwd08   	; (absolute)

		.echo **PASS  AND  zpi

		AND 	($12)
		AND 	(bak08)
		AND 	(fwd08)

		.echo **PASS  AND  zpiy

		AND 	($12),Y
		AND 	(bak08),y
		AND 	(fwd08),Y

		.echo **PASS  AND  zpx

		AND 	$12,X
		AND 	bak08,x
		And 	fwd08,X 	; (absolute)

		.echo **PASS  AND  zpxi

		AND 	($12,X)
		AND 	(bak08,x)
		AND 	(fwd08,X)

		.echo **PASS  AND  zpy  (as aby)

		And 	$12,Y
		And 	bak08,y
		And 	fwd08,Y


:	; forward ref for AND

; -------------------------------

:	; backward ref for ASL

		.echo **PASS  ASL  ab

		ASL 	$1234
		ASL 	bak16
		ASL 	fwd16

		.echo **FAIL  ASL  abi

		asl 	($1234)
		asl 	(bak16)
		asl 	(fwd16)

		.echo **PASS  ASL  abx

		ASL 	$1234,X
		ASL 	bak16,x
		ASL 	fwd16,X

		.echo **FAIL  ASL  abxi

		asl 	($1234,X)
		asl 	(bak16,x)
		asl 	(fwd16,X)

		.echo **FAIL  ASL  aby

		asl 	$1234,Y
		asl 	bak16,y
		asl 	fwd16,Y

		.echo **PASS  ASL  acc

		ASL 	A
		ASL 	a

		.echo **FAIL  ASL  bmv

		asl 	#$12, #$34
		asl 	#bak08, #fwd08
		asl 	$123456, $789ABC
		asl 	bak24, fwd24

		.echo **FAIL  ASL  imm

		asl 	#$12
		asl 	#bak08
		asl 	#fwd08

		.echo **PASS  ASL  imp

		ASL 

		.echo **PASS  ASL  lab  (as ab)

		Asl 	$123456
		Asl 	bak24
		Asl 	fwd24

		.echo **FAIL  ASL  labi

		asl 	[$123456]
		asl 	[bak24]
		asl 	[fwd24]

		.echo **PASS  ASL  labx  (as abx)

		Asl 	$123456,X
		Asl 	bak24,x
		Asl 	fwd24,X

		.echo **PASS  ASL  lpcr  (as ab)

		Asl 	:+
		Asl 	-
		Asl 	+
		Asl 	:-

		.echo **FAIL  ASL  lzpi

		asl 	[$12]
		asl 	[bak08]
		asl 	[fwd08]

		.echo **FAIL  ASL  lzpiy

		asl 	[$12],Y
		asl 	[bak08],y
		asl 	[fwd08],Y

		.echo **PASS  ASL  pcr  (as ab)

		Asl 	:+
		Asl 	-
		Asl 	+
		Asl 	:-

		.echo **FAIL  ASL  sr

		asl 	$12,S
		asl 	bak08,s
		asl 	fwd08,S

		.echo **FAIL  ASL  sriy

		asl 	($12,s),Y
		asl 	(bak08,S),y
		asl 	(fwd08,s),Y

		.echo **PASS  ASL  zp

		ASL 	$12
		ASL 	bak08
		Asl 	fwd08   	; (absolute)

		.echo **FAIL  ASL  zpi

		asl 	($12)
		asl 	(bak08)
		asl 	(fwd08)

		.echo **FAIL  ASL  zpiy

		asl 	($12),Y
		asl 	(bak08),y
		asl 	(fwd08),Y

		.echo **PASS  ASL  zpx

		ASL 	$12,X
		ASL 	bak08,x
		Asl 	fwd08,X 	; (absolute)

		.echo **FAIL  ASL  zpxi

		asl 	($12,X)
		asl 	(bak08,x)
		asl 	(fwd08,X)

		.echo **FAIL  ASL  zpy

		asl 	$12,Y
		asl 	bak08,y
		asl 	fwd08,Y


:	; forward ref for ASL

; -------------------------------

:	; backward ref for BCC

		.echo **PASS  BCC  ab  (as pcr)

		Bcc 	$1234
		Bcc 	bak16
		Bcc 	fwd16

		.echo **FAIL  BCC  abi

		bcc 	($1234)
		bcc 	(bak16)
		bcc 	(fwd16)

		.echo **FAIL  BCC  abx

		bcc 	$1234,X
		bcc 	bak16,x
		bcc 	fwd16,X

		.echo **FAIL  BCC  abxi

		bcc 	($1234,X)
		bcc 	(bak16,x)
		bcc 	(fwd16,X)

		.echo **FAIL  BCC  aby

		bcc 	$1234,Y
		bcc 	bak16,y
		bcc 	fwd16,Y

		.echo **FAIL  BCC  acc

		bcc 	A
		bcc 	a

		.echo **FAIL  BCC  bmv

		bcc 	#$12, #$34
		bcc 	#bak08, #fwd08
		bcc 	$123456, $789ABC
		bcc 	bak24, fwd24

		.echo **FAIL  BCC  imm

		bcc 	#$12
		bcc 	#bak08
		bcc 	#fwd08

		.echo **FAIL  BCC  imp

		bcc 

		.echo **PASS  BCC  lab  (as pcr)

		Bcc 	$123456
		Bcc 	bak24
		Bcc 	fwd24

		.echo **FAIL  BCC  labi

		bcc 	[$123456]
		bcc 	[bak24]
		bcc 	[fwd24]

		.echo **FAIL  BCC  labx

		bcc 	$123456,X
		bcc 	bak24,x
		bcc 	fwd24,X

		.echo **PASS  BCC  lpcr  (as pcr)

		Bcc 	:+
		Bcc 	-
		Bcc 	+
		Bcc 	:-

		.echo **FAIL  BCC  lzpi

		bcc 	[$12]
		bcc 	[bak08]
		bcc 	[fwd08]

		.echo **FAIL  BCC  lzpiy

		bcc 	[$12],Y
		bcc 	[bak08],y
		bcc 	[fwd08],Y

		.echo **PASS  BCC  pcr

		BCC 	:+
		BCC 	-
		BCC 	+
		BCC 	:-

		.echo **FAIL  BCC  sr

		bcc 	$12,S
		bcc 	bak08,s
		bcc 	fwd08,S

		.echo **FAIL  BCC  sriy

		bcc 	($12,s),Y
		bcc 	(bak08,S),y
		bcc 	(fwd08,s),Y

		.echo **PASS  BCC  zp  (as pcr)

		Bcc 	$12
		Bcc 	bak08
		Bcc 	fwd08

		.echo **FAIL  BCC  zpi

		bcc 	($12)
		bcc 	(bak08)
		bcc 	(fwd08)

		.echo **FAIL  BCC  zpiy

		bcc 	($12),Y
		bcc 	(bak08),y
		bcc 	(fwd08),Y

		.echo **FAIL  BCC  zpx

		bcc 	$12,X
		bcc 	bak08,x
		bcc 	fwd08,X

		.echo **FAIL  BCC  zpxi

		bcc 	($12,X)
		bcc 	(bak08,x)
		bcc 	(fwd08,X)

		.echo **FAIL  BCC  zpy

		bcc 	$12,Y
		bcc 	bak08,y
		bcc 	fwd08,Y


:	; forward ref for BCC

; -------------------------------

:	; backward ref for BCS

		.echo **PASS  BCS  ab  (as pcr)

		Bcs 	$1234
		Bcs 	bak16
		Bcs 	fwd16

		.echo **FAIL  BCS  abi

		bcs 	($1234)
		bcs 	(bak16)
		bcs 	(fwd16)

		.echo **FAIL  BCS  abx

		bcs 	$1234,X
		bcs 	bak16,x
		bcs 	fwd16,X

		.echo **FAIL  BCS  abxi

		bcs 	($1234,X)
		bcs 	(bak16,x)
		bcs 	(fwd16,X)

		.echo **FAIL  BCS  aby

		bcs 	$1234,Y
		bcs 	bak16,y
		bcs 	fwd16,Y

		.echo **FAIL  BCS  acc

		bcs 	A
		bcs 	a

		.echo **FAIL  BCS  bmv

		bcs 	#$12, #$34
		bcs 	#bak08, #fwd08
		bcs 	$123456, $789ABC
		bcs 	bak24, fwd24

		.echo **FAIL  BCS  imm

		bcs 	#$12
		bcs 	#bak08
		bcs 	#fwd08

		.echo **FAIL  BCS  imp

		bcs 

		.echo **PASS  BCS  lab  (as pcr)

		Bcs 	$123456
		Bcs 	bak24
		Bcs 	fwd24

		.echo **FAIL  BCS  labi

		bcs 	[$123456]
		bcs 	[bak24]
		bcs 	[fwd24]

		.echo **FAIL  BCS  labx

		bcs 	$123456,X
		bcs 	bak24,x
		bcs 	fwd24,X

		.echo **PASS  BCS  lpcr  (as pcr)

		Bcs 	:+
		Bcs 	-
		Bcs 	+
		Bcs 	:-

		.echo **FAIL  BCS  lzpi

		bcs 	[$12]
		bcs 	[bak08]
		bcs 	[fwd08]

		.echo **FAIL  BCS  lzpiy

		bcs 	[$12],Y
		bcs 	[bak08],y
		bcs 	[fwd08],Y

		.echo **PASS  BCS  pcr

		BCS 	:+
		BCS 	-
		BCS 	+
		BCS 	:-

		.echo **FAIL  BCS  sr

		bcs 	$12,S
		bcs 	bak08,s
		bcs 	fwd08,S

		.echo **FAIL  BCS  sriy

		bcs 	($12,s),Y
		bcs 	(bak08,S),y
		bcs 	(fwd08,s),Y

		.echo **PASS  BCS  zp  (as pcr)

		Bcs 	$12
		Bcs 	bak08
		Bcs 	fwd08

		.echo **FAIL  BCS  zpi

		bcs 	($12)
		bcs 	(bak08)
		bcs 	(fwd08)

		.echo **FAIL  BCS  zpiy

		bcs 	($12),Y
		bcs 	(bak08),y
		bcs 	(fwd08),Y

		.echo **FAIL  BCS  zpx

		bcs 	$12,X
		bcs 	bak08,x
		bcs 	fwd08,X

		.echo **FAIL  BCS  zpxi

		bcs 	($12,X)
		bcs 	(bak08,x)
		bcs 	(fwd08,X)

		.echo **FAIL  BCS  zpy

		bcs 	$12,Y
		bcs 	bak08,y
		bcs 	fwd08,Y


:	; forward ref for BCS

; -------------------------------

:	; backward ref for BEQ

		.echo **PASS  BEQ  ab  (as pcr)

		Beq 	$1234
		Beq 	bak16
		Beq 	fwd16

		.echo **FAIL  BEQ  abi

		beq 	($1234)
		beq 	(bak16)
		beq 	(fwd16)

		.echo **FAIL  BEQ  abx

		beq 	$1234,X
		beq 	bak16,x
		beq 	fwd16,X

		.echo **FAIL  BEQ  abxi

		beq 	($1234,X)
		beq 	(bak16,x)
		beq 	(fwd16,X)

		.echo **FAIL  BEQ  aby

		beq 	$1234,Y
		beq 	bak16,y
		beq 	fwd16,Y

		.echo **FAIL  BEQ  acc

		beq 	A
		beq 	a

		.echo **FAIL  BEQ  bmv

		beq 	#$12, #$34
		beq 	#bak08, #fwd08
		beq 	$123456, $789ABC
		beq 	bak24, fwd24

		.echo **FAIL  BEQ  imm

		beq 	#$12
		beq 	#bak08
		beq 	#fwd08

		.echo **FAIL  BEQ  imp

		beq 

		.echo **PASS  BEQ  lab  (as pcr)

		Beq 	$123456
		Beq 	bak24
		Beq 	fwd24

		.echo **FAIL  BEQ  labi

		beq 	[$123456]
		beq 	[bak24]
		beq 	[fwd24]

		.echo **FAIL  BEQ  labx

		beq 	$123456,X
		beq 	bak24,x
		beq 	fwd24,X

		.echo **PASS  BEQ  lpcr  (as pcr)

		Beq 	:+
		Beq 	-
		Beq 	+
		Beq 	:-

		.echo **FAIL  BEQ  lzpi

		beq 	[$12]
		beq 	[bak08]
		beq 	[fwd08]

		.echo **FAIL  BEQ  lzpiy

		beq 	[$12],Y
		beq 	[bak08],y
		beq 	[fwd08],Y

		.echo **PASS  BEQ  pcr

		BEQ 	:+
		BEQ 	-
		BEQ 	+
		BEQ 	:-

		.echo **FAIL  BEQ  sr

		beq 	$12,S
		beq 	bak08,s
		beq 	fwd08,S

		.echo **FAIL  BEQ  sriy

		beq 	($12,s),Y
		beq 	(bak08,S),y
		beq 	(fwd08,s),Y

		.echo **PASS  BEQ  zp  (as pcr)

		Beq 	$12
		Beq 	bak08
		Beq 	fwd08

		.echo **FAIL  BEQ  zpi

		beq 	($12)
		beq 	(bak08)
		beq 	(fwd08)

		.echo **FAIL  BEQ  zpiy

		beq 	($12),Y
		beq 	(bak08),y
		beq 	(fwd08),Y

		.echo **FAIL  BEQ  zpx

		beq 	$12,X
		beq 	bak08,x
		beq 	fwd08,X

		.echo **FAIL  BEQ  zpxi

		beq 	($12,X)
		beq 	(bak08,x)
		beq 	(fwd08,X)

		.echo **FAIL  BEQ  zpy

		beq 	$12,Y
		beq 	bak08,y
		beq 	fwd08,Y


:	; forward ref for BEQ

; -------------------------------

:	; backward ref for BGE

		.echo **PASS  BGE  ab  (as pcr)

		Bge 	$1234
		Bge 	bak16
		Bge 	fwd16

		.echo **FAIL  BGE  abi

		bge 	($1234)
		bge 	(bak16)
		bge 	(fwd16)

		.echo **FAIL  BGE  abx

		bge 	$1234,X
		bge 	bak16,x
		bge 	fwd16,X

		.echo **FAIL  BGE  abxi

		bge 	($1234,X)
		bge 	(bak16,x)
		bge 	(fwd16,X)

		.echo **FAIL  BGE  aby

		bge 	$1234,Y
		bge 	bak16,y
		bge 	fwd16,Y

		.echo **FAIL  BGE  acc

		bge 	A
		bge 	a

		.echo **FAIL  BGE  bmv

		bge 	#$12, #$34
		bge 	#bak08, #fwd08
		bge 	$123456, $789ABC
		bge 	bak24, fwd24

		.echo **FAIL  BGE  imm

		bge 	#$12
		bge 	#bak08
		bge 	#fwd08

		.echo **FAIL  BGE  imp

		bge 

		.echo **PASS  BGE  lab  (as pcr)

		Bge 	$123456
		Bge 	bak24
		Bge 	fwd24

		.echo **FAIL  BGE  labi

		bge 	[$123456]
		bge 	[bak24]
		bge 	[fwd24]

		.echo **FAIL  BGE  labx

		bge 	$123456,X
		bge 	bak24,x
		bge 	fwd24,X

		.echo **PASS  BGE  lpcr  (as pcr)

		Bge 	:+
		Bge 	-
		Bge 	+
		Bge 	:-

		.echo **FAIL  BGE  lzpi

		bge 	[$12]
		bge 	[bak08]
		bge 	[fwd08]

		.echo **FAIL  BGE  lzpiy

		bge 	[$12],Y
		bge 	[bak08],y
		bge 	[fwd08],Y

		.echo **PASS  BGE  pcr

		BGE 	:+
		BGE 	-
		BGE 	+
		BGE 	:-

		.echo **FAIL  BGE  sr

		bge 	$12,S
		bge 	bak08,s
		bge 	fwd08,S

		.echo **FAIL  BGE  sriy

		bge 	($12,s),Y
		bge 	(bak08,S),y
		bge 	(fwd08,s),Y

		.echo **PASS  BGE  zp  (as pcr)

		Bge 	$12
		Bge 	bak08
		Bge 	fwd08

		.echo **FAIL  BGE  zpi

		bge 	($12)
		bge 	(bak08)
		bge 	(fwd08)

		.echo **FAIL  BGE  zpiy

		bge 	($12),Y
		bge 	(bak08),y
		bge 	(fwd08),Y

		.echo **FAIL  BGE  zpx

		bge 	$12,X
		bge 	bak08,x
		bge 	fwd08,X

		.echo **FAIL  BGE  zpxi

		bge 	($12,X)
		bge 	(bak08,x)
		bge 	(fwd08,X)

		.echo **FAIL  BGE  zpy

		bge 	$12,Y
		bge 	bak08,y
		bge 	fwd08,Y


:	; forward ref for BGE

; -------------------------------

:	; backward ref for BIT

		.echo **PASS  BIT  ab

		BIT 	$1234
		BIT 	bak16
		BIT 	fwd16

		.echo **FAIL  BIT  abi

		bit 	($1234)
		bit 	(bak16)
		bit 	(fwd16)

		.echo **PASS  BIT  abx

		BIT 	$1234,X
		BIT 	bak16,x
		BIT 	fwd16,X

		.echo **FAIL  BIT  abxi

		bit 	($1234,X)
		bit 	(bak16,x)
		bit 	(fwd16,X)

		.echo **FAIL  BIT  aby

		bit 	$1234,Y
		bit 	bak16,y
		bit 	fwd16,Y

		.echo **FAIL  BIT  acc

		bit 	A
		bit 	a

		.echo **FAIL  BIT  bmv

		bit 	#$12, #$34
		bit 	#bak08, #fwd08
		bit 	$123456, $789ABC
		bit 	bak24, fwd24

		.echo **PASS  BIT  imm

		BIT 	#$12
		BIT 	#bak08
		BIT 	#fwd08

		.echo **FAIL  BIT  imp

		bit 

		.echo **PASS  BIT  lab  (as ab)

		Bit 	$123456
		Bit 	bak24
		Bit 	fwd24

		.echo **FAIL  BIT  labi

		bit 	[$123456]
		bit 	[bak24]
		bit 	[fwd24]

		.echo **PASS  BIT  labx  (as abx)

		Bit 	$123456,X
		Bit 	bak24,x
		Bit 	fwd24,X

		.echo **PASS  BIT  lpcr  (as ab)

		Bit 	:+
		Bit 	-
		Bit 	+
		Bit 	:-

		.echo **FAIL  BIT  lzpi

		bit 	[$12]
		bit 	[bak08]
		bit 	[fwd08]

		.echo **FAIL  BIT  lzpiy

		bit 	[$12],Y
		bit 	[bak08],y
		bit 	[fwd08],Y

		.echo **PASS  BIT  pcr  (as ab)

		Bit 	:+
		Bit 	-
		Bit 	+
		Bit 	:-

		.echo **FAIL  BIT  sr

		bit 	$12,S
		bit 	bak08,s
		bit 	fwd08,S

		.echo **FAIL  BIT  sriy

		bit 	($12,s),Y
		bit 	(bak08,S),y
		bit 	(fwd08,s),Y

		.echo **PASS  BIT  zp

		BIT 	$12
		BIT 	bak08
		Bit 	fwd08   	; (absolute)

		.echo **FAIL  BIT  zpi

		bit 	($12)
		bit 	(bak08)
		bit 	(fwd08)

		.echo **FAIL  BIT  zpiy

		bit 	($12),Y
		bit 	(bak08),y
		bit 	(fwd08),Y

		.echo **PASS  BIT  zpx

		BIT 	$12,X
		BIT 	bak08,x
		Bit 	fwd08,X 	; (absolute)

		.echo **FAIL  BIT  zpxi

		bit 	($12,X)
		bit 	(bak08,x)
		bit 	(fwd08,X)

		.echo **FAIL  BIT  zpy

		bit 	$12,Y
		bit 	bak08,y
		bit 	fwd08,Y


:	; forward ref for BIT

; -------------------------------

:	; backward ref for BLT

		.echo **PASS  BLT  ab  (as pcr)

		Blt 	$1234
		Blt 	bak16
		Blt 	fwd16

		.echo **FAIL  BLT  abi

		blt 	($1234)
		blt 	(bak16)
		blt 	(fwd16)

		.echo **FAIL  BLT  abx

		blt 	$1234,X
		blt 	bak16,x
		blt 	fwd16,X

		.echo **FAIL  BLT  abxi

		blt 	($1234,X)
		blt 	(bak16,x)
		blt 	(fwd16,X)

		.echo **FAIL  BLT  aby

		blt 	$1234,Y
		blt 	bak16,y
		blt 	fwd16,Y

		.echo **FAIL  BLT  acc

		blt 	A
		blt 	a

		.echo **FAIL  BLT  bmv

		blt 	#$12, #$34
		blt 	#bak08, #fwd08
		blt 	$123456, $789ABC
		blt 	bak24, fwd24

		.echo **FAIL  BLT  imm

		blt 	#$12
		blt 	#bak08
		blt 	#fwd08

		.echo **FAIL  BLT  imp

		blt 

		.echo **PASS  BLT  lab  (as pcr)

		Blt 	$123456
		Blt 	bak24
		Blt 	fwd24

		.echo **FAIL  BLT  labi

		blt 	[$123456]
		blt 	[bak24]
		blt 	[fwd24]

		.echo **FAIL  BLT  labx

		blt 	$123456,X
		blt 	bak24,x
		blt 	fwd24,X

		.echo **PASS  BLT  lpcr  (as pcr)

		Blt 	:+
		Blt 	-
		Blt 	+
		Blt 	:-

		.echo **FAIL  BLT  lzpi

		blt 	[$12]
		blt 	[bak08]
		blt 	[fwd08]

		.echo **FAIL  BLT  lzpiy

		blt 	[$12],Y
		blt 	[bak08],y
		blt 	[fwd08],Y

		.echo **PASS  BLT  pcr

		BLT 	:+
		BLT 	-
		BLT 	+
		BLT 	:-

		.echo **FAIL  BLT  sr

		blt 	$12,S
		blt 	bak08,s
		blt 	fwd08,S

		.echo **FAIL  BLT  sriy

		blt 	($12,s),Y
		blt 	(bak08,S),y
		blt 	(fwd08,s),Y

		.echo **PASS  BLT  zp  (as pcr)

		Blt 	$12
		Blt 	bak08
		Blt 	fwd08

		.echo **FAIL  BLT  zpi

		blt 	($12)
		blt 	(bak08)
		blt 	(fwd08)

		.echo **FAIL  BLT  zpiy

		blt 	($12),Y
		blt 	(bak08),y
		blt 	(fwd08),Y

		.echo **FAIL  BLT  zpx

		blt 	$12,X
		blt 	bak08,x
		blt 	fwd08,X

		.echo **FAIL  BLT  zpxi

		blt 	($12,X)
		blt 	(bak08,x)
		blt 	(fwd08,X)

		.echo **FAIL  BLT  zpy

		blt 	$12,Y
		blt 	bak08,y
		blt 	fwd08,Y


:	; forward ref for BLT

; -------------------------------

:	; backward ref for BMI

		.echo **PASS  BMI  ab  (as pcr)

		Bmi 	$1234
		Bmi 	bak16
		Bmi 	fwd16

		.echo **FAIL  BMI  abi

		bmi 	($1234)
		bmi 	(bak16)
		bmi 	(fwd16)

		.echo **FAIL  BMI  abx

		bmi 	$1234,X
		bmi 	bak16,x
		bmi 	fwd16,X

		.echo **FAIL  BMI  abxi

		bmi 	($1234,X)
		bmi 	(bak16,x)
		bmi 	(fwd16,X)

		.echo **FAIL  BMI  aby

		bmi 	$1234,Y
		bmi 	bak16,y
		bmi 	fwd16,Y

		.echo **FAIL  BMI  acc

		bmi 	A
		bmi 	a

		.echo **FAIL  BMI  bmv

		bmi 	#$12, #$34
		bmi 	#bak08, #fwd08
		bmi 	$123456, $789ABC
		bmi 	bak24, fwd24

		.echo **FAIL  BMI  imm

		bmi 	#$12
		bmi 	#bak08
		bmi 	#fwd08

		.echo **FAIL  BMI  imp

		bmi 

		.echo **PASS  BMI  lab  (as pcr)

		Bmi 	$123456
		Bmi 	bak24
		Bmi 	fwd24

		.echo **FAIL  BMI  labi

		bmi 	[$123456]
		bmi 	[bak24]
		bmi 	[fwd24]

		.echo **FAIL  BMI  labx

		bmi 	$123456,X
		bmi 	bak24,x
		bmi 	fwd24,X

		.echo **PASS  BMI  lpcr  (as pcr)

		Bmi 	:+
		Bmi 	-
		Bmi 	+
		Bmi 	:-

		.echo **FAIL  BMI  lzpi

		bmi 	[$12]
		bmi 	[bak08]
		bmi 	[fwd08]

		.echo **FAIL  BMI  lzpiy

		bmi 	[$12],Y
		bmi 	[bak08],y
		bmi 	[fwd08],Y

		.echo **PASS  BMI  pcr

		BMI 	:+
		BMI 	-
		BMI 	+
		BMI 	:-

		.echo **FAIL  BMI  sr

		bmi 	$12,S
		bmi 	bak08,s
		bmi 	fwd08,S

		.echo **FAIL  BMI  sriy

		bmi 	($12,s),Y
		bmi 	(bak08,S),y
		bmi 	(fwd08,s),Y

		.echo **PASS  BMI  zp  (as pcr)

		Bmi 	$12
		Bmi 	bak08
		Bmi 	fwd08

		.echo **FAIL  BMI  zpi

		bmi 	($12)
		bmi 	(bak08)
		bmi 	(fwd08)

		.echo **FAIL  BMI  zpiy

		bmi 	($12),Y
		bmi 	(bak08),y
		bmi 	(fwd08),Y

		.echo **FAIL  BMI  zpx

		bmi 	$12,X
		bmi 	bak08,x
		bmi 	fwd08,X

		.echo **FAIL  BMI  zpxi

		bmi 	($12,X)
		bmi 	(bak08,x)
		bmi 	(fwd08,X)

		.echo **FAIL  BMI  zpy

		bmi 	$12,Y
		bmi 	bak08,y
		bmi 	fwd08,Y


:	; forward ref for BMI

; -------------------------------

:	; backward ref for BNE

		.echo **PASS  BNE  ab  (as pcr)

		Bne 	$1234
		Bne 	bak16
		Bne 	fwd16

		.echo **FAIL  BNE  abi

		bne 	($1234)
		bne 	(bak16)
		bne 	(fwd16)

		.echo **FAIL  BNE  abx

		bne 	$1234,X
		bne 	bak16,x
		bne 	fwd16,X

		.echo **FAIL  BNE  abxi

		bne 	($1234,X)
		bne 	(bak16,x)
		bne 	(fwd16,X)

		.echo **FAIL  BNE  aby

		bne 	$1234,Y
		bne 	bak16,y
		bne 	fwd16,Y

		.echo **FAIL  BNE  acc

		bne 	A
		bne 	a

		.echo **FAIL  BNE  bmv

		bne 	#$12, #$34
		bne 	#bak08, #fwd08
		bne 	$123456, $789ABC
		bne 	bak24, fwd24

		.echo **FAIL  BNE  imm

		bne 	#$12
		bne 	#bak08
		bne 	#fwd08

		.echo **FAIL  BNE  imp

		bne 

		.echo **PASS  BNE  lab  (as pcr)

		Bne 	$123456
		Bne 	bak24
		Bne 	fwd24

		.echo **FAIL  BNE  labi

		bne 	[$123456]
		bne 	[bak24]
		bne 	[fwd24]

		.echo **FAIL  BNE  labx

		bne 	$123456,X
		bne 	bak24,x
		bne 	fwd24,X

		.echo **PASS  BNE  lpcr  (as pcr)

		Bne 	:+
		Bne 	-
		Bne 	+
		Bne 	:-

		.echo **FAIL  BNE  lzpi

		bne 	[$12]
		bne 	[bak08]
		bne 	[fwd08]

		.echo **FAIL  BNE  lzpiy

		bne 	[$12],Y
		bne 	[bak08],y
		bne 	[fwd08],Y

		.echo **PASS  BNE  pcr

		BNE 	:+
		BNE 	-
		BNE 	+
		BNE 	:-

		.echo **FAIL  BNE  sr

		bne 	$12,S
		bne 	bak08,s
		bne 	fwd08,S

		.echo **FAIL  BNE  sriy

		bne 	($12,s),Y
		bne 	(bak08,S),y
		bne 	(fwd08,s),Y

		.echo **PASS  BNE  zp  (as pcr)

		Bne 	$12
		Bne 	bak08
		Bne 	fwd08

		.echo **FAIL  BNE  zpi

		bne 	($12)
		bne 	(bak08)
		bne 	(fwd08)

		.echo **FAIL  BNE  zpiy

		bne 	($12),Y
		bne 	(bak08),y
		bne 	(fwd08),Y

		.echo **FAIL  BNE  zpx

		bne 	$12,X
		bne 	bak08,x
		bne 	fwd08,X

		.echo **FAIL  BNE  zpxi

		bne 	($12,X)
		bne 	(bak08,x)
		bne 	(fwd08,X)

		.echo **FAIL  BNE  zpy

		bne 	$12,Y
		bne 	bak08,y
		bne 	fwd08,Y


:	; forward ref for BNE

; -------------------------------

:	; backward ref for BPL

		.echo **PASS  BPL  ab  (as pcr)

		Bpl 	$1234
		Bpl 	bak16
		Bpl 	fwd16

		.echo **FAIL  BPL  abi

		bpl 	($1234)
		bpl 	(bak16)
		bpl 	(fwd16)

		.echo **FAIL  BPL  abx

		bpl 	$1234,X
		bpl 	bak16,x
		bpl 	fwd16,X

		.echo **FAIL  BPL  abxi

		bpl 	($1234,X)
		bpl 	(bak16,x)
		bpl 	(fwd16,X)

		.echo **FAIL  BPL  aby

		bpl 	$1234,Y
		bpl 	bak16,y
		bpl 	fwd16,Y

		.echo **FAIL  BPL  acc

		bpl 	A
		bpl 	a

		.echo **FAIL  BPL  bmv

		bpl 	#$12, #$34
		bpl 	#bak08, #fwd08
		bpl 	$123456, $789ABC
		bpl 	bak24, fwd24

		.echo **FAIL  BPL  imm

		bpl 	#$12
		bpl 	#bak08
		bpl 	#fwd08

		.echo **FAIL  BPL  imp

		bpl 

		.echo **PASS  BPL  lab  (as pcr)

		Bpl 	$123456
		Bpl 	bak24
		Bpl 	fwd24

		.echo **FAIL  BPL  labi

		bpl 	[$123456]
		bpl 	[bak24]
		bpl 	[fwd24]

		.echo **FAIL  BPL  labx

		bpl 	$123456,X
		bpl 	bak24,x
		bpl 	fwd24,X

		.echo **PASS  BPL  lpcr  (as pcr)

		Bpl 	:+
		Bpl 	-
		Bpl 	+
		Bpl 	:-

		.echo **FAIL  BPL  lzpi

		bpl 	[$12]
		bpl 	[bak08]
		bpl 	[fwd08]

		.echo **FAIL  BPL  lzpiy

		bpl 	[$12],Y
		bpl 	[bak08],y
		bpl 	[fwd08],Y

		.echo **PASS  BPL  pcr

		BPL 	:+
		BPL 	-
		BPL 	+
		BPL 	:-

		.echo **FAIL  BPL  sr

		bpl 	$12,S
		bpl 	bak08,s
		bpl 	fwd08,S

		.echo **FAIL  BPL  sriy

		bpl 	($12,s),Y
		bpl 	(bak08,S),y
		bpl 	(fwd08,s),Y

		.echo **PASS  BPL  zp  (as pcr)

		Bpl 	$12
		Bpl 	bak08
		Bpl 	fwd08

		.echo **FAIL  BPL  zpi

		bpl 	($12)
		bpl 	(bak08)
		bpl 	(fwd08)

		.echo **FAIL  BPL  zpiy

		bpl 	($12),Y
		bpl 	(bak08),y
		bpl 	(fwd08),Y

		.echo **FAIL  BPL  zpx

		bpl 	$12,X
		bpl 	bak08,x
		bpl 	fwd08,X

		.echo **FAIL  BPL  zpxi

		bpl 	($12,X)
		bpl 	(bak08,x)
		bpl 	(fwd08,X)

		.echo **FAIL  BPL  zpy

		bpl 	$12,Y
		bpl 	bak08,y
		bpl 	fwd08,Y


:	; forward ref for BPL

; -------------------------------

:	; backward ref for BRA

		.echo **PASS  BRA  ab  (as pcr)

		Bra 	$1234
		Bra 	bak16
		Bra 	fwd16

		.echo **FAIL  BRA  abi

		bra 	($1234)
		bra 	(bak16)
		bra 	(fwd16)

		.echo **FAIL  BRA  abx

		bra 	$1234,X
		bra 	bak16,x
		bra 	fwd16,X

		.echo **FAIL  BRA  abxi

		bra 	($1234,X)
		bra 	(bak16,x)
		bra 	(fwd16,X)

		.echo **FAIL  BRA  aby

		bra 	$1234,Y
		bra 	bak16,y
		bra 	fwd16,Y

		.echo **FAIL  BRA  acc

		bra 	A
		bra 	a

		.echo **FAIL  BRA  bmv

		bra 	#$12, #$34
		bra 	#bak08, #fwd08
		bra 	$123456, $789ABC
		bra 	bak24, fwd24

		.echo **FAIL  BRA  imm

		bra 	#$12
		bra 	#bak08
		bra 	#fwd08

		.echo **FAIL  BRA  imp

		bra 

		.echo **PASS  BRA  lab  (as pcr)

		Bra 	$123456
		Bra 	bak24
		Bra 	fwd24

		.echo **FAIL  BRA  labi

		bra 	[$123456]
		bra 	[bak24]
		bra 	[fwd24]

		.echo **FAIL  BRA  labx

		bra 	$123456,X
		bra 	bak24,x
		bra 	fwd24,X

		.echo **PASS  BRA  lpcr  (as pcr)

		Bra 	:+
		Bra 	-
		Bra 	+
		Bra 	:-

		.echo **FAIL  BRA  lzpi

		bra 	[$12]
		bra 	[bak08]
		bra 	[fwd08]

		.echo **FAIL  BRA  lzpiy

		bra 	[$12],Y
		bra 	[bak08],y
		bra 	[fwd08],Y

		.echo **PASS  BRA  pcr

		BRA 	:+
		BRA 	-
		BRA 	+
		BRA 	:-

		.echo **FAIL  BRA  sr

		bra 	$12,S
		bra 	bak08,s
		bra 	fwd08,S

		.echo **FAIL  BRA  sriy

		bra 	($12,s),Y
		bra 	(bak08,S),y
		bra 	(fwd08,s),Y

		.echo **PASS  BRA  zp  (as pcr)

		Bra 	$12
		Bra 	bak08
		Bra 	fwd08

		.echo **FAIL  BRA  zpi

		bra 	($12)
		bra 	(bak08)
		bra 	(fwd08)

		.echo **FAIL  BRA  zpiy

		bra 	($12),Y
		bra 	(bak08),y
		bra 	(fwd08),Y

		.echo **FAIL  BRA  zpx

		bra 	$12,X
		bra 	bak08,x
		bra 	fwd08,X

		.echo **FAIL  BRA  zpxi

		bra 	($12,X)
		bra 	(bak08,x)
		bra 	(fwd08,X)

		.echo **FAIL  BRA  zpy

		bra 	$12,Y
		bra 	bak08,y
		bra 	fwd08,Y


:	; forward ref for BRA

; -------------------------------

:	; backward ref for BRK

		.echo **PASS  BRK  ab  (as zp)

		Brk 	$1234
		Brk 	bak16
		Brk 	fwd16

		.echo **FAIL  BRK  abi

		brk 	($1234)
		brk 	(bak16)
		brk 	(fwd16)

		.echo **FAIL  BRK  abx

		brk 	$1234,X
		brk 	bak16,x
		brk 	fwd16,X

		.echo **FAIL  BRK  abxi

		brk 	($1234,X)
		brk 	(bak16,x)
		brk 	(fwd16,X)

		.echo **FAIL  BRK  aby

		brk 	$1234,Y
		brk 	bak16,y
		brk 	fwd16,Y

		.echo **FAIL  BRK  acc

		brk 	A
		brk 	a

		.echo **FAIL  BRK  bmv

		brk 	#$12, #$34
		brk 	#bak08, #fwd08
		brk 	$123456, $789ABC
		brk 	bak24, fwd24

		.echo **PASS  BRK  imm

		BRK 	#$12
		BRK 	#bak08
		BRK 	#fwd08

		.echo **PASS  BRK  imp

		BRK 

		.echo **PASS  BRK  lab  (as zp)

		Brk 	$123456
		Brk 	bak24
		Brk 	fwd24

		.echo **FAIL  BRK  labi

		brk 	[$123456]
		brk 	[bak24]
		brk 	[fwd24]

		.echo **FAIL  BRK  labx

		brk 	$123456,X
		brk 	bak24,x
		brk 	fwd24,X

		.echo **PASS  BRK  lpcr  (as zp)

		Brk 	:+
		Brk 	-
		Brk 	+
		Brk 	:-

		.echo **FAIL  BRK  lzpi

		brk 	[$12]
		brk 	[bak08]
		brk 	[fwd08]

		.echo **FAIL  BRK  lzpiy

		brk 	[$12],Y
		brk 	[bak08],y
		brk 	[fwd08],Y

		.echo **PASS  BRK  pcr  (as zp)

		Brk 	:+
		Brk 	-
		Brk 	+
		Brk 	:-

		.echo **FAIL  BRK  sr

		brk 	$12,S
		brk 	bak08,s
		brk 	fwd08,S

		.echo **FAIL  BRK  sriy

		brk 	($12,s),Y
		brk 	(bak08,S),y
		brk 	(fwd08,s),Y

		.echo **PASS  BRK  zp

		BRK 	$12
		BRK 	bak08
		BRK 	fwd08

		.echo **FAIL  BRK  zpi

		brk 	($12)
		brk 	(bak08)
		brk 	(fwd08)

		.echo **FAIL  BRK  zpiy

		brk 	($12),Y
		brk 	(bak08),y
		brk 	(fwd08),Y

		.echo **FAIL  BRK  zpx

		brk 	$12,X
		brk 	bak08,x
		brk 	fwd08,X

		.echo **FAIL  BRK  zpxi

		brk 	($12,X)
		brk 	(bak08,x)
		brk 	(fwd08,X)

		.echo **FAIL  BRK  zpy

		brk 	$12,Y
		brk 	bak08,y
		brk 	fwd08,Y


:	; forward ref for BRK

; -------------------------------

:	; backward ref for BRL

		.echo **PASS  BRL  ab  (as lpcr)

		Brl 	$1234
		Brl 	bak16
		Brl 	fwd16

		.echo **FAIL  BRL  abi

		brl 	($1234)
		brl 	(bak16)
		brl 	(fwd16)

		.echo **FAIL  BRL  abx

		brl 	$1234,X
		brl 	bak16,x
		brl 	fwd16,X

		.echo **FAIL  BRL  abxi

		brl 	($1234,X)
		brl 	(bak16,x)
		brl 	(fwd16,X)

		.echo **FAIL  BRL  aby

		brl 	$1234,Y
		brl 	bak16,y
		brl 	fwd16,Y

		.echo **FAIL  BRL  acc

		brl 	A
		brl 	a

		.echo **FAIL  BRL  bmv

		brl 	#$12, #$34
		brl 	#bak08, #fwd08
		brl 	$123456, $789ABC
		brl 	bak24, fwd24

		.echo **FAIL  BRL  imm

		brl 	#$12
		brl 	#bak08
		brl 	#fwd08

		.echo **FAIL  BRL  imp

		brl 

		.echo **PASS  BRL  lab  (as lpcr)

		Brl 	$123456
		Brl 	bak24
		Brl 	fwd24

		.echo **FAIL  BRL  labi

		brl 	[$123456]
		brl 	[bak24]
		brl 	[fwd24]

		.echo **FAIL  BRL  labx

		brl 	$123456,X
		brl 	bak24,x
		brl 	fwd24,X

		.echo **PASS  BRL  lpcr

		BRL 	:+
		BRL 	-
		BRL 	+
		BRL 	:-

		.echo **FAIL  BRL  lzpi

		brl 	[$12]
		brl 	[bak08]
		brl 	[fwd08]

		.echo **FAIL  BRL  lzpiy

		brl 	[$12],Y
		brl 	[bak08],y
		brl 	[fwd08],Y

		.echo **PASS  BRL  pcr  (as lpcr)

		Brl 	:+
		Brl 	-
		Brl 	+
		Brl 	:-

		.echo **FAIL  BRL  sr

		brl 	$12,S
		brl 	bak08,s
		brl 	fwd08,S

		.echo **FAIL  BRL  sriy

		brl 	($12,s),Y
		brl 	(bak08,S),y
		brl 	(fwd08,s),Y

		.echo **PASS  BRL  zp  (as lpcr)

		Brl 	$12
		Brl 	bak08
		Brl 	fwd08

		.echo **FAIL  BRL  zpi

		brl 	($12)
		brl 	(bak08)
		brl 	(fwd08)

		.echo **FAIL  BRL  zpiy

		brl 	($12),Y
		brl 	(bak08),y
		brl 	(fwd08),Y

		.echo **FAIL  BRL  zpx

		brl 	$12,X
		brl 	bak08,x
		brl 	fwd08,X

		.echo **FAIL  BRL  zpxi

		brl 	($12,X)
		brl 	(bak08,x)
		brl 	(fwd08,X)

		.echo **FAIL  BRL  zpy

		brl 	$12,Y
		brl 	bak08,y
		brl 	fwd08,Y


:	; forward ref for BRL

; -------------------------------

:	; backward ref for BVC

		.echo **PASS  BVC  ab  (as pcr)

		Bvc 	$1234
		Bvc 	bak16
		Bvc 	fwd16

		.echo **FAIL  BVC  abi

		bvc 	($1234)
		bvc 	(bak16)
		bvc 	(fwd16)

		.echo **FAIL  BVC  abx

		bvc 	$1234,X
		bvc 	bak16,x
		bvc 	fwd16,X

		.echo **FAIL  BVC  abxi

		bvc 	($1234,X)
		bvc 	(bak16,x)
		bvc 	(fwd16,X)

		.echo **FAIL  BVC  aby

		bvc 	$1234,Y
		bvc 	bak16,y
		bvc 	fwd16,Y

		.echo **FAIL  BVC  acc

		bvc 	A
		bvc 	a

		.echo **FAIL  BVC  bmv

		bvc 	#$12, #$34
		bvc 	#bak08, #fwd08
		bvc 	$123456, $789ABC
		bvc 	bak24, fwd24

		.echo **FAIL  BVC  imm

		bvc 	#$12
		bvc 	#bak08
		bvc 	#fwd08

		.echo **FAIL  BVC  imp

		bvc 

		.echo **PASS  BVC  lab  (as pcr)

		Bvc 	$123456
		Bvc 	bak24
		Bvc 	fwd24

		.echo **FAIL  BVC  labi

		bvc 	[$123456]
		bvc 	[bak24]
		bvc 	[fwd24]

		.echo **FAIL  BVC  labx

		bvc 	$123456,X
		bvc 	bak24,x
		bvc 	fwd24,X

		.echo **PASS  BVC  lpcr  (as pcr)

		Bvc 	:+
		Bvc 	-
		Bvc 	+
		Bvc 	:-

		.echo **FAIL  BVC  lzpi

		bvc 	[$12]
		bvc 	[bak08]
		bvc 	[fwd08]

		.echo **FAIL  BVC  lzpiy

		bvc 	[$12],Y
		bvc 	[bak08],y
		bvc 	[fwd08],Y

		.echo **PASS  BVC  pcr

		BVC 	:+
		BVC 	-
		BVC 	+
		BVC 	:-

		.echo **FAIL  BVC  sr

		bvc 	$12,S
		bvc 	bak08,s
		bvc 	fwd08,S

		.echo **FAIL  BVC  sriy

		bvc 	($12,s),Y
		bvc 	(bak08,S),y
		bvc 	(fwd08,s),Y

		.echo **PASS  BVC  zp  (as pcr)

		Bvc 	$12
		Bvc 	bak08
		Bvc 	fwd08

		.echo **FAIL  BVC  zpi

		bvc 	($12)
		bvc 	(bak08)
		bvc 	(fwd08)

		.echo **FAIL  BVC  zpiy

		bvc 	($12),Y
		bvc 	(bak08),y
		bvc 	(fwd08),Y

		.echo **FAIL  BVC  zpx

		bvc 	$12,X
		bvc 	bak08,x
		bvc 	fwd08,X

		.echo **FAIL  BVC  zpxi

		bvc 	($12,X)
		bvc 	(bak08,x)
		bvc 	(fwd08,X)

		.echo **FAIL  BVC  zpy

		bvc 	$12,Y
		bvc 	bak08,y
		bvc 	fwd08,Y


:	; forward ref for BVC

; -------------------------------

:	; backward ref for BVS

		.echo **PASS  BVS  ab  (as pcr)

		Bvs 	$1234
		Bvs 	bak16
		Bvs 	fwd16

		.echo **FAIL  BVS  abi

		bvs 	($1234)
		bvs 	(bak16)
		bvs 	(fwd16)

		.echo **FAIL  BVS  abx

		bvs 	$1234,X
		bvs 	bak16,x
		bvs 	fwd16,X

		.echo **FAIL  BVS  abxi

		bvs 	($1234,X)
		bvs 	(bak16,x)
		bvs 	(fwd16,X)

		.echo **FAIL  BVS  aby

		bvs 	$1234,Y
		bvs 	bak16,y
		bvs 	fwd16,Y

		.echo **FAIL  BVS  acc

		bvs 	A
		bvs 	a

		.echo **FAIL  BVS  bmv

		bvs 	#$12, #$34
		bvs 	#bak08, #fwd08
		bvs 	$123456, $789ABC
		bvs 	bak24, fwd24

		.echo **FAIL  BVS  imm

		bvs 	#$12
		bvs 	#bak08
		bvs 	#fwd08

		.echo **FAIL  BVS  imp

		bvs 

		.echo **PASS  BVS  lab  (as pcr)

		Bvs 	$123456
		Bvs 	bak24
		Bvs 	fwd24

		.echo **FAIL  BVS  labi

		bvs 	[$123456]
		bvs 	[bak24]
		bvs 	[fwd24]

		.echo **FAIL  BVS  labx

		bvs 	$123456,X
		bvs 	bak24,x
		bvs 	fwd24,X

		.echo **PASS  BVS  lpcr  (as pcr)

		Bvs 	:+
		Bvs 	-
		Bvs 	+
		Bvs 	:-

		.echo **FAIL  BVS  lzpi

		bvs 	[$12]
		bvs 	[bak08]
		bvs 	[fwd08]

		.echo **FAIL  BVS  lzpiy

		bvs 	[$12],Y
		bvs 	[bak08],y
		bvs 	[fwd08],Y

		.echo **PASS  BVS  pcr

		BVS 	:+
		BVS 	-
		BVS 	+
		BVS 	:-

		.echo **FAIL  BVS  sr

		bvs 	$12,S
		bvs 	bak08,s
		bvs 	fwd08,S

		.echo **FAIL  BVS  sriy

		bvs 	($12,s),Y
		bvs 	(bak08,S),y
		bvs 	(fwd08,s),Y

		.echo **PASS  BVS  zp  (as pcr)

		Bvs 	$12
		Bvs 	bak08
		Bvs 	fwd08

		.echo **FAIL  BVS  zpi

		bvs 	($12)
		bvs 	(bak08)
		bvs 	(fwd08)

		.echo **FAIL  BVS  zpiy

		bvs 	($12),Y
		bvs 	(bak08),y
		bvs 	(fwd08),Y

		.echo **FAIL  BVS  zpx

		bvs 	$12,X
		bvs 	bak08,x
		bvs 	fwd08,X

		.echo **FAIL  BVS  zpxi

		bvs 	($12,X)
		bvs 	(bak08,x)
		bvs 	(fwd08,X)

		.echo **FAIL  BVS  zpy

		bvs 	$12,Y
		bvs 	bak08,y
		bvs 	fwd08,Y


:	; forward ref for BVS

; -------------------------------

:	; backward ref for CLC

		.echo **FAIL  CLC  ab

		clc 	$1234
		clc 	bak16
		clc 	fwd16

		.echo **FAIL  CLC  abi

		clc 	($1234)
		clc 	(bak16)
		clc 	(fwd16)

		.echo **FAIL  CLC  abx

		clc 	$1234,X
		clc 	bak16,x
		clc 	fwd16,X

		.echo **FAIL  CLC  abxi

		clc 	($1234,X)
		clc 	(bak16,x)
		clc 	(fwd16,X)

		.echo **FAIL  CLC  aby

		clc 	$1234,Y
		clc 	bak16,y
		clc 	fwd16,Y

		.echo **FAIL  CLC  acc

		clc 	A
		clc 	a

		.echo **FAIL  CLC  bmv

		clc 	#$12, #$34
		clc 	#bak08, #fwd08
		clc 	$123456, $789ABC
		clc 	bak24, fwd24

		.echo **FAIL  CLC  imm

		clc 	#$12
		clc 	#bak08
		clc 	#fwd08

		.echo **PASS  CLC  imp

		CLC 

		.echo **FAIL  CLC  lab

		clc 	$123456
		clc 	bak24
		clc 	fwd24

		.echo **FAIL  CLC  labi

		clc 	[$123456]
		clc 	[bak24]
		clc 	[fwd24]

		.echo **FAIL  CLC  labx

		clc 	$123456,X
		clc 	bak24,x
		clc 	fwd24,X

		.echo **FAIL  CLC  lpcr

		clc 	:+
		clc 	-
		clc 	+
		clc 	:-

		.echo **FAIL  CLC  lzpi

		clc 	[$12]
		clc 	[bak08]
		clc 	[fwd08]

		.echo **FAIL  CLC  lzpiy

		clc 	[$12],Y
		clc 	[bak08],y
		clc 	[fwd08],Y

		.echo **FAIL  CLC  pcr

		clc 	:+
		clc 	-
		clc 	+
		clc 	:-

		.echo **FAIL  CLC  sr

		clc 	$12,S
		clc 	bak08,s
		clc 	fwd08,S

		.echo **FAIL  CLC  sriy

		clc 	($12,s),Y
		clc 	(bak08,S),y
		clc 	(fwd08,s),Y

		.echo **FAIL  CLC  zp

		clc 	$12
		clc 	bak08
		clc 	fwd08

		.echo **FAIL  CLC  zpi

		clc 	($12)
		clc 	(bak08)
		clc 	(fwd08)

		.echo **FAIL  CLC  zpiy

		clc 	($12),Y
		clc 	(bak08),y
		clc 	(fwd08),Y

		.echo **FAIL  CLC  zpx

		clc 	$12,X
		clc 	bak08,x
		clc 	fwd08,X

		.echo **FAIL  CLC  zpxi

		clc 	($12,X)
		clc 	(bak08,x)
		clc 	(fwd08,X)

		.echo **FAIL  CLC  zpy

		clc 	$12,Y
		clc 	bak08,y
		clc 	fwd08,Y


:	; forward ref for CLC

; -------------------------------

:	; backward ref for CLD

		.echo **FAIL  CLD  ab

		cld 	$1234
		cld 	bak16
		cld 	fwd16

		.echo **FAIL  CLD  abi

		cld 	($1234)
		cld 	(bak16)
		cld 	(fwd16)

		.echo **FAIL  CLD  abx

		cld 	$1234,X
		cld 	bak16,x
		cld 	fwd16,X

		.echo **FAIL  CLD  abxi

		cld 	($1234,X)
		cld 	(bak16,x)
		cld 	(fwd16,X)

		.echo **FAIL  CLD  aby

		cld 	$1234,Y
		cld 	bak16,y
		cld 	fwd16,Y

		.echo **FAIL  CLD  acc

		cld 	A
		cld 	a

		.echo **FAIL  CLD  bmv

		cld 	#$12, #$34
		cld 	#bak08, #fwd08
		cld 	$123456, $789ABC
		cld 	bak24, fwd24

		.echo **FAIL  CLD  imm

		cld 	#$12
		cld 	#bak08
		cld 	#fwd08

		.echo **PASS  CLD  imp

		CLD 

		.echo **FAIL  CLD  lab

		cld 	$123456
		cld 	bak24
		cld 	fwd24

		.echo **FAIL  CLD  labi

		cld 	[$123456]
		cld 	[bak24]
		cld 	[fwd24]

		.echo **FAIL  CLD  labx

		cld 	$123456,X
		cld 	bak24,x
		cld 	fwd24,X

		.echo **FAIL  CLD  lpcr

		cld 	:+
		cld 	-
		cld 	+
		cld 	:-

		.echo **FAIL  CLD  lzpi

		cld 	[$12]
		cld 	[bak08]
		cld 	[fwd08]

		.echo **FAIL  CLD  lzpiy

		cld 	[$12],Y
		cld 	[bak08],y
		cld 	[fwd08],Y

		.echo **FAIL  CLD  pcr

		cld 	:+
		cld 	-
		cld 	+
		cld 	:-

		.echo **FAIL  CLD  sr

		cld 	$12,S
		cld 	bak08,s
		cld 	fwd08,S

		.echo **FAIL  CLD  sriy

		cld 	($12,s),Y
		cld 	(bak08,S),y
		cld 	(fwd08,s),Y

		.echo **FAIL  CLD  zp

		cld 	$12
		cld 	bak08
		cld 	fwd08

		.echo **FAIL  CLD  zpi

		cld 	($12)
		cld 	(bak08)
		cld 	(fwd08)

		.echo **FAIL  CLD  zpiy

		cld 	($12),Y
		cld 	(bak08),y
		cld 	(fwd08),Y

		.echo **FAIL  CLD  zpx

		cld 	$12,X
		cld 	bak08,x
		cld 	fwd08,X

		.echo **FAIL  CLD  zpxi

		cld 	($12,X)
		cld 	(bak08,x)
		cld 	(fwd08,X)

		.echo **FAIL  CLD  zpy

		cld 	$12,Y
		cld 	bak08,y
		cld 	fwd08,Y


:	; forward ref for CLD

; -------------------------------

:	; backward ref for CLI

		.echo **FAIL  CLI  ab

		cli 	$1234
		cli 	bak16
		cli 	fwd16

		.echo **FAIL  CLI  abi

		cli 	($1234)
		cli 	(bak16)
		cli 	(fwd16)

		.echo **FAIL  CLI  abx

		cli 	$1234,X
		cli 	bak16,x
		cli 	fwd16,X

		.echo **FAIL  CLI  abxi

		cli 	($1234,X)
		cli 	(bak16,x)
		cli 	(fwd16,X)

		.echo **FAIL  CLI  aby

		cli 	$1234,Y
		cli 	bak16,y
		cli 	fwd16,Y

		.echo **FAIL  CLI  acc

		cli 	A
		cli 	a

		.echo **FAIL  CLI  bmv

		cli 	#$12, #$34
		cli 	#bak08, #fwd08
		cli 	$123456, $789ABC
		cli 	bak24, fwd24

		.echo **FAIL  CLI  imm

		cli 	#$12
		cli 	#bak08
		cli 	#fwd08

		.echo **PASS  CLI  imp

		CLI 

		.echo **FAIL  CLI  lab

		cli 	$123456
		cli 	bak24
		cli 	fwd24

		.echo **FAIL  CLI  labi

		cli 	[$123456]
		cli 	[bak24]
		cli 	[fwd24]

		.echo **FAIL  CLI  labx

		cli 	$123456,X
		cli 	bak24,x
		cli 	fwd24,X

		.echo **FAIL  CLI  lpcr

		cli 	:+
		cli 	-
		cli 	+
		cli 	:-

		.echo **FAIL  CLI  lzpi

		cli 	[$12]
		cli 	[bak08]
		cli 	[fwd08]

		.echo **FAIL  CLI  lzpiy

		cli 	[$12],Y
		cli 	[bak08],y
		cli 	[fwd08],Y

		.echo **FAIL  CLI  pcr

		cli 	:+
		cli 	-
		cli 	+
		cli 	:-

		.echo **FAIL  CLI  sr

		cli 	$12,S
		cli 	bak08,s
		cli 	fwd08,S

		.echo **FAIL  CLI  sriy

		cli 	($12,s),Y
		cli 	(bak08,S),y
		cli 	(fwd08,s),Y

		.echo **FAIL  CLI  zp

		cli 	$12
		cli 	bak08
		cli 	fwd08

		.echo **FAIL  CLI  zpi

		cli 	($12)
		cli 	(bak08)
		cli 	(fwd08)

		.echo **FAIL  CLI  zpiy

		cli 	($12),Y
		cli 	(bak08),y
		cli 	(fwd08),Y

		.echo **FAIL  CLI  zpx

		cli 	$12,X
		cli 	bak08,x
		cli 	fwd08,X

		.echo **FAIL  CLI  zpxi

		cli 	($12,X)
		cli 	(bak08,x)
		cli 	(fwd08,X)

		.echo **FAIL  CLI  zpy

		cli 	$12,Y
		cli 	bak08,y
		cli 	fwd08,Y


:	; forward ref for CLI

; -------------------------------

:	; backward ref for CLV

		.echo **FAIL  CLV  ab

		clv 	$1234
		clv 	bak16
		clv 	fwd16

		.echo **FAIL  CLV  abi

		clv 	($1234)
		clv 	(bak16)
		clv 	(fwd16)

		.echo **FAIL  CLV  abx

		clv 	$1234,X
		clv 	bak16,x
		clv 	fwd16,X

		.echo **FAIL  CLV  abxi

		clv 	($1234,X)
		clv 	(bak16,x)
		clv 	(fwd16,X)

		.echo **FAIL  CLV  aby

		clv 	$1234,Y
		clv 	bak16,y
		clv 	fwd16,Y

		.echo **FAIL  CLV  acc

		clv 	A
		clv 	a

		.echo **FAIL  CLV  bmv

		clv 	#$12, #$34
		clv 	#bak08, #fwd08
		clv 	$123456, $789ABC
		clv 	bak24, fwd24

		.echo **FAIL  CLV  imm

		clv 	#$12
		clv 	#bak08
		clv 	#fwd08

		.echo **PASS  CLV  imp

		CLV 

		.echo **FAIL  CLV  lab

		clv 	$123456
		clv 	bak24
		clv 	fwd24

		.echo **FAIL  CLV  labi

		clv 	[$123456]
		clv 	[bak24]
		clv 	[fwd24]

		.echo **FAIL  CLV  labx

		clv 	$123456,X
		clv 	bak24,x
		clv 	fwd24,X

		.echo **FAIL  CLV  lpcr

		clv 	:+
		clv 	-
		clv 	+
		clv 	:-

		.echo **FAIL  CLV  lzpi

		clv 	[$12]
		clv 	[bak08]
		clv 	[fwd08]

		.echo **FAIL  CLV  lzpiy

		clv 	[$12],Y
		clv 	[bak08],y
		clv 	[fwd08],Y

		.echo **FAIL  CLV  pcr

		clv 	:+
		clv 	-
		clv 	+
		clv 	:-

		.echo **FAIL  CLV  sr

		clv 	$12,S
		clv 	bak08,s
		clv 	fwd08,S

		.echo **FAIL  CLV  sriy

		clv 	($12,s),Y
		clv 	(bak08,S),y
		clv 	(fwd08,s),Y

		.echo **FAIL  CLV  zp

		clv 	$12
		clv 	bak08
		clv 	fwd08

		.echo **FAIL  CLV  zpi

		clv 	($12)
		clv 	(bak08)
		clv 	(fwd08)

		.echo **FAIL  CLV  zpiy

		clv 	($12),Y
		clv 	(bak08),y
		clv 	(fwd08),Y

		.echo **FAIL  CLV  zpx

		clv 	$12,X
		clv 	bak08,x
		clv 	fwd08,X

		.echo **FAIL  CLV  zpxi

		clv 	($12,X)
		clv 	(bak08,x)
		clv 	(fwd08,X)

		.echo **FAIL  CLV  zpy

		clv 	$12,Y
		clv 	bak08,y
		clv 	fwd08,Y


:	; forward ref for CLV

; -------------------------------

:	; backward ref for CMP

		.echo **PASS  CMP  ab

		CMP 	$1234
		CMP 	bak16
		CMP 	fwd16

		.echo **PASS  CMP  abi  (as zpi)

		Cmp 	($1234)
		Cmp 	(bak16)
		Cmp 	(fwd16)

		.echo **PASS  CMP  abx

		CMP 	$1234,X
		CMP 	bak16,x
		CMP 	fwd16,X

		.echo **PASS  CMP  abxi  (as zpxi)

		Cmp 	($1234,X)
		Cmp 	(bak16,x)
		Cmp 	(fwd16,X)

		.echo **PASS  CMP  aby

		CMP 	$1234,Y
		CMP 	bak16,y
		CMP 	fwd16,Y

		.echo **FAIL  CMP  acc

		cmp 	A
		cmp 	a

		.echo **FAIL  CMP  bmv

		cmp 	#$12, #$34
		cmp 	#bak08, #fwd08
		cmp 	$123456, $789ABC
		cmp 	bak24, fwd24

		.echo **PASS  CMP  imm

		CMP 	#$12
		CMP 	#bak08
		CMP 	#fwd08

		.echo **FAIL  CMP  imp

		cmp 

		.echo **PASS  CMP  lab

		CMP 	$123456
		CMP 	bak24
		CMP 	fwd24

		.echo **PASS  CMP  labi  (as lzpi)

		Cmp 	[$123456]
		Cmp 	[bak24]
		Cmp 	[fwd24]

		.echo **PASS  CMP  labx

		CMP 	$123456,X
		CMP 	bak24,x
		CMP 	fwd24,X

		.echo **PASS  CMP  lpcr  (as ab)

		Cmp 	:+
		Cmp 	-
		Cmp 	+
		Cmp 	:-

		.echo **PASS  CMP  lzpi

		CMP 	[$12]
		CMP 	[bak08]
		CMP 	[fwd08]

		.echo **PASS  CMP  lzpiy

		CMP 	[$12],Y
		CMP 	[bak08],y
		CMP 	[fwd08],Y

		.echo **PASS  CMP  pcr  (as ab)

		Cmp 	:+
		Cmp 	-
		Cmp 	+
		Cmp 	:-

		.echo **PASS  CMP  sr

		CMP 	$12,S
		CMP 	bak08,s
		CMP 	fwd08,S

		.echo **PASS  CMP  sriy

		CMP 	($12,s),Y
		CMP 	(bak08,S),y
		CMP 	(fwd08,s),Y

		.echo **PASS  CMP  zp

		CMP 	$12
		CMP 	bak08
		Cmp 	fwd08   	; (absolute)

		.echo **PASS  CMP  zpi

		CMP 	($12)
		CMP 	(bak08)
		CMP 	(fwd08)

		.echo **PASS  CMP  zpiy

		CMP 	($12),Y
		CMP 	(bak08),y
		CMP 	(fwd08),Y

		.echo **PASS  CMP  zpx

		CMP 	$12,X
		CMP 	bak08,x
		Cmp 	fwd08,X 	; (absolute)

		.echo **PASS  CMP  zpxi

		CMP 	($12,X)
		CMP 	(bak08,x)
		CMP 	(fwd08,X)

		.echo **PASS  CMP  zpy  (as aby)

		Cmp 	$12,Y
		Cmp 	bak08,y
		Cmp 	fwd08,Y


:	; forward ref for CMP

; -------------------------------

:	; backward ref for COP

		.echo **PASS  COP  ab  (as zp)

		Cop 	$1234
		Cop 	bak16
		Cop 	fwd16

		.echo **FAIL  COP  abi

		cop 	($1234)
		cop 	(bak16)
		cop 	(fwd16)

		.echo **FAIL  COP  abx

		cop 	$1234,X
		cop 	bak16,x
		cop 	fwd16,X

		.echo **FAIL  COP  abxi

		cop 	($1234,X)
		cop 	(bak16,x)
		cop 	(fwd16,X)

		.echo **FAIL  COP  aby

		cop 	$1234,Y
		cop 	bak16,y
		cop 	fwd16,Y

		.echo **FAIL  COP  acc

		cop 	A
		cop 	a

		.echo **FAIL  COP  bmv

		cop 	#$12, #$34
		cop 	#bak08, #fwd08
		cop 	$123456, $789ABC
		cop 	bak24, fwd24

		.echo **PASS  COP  imm

		COP 	#$12
		COP 	#bak08
		COP 	#fwd08

		.echo **PASS  COP  imp

		COP 

		.echo **PASS  COP  lab  (as zp)

		Cop 	$123456
		Cop 	bak24
		Cop 	fwd24

		.echo **FAIL  COP  labi

		cop 	[$123456]
		cop 	[bak24]
		cop 	[fwd24]

		.echo **FAIL  COP  labx

		cop 	$123456,X
		cop 	bak24,x
		cop 	fwd24,X

		.echo **PASS  COP  lpcr  (as zp)

		Cop 	:+
		Cop 	-
		Cop 	+
		Cop 	:-

		.echo **FAIL  COP  lzpi

		cop 	[$12]
		cop 	[bak08]
		cop 	[fwd08]

		.echo **FAIL  COP  lzpiy

		cop 	[$12],Y
		cop 	[bak08],y
		cop 	[fwd08],Y

		.echo **PASS  COP  pcr  (as zp)

		Cop 	:+
		Cop 	-
		Cop 	+
		Cop 	:-

		.echo **FAIL  COP  sr

		cop 	$12,S
		cop 	bak08,s
		cop 	fwd08,S

		.echo **FAIL  COP  sriy

		cop 	($12,s),Y
		cop 	(bak08,S),y
		cop 	(fwd08,s),Y

		.echo **PASS  COP  zp

		COP 	$12
		COP 	bak08
		COP 	fwd08

		.echo **FAIL  COP  zpi

		cop 	($12)
		cop 	(bak08)
		cop 	(fwd08)

		.echo **FAIL  COP  zpiy

		cop 	($12),Y
		cop 	(bak08),y
		cop 	(fwd08),Y

		.echo **FAIL  COP  zpx

		cop 	$12,X
		cop 	bak08,x
		cop 	fwd08,X

		.echo **FAIL  COP  zpxi

		cop 	($12,X)
		cop 	(bak08,x)
		cop 	(fwd08,X)

		.echo **FAIL  COP  zpy

		cop 	$12,Y
		cop 	bak08,y
		cop 	fwd08,Y


:	; forward ref for COP

; -------------------------------

:	; backward ref for CPX

		.echo **PASS  CPX  ab

		CPX 	$1234
		CPX 	bak16
		CPX 	fwd16

		.echo **FAIL  CPX  abi

		cpx 	($1234)
		cpx 	(bak16)
		cpx 	(fwd16)

		.echo **FAIL  CPX  abx

		cpx 	$1234,X
		cpx 	bak16,x
		cpx 	fwd16,X

		.echo **FAIL  CPX  abxi

		cpx 	($1234,X)
		cpx 	(bak16,x)
		cpx 	(fwd16,X)

		.echo **FAIL  CPX  aby

		cpx 	$1234,Y
		cpx 	bak16,y
		cpx 	fwd16,Y

		.echo **FAIL  CPX  acc

		cpx 	A
		cpx 	a

		.echo **FAIL  CPX  bmv

		cpx 	#$12, #$34
		cpx 	#bak08, #fwd08
		cpx 	$123456, $789ABC
		cpx 	bak24, fwd24

		.echo **PASS  CPX  imm

		CPX 	#$12
		CPX 	#bak08
		CPX 	#fwd08

		.echo **FAIL  CPX  imp

		cpx 

		.echo **PASS  CPX  lab  (as ab)

		Cpx 	$123456
		Cpx 	bak24
		Cpx 	fwd24

		.echo **FAIL  CPX  labi

		cpx 	[$123456]
		cpx 	[bak24]
		cpx 	[fwd24]

		.echo **FAIL  CPX  labx

		cpx 	$123456,X
		cpx 	bak24,x
		cpx 	fwd24,X

		.echo **PASS  CPX  lpcr  (as ab)

		Cpx 	:+
		Cpx 	-
		Cpx 	+
		Cpx 	:-

		.echo **FAIL  CPX  lzpi

		cpx 	[$12]
		cpx 	[bak08]
		cpx 	[fwd08]

		.echo **FAIL  CPX  lzpiy

		cpx 	[$12],Y
		cpx 	[bak08],y
		cpx 	[fwd08],Y

		.echo **PASS  CPX  pcr  (as ab)

		Cpx 	:+
		Cpx 	-
		Cpx 	+
		Cpx 	:-

		.echo **FAIL  CPX  sr

		cpx 	$12,S
		cpx 	bak08,s
		cpx 	fwd08,S

		.echo **FAIL  CPX  sriy

		cpx 	($12,s),Y
		cpx 	(bak08,S),y
		cpx 	(fwd08,s),Y

		.echo **PASS  CPX  zp

		CPX 	$12
		CPX 	bak08
		Cpx 	fwd08   	; (absolute)

		.echo **FAIL  CPX  zpi

		cpx 	($12)
		cpx 	(bak08)
		cpx 	(fwd08)

		.echo **FAIL  CPX  zpiy

		cpx 	($12),Y
		cpx 	(bak08),y
		cpx 	(fwd08),Y

		.echo **FAIL  CPX  zpx

		cpx 	$12,X
		cpx 	bak08,x
		cpx 	fwd08,X

		.echo **FAIL  CPX  zpxi

		cpx 	($12,X)
		cpx 	(bak08,x)
		cpx 	(fwd08,X)

		.echo **FAIL  CPX  zpy

		cpx 	$12,Y
		cpx 	bak08,y
		cpx 	fwd08,Y


:	; forward ref for CPX

; -------------------------------

:	; backward ref for CPY

		.echo **PASS  CPY  ab

		CPY 	$1234
		CPY 	bak16
		CPY 	fwd16

		.echo **FAIL  CPY  abi

		cpy 	($1234)
		cpy 	(bak16)
		cpy 	(fwd16)

		.echo **FAIL  CPY  abx

		cpy 	$1234,X
		cpy 	bak16,x
		cpy 	fwd16,X

		.echo **FAIL  CPY  abxi

		cpy 	($1234,X)
		cpy 	(bak16,x)
		cpy 	(fwd16,X)

		.echo **FAIL  CPY  aby

		cpy 	$1234,Y
		cpy 	bak16,y
		cpy 	fwd16,Y

		.echo **FAIL  CPY  acc

		cpy 	A
		cpy 	a

		.echo **FAIL  CPY  bmv

		cpy 	#$12, #$34
		cpy 	#bak08, #fwd08
		cpy 	$123456, $789ABC
		cpy 	bak24, fwd24

		.echo **PASS  CPY  imm

		CPY 	#$12
		CPY 	#bak08
		CPY 	#fwd08

		.echo **FAIL  CPY  imp

		cpy 

		.echo **PASS  CPY  lab  (as ab)

		Cpy 	$123456
		Cpy 	bak24
		Cpy 	fwd24

		.echo **FAIL  CPY  labi

		cpy 	[$123456]
		cpy 	[bak24]
		cpy 	[fwd24]

		.echo **FAIL  CPY  labx

		cpy 	$123456,X
		cpy 	bak24,x
		cpy 	fwd24,X

		.echo **PASS  CPY  lpcr  (as ab)

		Cpy 	:+
		Cpy 	-
		Cpy 	+
		Cpy 	:-

		.echo **FAIL  CPY  lzpi

		cpy 	[$12]
		cpy 	[bak08]
		cpy 	[fwd08]

		.echo **FAIL  CPY  lzpiy

		cpy 	[$12],Y
		cpy 	[bak08],y
		cpy 	[fwd08],Y

		.echo **PASS  CPY  pcr  (as ab)

		Cpy 	:+
		Cpy 	-
		Cpy 	+
		Cpy 	:-

		.echo **FAIL  CPY  sr

		cpy 	$12,S
		cpy 	bak08,s
		cpy 	fwd08,S

		.echo **FAIL  CPY  sriy

		cpy 	($12,s),Y
		cpy 	(bak08,S),y
		cpy 	(fwd08,s),Y

		.echo **PASS  CPY  zp

		CPY 	$12
		CPY 	bak08
		Cpy 	fwd08   	; (absolute)

		.echo **FAIL  CPY  zpi

		cpy 	($12)
		cpy 	(bak08)
		cpy 	(fwd08)

		.echo **FAIL  CPY  zpiy

		cpy 	($12),Y
		cpy 	(bak08),y
		cpy 	(fwd08),Y

		.echo **FAIL  CPY  zpx

		cpy 	$12,X
		cpy 	bak08,x
		cpy 	fwd08,X

		.echo **FAIL  CPY  zpxi

		cpy 	($12,X)
		cpy 	(bak08,x)
		cpy 	(fwd08,X)

		.echo **FAIL  CPY  zpy

		cpy 	$12,Y
		cpy 	bak08,y
		cpy 	fwd08,Y


:	; forward ref for CPY

; -------------------------------

:	; backward ref for DEA

		.echo **FAIL  DEA  ab

		dea 	$1234
		dea 	bak16
		dea 	fwd16

		.echo **FAIL  DEA  abi

		dea 	($1234)
		dea 	(bak16)
		dea 	(fwd16)

		.echo **FAIL  DEA  abx

		dea 	$1234,X
		dea 	bak16,x
		dea 	fwd16,X

		.echo **FAIL  DEA  abxi

		dea 	($1234,X)
		dea 	(bak16,x)
		dea 	(fwd16,X)

		.echo **FAIL  DEA  aby

		dea 	$1234,Y
		dea 	bak16,y
		dea 	fwd16,Y

		.echo **FAIL  DEA  acc

		dea 	A
		dea 	a

		.echo **FAIL  DEA  bmv

		dea 	#$12, #$34
		dea 	#bak08, #fwd08
		dea 	$123456, $789ABC
		dea 	bak24, fwd24

		.echo **FAIL  DEA  imm

		dea 	#$12
		dea 	#bak08
		dea 	#fwd08

		.echo **PASS  DEA  imp

		DEA 

		.echo **FAIL  DEA  lab

		dea 	$123456
		dea 	bak24
		dea 	fwd24

		.echo **FAIL  DEA  labi

		dea 	[$123456]
		dea 	[bak24]
		dea 	[fwd24]

		.echo **FAIL  DEA  labx

		dea 	$123456,X
		dea 	bak24,x
		dea 	fwd24,X

		.echo **FAIL  DEA  lpcr

		dea 	:+
		dea 	-
		dea 	+
		dea 	:-

		.echo **FAIL  DEA  lzpi

		dea 	[$12]
		dea 	[bak08]
		dea 	[fwd08]

		.echo **FAIL  DEA  lzpiy

		dea 	[$12],Y
		dea 	[bak08],y
		dea 	[fwd08],Y

		.echo **FAIL  DEA  pcr

		dea 	:+
		dea 	-
		dea 	+
		dea 	:-

		.echo **FAIL  DEA  sr

		dea 	$12,S
		dea 	bak08,s
		dea 	fwd08,S

		.echo **FAIL  DEA  sriy

		dea 	($12,s),Y
		dea 	(bak08,S),y
		dea 	(fwd08,s),Y

		.echo **FAIL  DEA  zp

		dea 	$12
		dea 	bak08
		dea 	fwd08

		.echo **FAIL  DEA  zpi

		dea 	($12)
		dea 	(bak08)
		dea 	(fwd08)

		.echo **FAIL  DEA  zpiy

		dea 	($12),Y
		dea 	(bak08),y
		dea 	(fwd08),Y

		.echo **FAIL  DEA  zpx

		dea 	$12,X
		dea 	bak08,x
		dea 	fwd08,X

		.echo **FAIL  DEA  zpxi

		dea 	($12,X)
		dea 	(bak08,x)
		dea 	(fwd08,X)

		.echo **FAIL  DEA  zpy

		dea 	$12,Y
		dea 	bak08,y
		dea 	fwd08,Y


:	; forward ref for DEA

; -------------------------------

:	; backward ref for DEC

		.echo **PASS  DEC  ab

		DEC 	$1234
		DEC 	bak16
		DEC 	fwd16

		.echo **FAIL  DEC  abi

		dec 	($1234)
		dec 	(bak16)
		dec 	(fwd16)

		.echo **PASS  DEC  abx

		DEC 	$1234,X
		DEC 	bak16,x
		DEC 	fwd16,X

		.echo **FAIL  DEC  abxi

		dec 	($1234,X)
		dec 	(bak16,x)
		dec 	(fwd16,X)

		.echo **FAIL  DEC  aby

		dec 	$1234,Y
		dec 	bak16,y
		dec 	fwd16,Y

		.echo **PASS  DEC  acc

		DEC 	A
		DEC 	a

		.echo **FAIL  DEC  bmv

		dec 	#$12, #$34
		dec 	#bak08, #fwd08
		dec 	$123456, $789ABC
		dec 	bak24, fwd24

		.echo **FAIL  DEC  imm

		dec 	#$12
		dec 	#bak08
		dec 	#fwd08

		.echo **PASS  DEC  imp

		DEC 

		.echo **PASS  DEC  lab  (as ab)

		Dec 	$123456
		Dec 	bak24
		Dec 	fwd24

		.echo **FAIL  DEC  labi

		dec 	[$123456]
		dec 	[bak24]
		dec 	[fwd24]

		.echo **PASS  DEC  labx  (as abx)

		Dec 	$123456,X
		Dec 	bak24,x
		Dec 	fwd24,X

		.echo **PASS  DEC  lpcr  (as ab)

		Dec 	:+
		Dec 	-
		Dec 	+
		Dec 	:-

		.echo **FAIL  DEC  lzpi

		dec 	[$12]
		dec 	[bak08]
		dec 	[fwd08]

		.echo **FAIL  DEC  lzpiy

		dec 	[$12],Y
		dec 	[bak08],y
		dec 	[fwd08],Y

		.echo **PASS  DEC  pcr  (as ab)

		Dec 	:+
		Dec 	-
		Dec 	+
		Dec 	:-

		.echo **FAIL  DEC  sr

		dec 	$12,S
		dec 	bak08,s
		dec 	fwd08,S

		.echo **FAIL  DEC  sriy

		dec 	($12,s),Y
		dec 	(bak08,S),y
		dec 	(fwd08,s),Y

		.echo **PASS  DEC  zp

		DEC 	$12
		DEC 	bak08
		Dec 	fwd08   	; (absolute)

		.echo **FAIL  DEC  zpi

		dec 	($12)
		dec 	(bak08)
		dec 	(fwd08)

		.echo **FAIL  DEC  zpiy

		dec 	($12),Y
		dec 	(bak08),y
		dec 	(fwd08),Y

		.echo **PASS  DEC  zpx

		DEC 	$12,X
		DEC 	bak08,x
		Dec 	fwd08,X 	; (absolute)

		.echo **FAIL  DEC  zpxi

		dec 	($12,X)
		dec 	(bak08,x)
		dec 	(fwd08,X)

		.echo **FAIL  DEC  zpy

		dec 	$12,Y
		dec 	bak08,y
		dec 	fwd08,Y


:	; forward ref for DEC

; -------------------------------

:	; backward ref for DEX

		.echo **FAIL  DEX  ab

		dex 	$1234
		dex 	bak16
		dex 	fwd16

		.echo **FAIL  DEX  abi

		dex 	($1234)
		dex 	(bak16)
		dex 	(fwd16)

		.echo **FAIL  DEX  abx

		dex 	$1234,X
		dex 	bak16,x
		dex 	fwd16,X

		.echo **FAIL  DEX  abxi

		dex 	($1234,X)
		dex 	(bak16,x)
		dex 	(fwd16,X)

		.echo **FAIL  DEX  aby

		dex 	$1234,Y
		dex 	bak16,y
		dex 	fwd16,Y

		.echo **FAIL  DEX  acc

		dex 	A
		dex 	a

		.echo **FAIL  DEX  bmv

		dex 	#$12, #$34
		dex 	#bak08, #fwd08
		dex 	$123456, $789ABC
		dex 	bak24, fwd24

		.echo **FAIL  DEX  imm

		dex 	#$12
		dex 	#bak08
		dex 	#fwd08

		.echo **PASS  DEX  imp

		DEX 

		.echo **FAIL  DEX  lab

		dex 	$123456
		dex 	bak24
		dex 	fwd24

		.echo **FAIL  DEX  labi

		dex 	[$123456]
		dex 	[bak24]
		dex 	[fwd24]

		.echo **FAIL  DEX  labx

		dex 	$123456,X
		dex 	bak24,x
		dex 	fwd24,X

		.echo **FAIL  DEX  lpcr

		dex 	:+
		dex 	-
		dex 	+
		dex 	:-

		.echo **FAIL  DEX  lzpi

		dex 	[$12]
		dex 	[bak08]
		dex 	[fwd08]

		.echo **FAIL  DEX  lzpiy

		dex 	[$12],Y
		dex 	[bak08],y
		dex 	[fwd08],Y

		.echo **FAIL  DEX  pcr

		dex 	:+
		dex 	-
		dex 	+
		dex 	:-

		.echo **FAIL  DEX  sr

		dex 	$12,S
		dex 	bak08,s
		dex 	fwd08,S

		.echo **FAIL  DEX  sriy

		dex 	($12,s),Y
		dex 	(bak08,S),y
		dex 	(fwd08,s),Y

		.echo **FAIL  DEX  zp

		dex 	$12
		dex 	bak08
		dex 	fwd08

		.echo **FAIL  DEX  zpi

		dex 	($12)
		dex 	(bak08)
		dex 	(fwd08)

		.echo **FAIL  DEX  zpiy

		dex 	($12),Y
		dex 	(bak08),y
		dex 	(fwd08),Y

		.echo **FAIL  DEX  zpx

		dex 	$12,X
		dex 	bak08,x
		dex 	fwd08,X

		.echo **FAIL  DEX  zpxi

		dex 	($12,X)
		dex 	(bak08,x)
		dex 	(fwd08,X)

		.echo **FAIL  DEX  zpy

		dex 	$12,Y
		dex 	bak08,y
		dex 	fwd08,Y


:	; forward ref for DEX

; -------------------------------

:	; backward ref for DEY

		.echo **FAIL  DEY  ab

		dey 	$1234
		dey 	bak16
		dey 	fwd16

		.echo **FAIL  DEY  abi

		dey 	($1234)
		dey 	(bak16)
		dey 	(fwd16)

		.echo **FAIL  DEY  abx

		dey 	$1234,X
		dey 	bak16,x
		dey 	fwd16,X

		.echo **FAIL  DEY  abxi

		dey 	($1234,X)
		dey 	(bak16,x)
		dey 	(fwd16,X)

		.echo **FAIL  DEY  aby

		dey 	$1234,Y
		dey 	bak16,y
		dey 	fwd16,Y

		.echo **FAIL  DEY  acc

		dey 	A
		dey 	a

		.echo **FAIL  DEY  bmv

		dey 	#$12, #$34
		dey 	#bak08, #fwd08
		dey 	$123456, $789ABC
		dey 	bak24, fwd24

		.echo **FAIL  DEY  imm

		dey 	#$12
		dey 	#bak08
		dey 	#fwd08

		.echo **PASS  DEY  imp

		DEY 

		.echo **FAIL  DEY  lab

		dey 	$123456
		dey 	bak24
		dey 	fwd24

		.echo **FAIL  DEY  labi

		dey 	[$123456]
		dey 	[bak24]
		dey 	[fwd24]

		.echo **FAIL  DEY  labx

		dey 	$123456,X
		dey 	bak24,x
		dey 	fwd24,X

		.echo **FAIL  DEY  lpcr

		dey 	:+
		dey 	-
		dey 	+
		dey 	:-

		.echo **FAIL  DEY  lzpi

		dey 	[$12]
		dey 	[bak08]
		dey 	[fwd08]

		.echo **FAIL  DEY  lzpiy

		dey 	[$12],Y
		dey 	[bak08],y
		dey 	[fwd08],Y

		.echo **FAIL  DEY  pcr

		dey 	:+
		dey 	-
		dey 	+
		dey 	:-

		.echo **FAIL  DEY  sr

		dey 	$12,S
		dey 	bak08,s
		dey 	fwd08,S

		.echo **FAIL  DEY  sriy

		dey 	($12,s),Y
		dey 	(bak08,S),y
		dey 	(fwd08,s),Y

		.echo **FAIL  DEY  zp

		dey 	$12
		dey 	bak08
		dey 	fwd08

		.echo **FAIL  DEY  zpi

		dey 	($12)
		dey 	(bak08)
		dey 	(fwd08)

		.echo **FAIL  DEY  zpiy

		dey 	($12),Y
		dey 	(bak08),y
		dey 	(fwd08),Y

		.echo **FAIL  DEY  zpx

		dey 	$12,X
		dey 	bak08,x
		dey 	fwd08,X

		.echo **FAIL  DEY  zpxi

		dey 	($12,X)
		dey 	(bak08,x)
		dey 	(fwd08,X)

		.echo **FAIL  DEY  zpy

		dey 	$12,Y
		dey 	bak08,y
		dey 	fwd08,Y


:	; forward ref for DEY

; -------------------------------

:	; backward ref for EOR

		.echo **PASS  EOR  ab

		EOR 	$1234
		EOR 	bak16
		EOR 	fwd16

		.echo **PASS  EOR  abi  (as zpi)

		Eor 	($1234)
		Eor 	(bak16)
		Eor 	(fwd16)

		.echo **PASS  EOR  abx

		EOR 	$1234,X
		EOR 	bak16,x
		EOR 	fwd16,X

		.echo **PASS  EOR  abxi  (as zpxi)

		Eor 	($1234,X)
		Eor 	(bak16,x)
		Eor 	(fwd16,X)

		.echo **PASS  EOR  aby

		EOR 	$1234,Y
		EOR 	bak16,y
		EOR 	fwd16,Y

		.echo **FAIL  EOR  acc

		eor 	A
		eor 	a

		.echo **FAIL  EOR  bmv

		eor 	#$12, #$34
		eor 	#bak08, #fwd08
		eor 	$123456, $789ABC
		eor 	bak24, fwd24

		.echo **PASS  EOR  imm

		EOR 	#$12
		EOR 	#bak08
		EOR 	#fwd08

		.echo **FAIL  EOR  imp

		eor 

		.echo **PASS  EOR  lab

		EOR 	$123456
		EOR 	bak24
		EOR 	fwd24

		.echo **PASS  EOR  labi  (as lzpi)

		Eor 	[$123456]
		Eor 	[bak24]
		Eor 	[fwd24]

		.echo **PASS  EOR  labx

		EOR 	$123456,X
		EOR 	bak24,x
		EOR 	fwd24,X

		.echo **PASS  EOR  lpcr  (as ab)

		Eor 	:+
		Eor 	-
		Eor 	+
		Eor 	:-

		.echo **PASS  EOR  lzpi

		EOR 	[$12]
		EOR 	[bak08]
		EOR 	[fwd08]

		.echo **PASS  EOR  lzpiy

		EOR 	[$12],Y
		EOR 	[bak08],y
		EOR 	[fwd08],Y

		.echo **PASS  EOR  pcr  (as ab)

		Eor 	:+
		Eor 	-
		Eor 	+
		Eor 	:-

		.echo **PASS  EOR  sr

		EOR 	$12,S
		EOR 	bak08,s
		EOR 	fwd08,S

		.echo **PASS  EOR  sriy

		EOR 	($12,s),Y
		EOR 	(bak08,S),y
		EOR 	(fwd08,s),Y

		.echo **PASS  EOR  zp

		EOR 	$12
		EOR 	bak08
		Eor 	fwd08   	; (absolute)

		.echo **PASS  EOR  zpi

		EOR 	($12)
		EOR 	(bak08)
		EOR 	(fwd08)

		.echo **PASS  EOR  zpiy

		EOR 	($12),Y
		EOR 	(bak08),y
		EOR 	(fwd08),Y

		.echo **PASS  EOR  zpx

		EOR 	$12,X
		EOR 	bak08,x
		Eor 	fwd08,X 	; (absolute)

		.echo **PASS  EOR  zpxi

		EOR 	($12,X)
		EOR 	(bak08,x)
		EOR 	(fwd08,X)

		.echo **PASS  EOR  zpy  (as aby)

		Eor 	$12,Y
		Eor 	bak08,y
		Eor 	fwd08,Y


:	; forward ref for EOR

; -------------------------------

:	; backward ref for INA

		.echo **FAIL  INA  ab

		ina 	$1234
		ina 	bak16
		ina 	fwd16

		.echo **FAIL  INA  abi

		ina 	($1234)
		ina 	(bak16)
		ina 	(fwd16)

		.echo **FAIL  INA  abx

		ina 	$1234,X
		ina 	bak16,x
		ina 	fwd16,X

		.echo **FAIL  INA  abxi

		ina 	($1234,X)
		ina 	(bak16,x)
		ina 	(fwd16,X)

		.echo **FAIL  INA  aby

		ina 	$1234,Y
		ina 	bak16,y
		ina 	fwd16,Y

		.echo **FAIL  INA  acc

		ina 	A
		ina 	a

		.echo **FAIL  INA  bmv

		ina 	#$12, #$34
		ina 	#bak08, #fwd08
		ina 	$123456, $789ABC
		ina 	bak24, fwd24

		.echo **FAIL  INA  imm

		ina 	#$12
		ina 	#bak08
		ina 	#fwd08

		.echo **PASS  INA  imp

		INA 

		.echo **FAIL  INA  lab

		ina 	$123456
		ina 	bak24
		ina 	fwd24

		.echo **FAIL  INA  labi

		ina 	[$123456]
		ina 	[bak24]
		ina 	[fwd24]

		.echo **FAIL  INA  labx

		ina 	$123456,X
		ina 	bak24,x
		ina 	fwd24,X

		.echo **FAIL  INA  lpcr

		ina 	:+
		ina 	-
		ina 	+
		ina 	:-

		.echo **FAIL  INA  lzpi

		ina 	[$12]
		ina 	[bak08]
		ina 	[fwd08]

		.echo **FAIL  INA  lzpiy

		ina 	[$12],Y
		ina 	[bak08],y
		ina 	[fwd08],Y

		.echo **FAIL  INA  pcr

		ina 	:+
		ina 	-
		ina 	+
		ina 	:-

		.echo **FAIL  INA  sr

		ina 	$12,S
		ina 	bak08,s
		ina 	fwd08,S

		.echo **FAIL  INA  sriy

		ina 	($12,s),Y
		ina 	(bak08,S),y
		ina 	(fwd08,s),Y

		.echo **FAIL  INA  zp

		ina 	$12
		ina 	bak08
		ina 	fwd08

		.echo **FAIL  INA  zpi

		ina 	($12)
		ina 	(bak08)
		ina 	(fwd08)

		.echo **FAIL  INA  zpiy

		ina 	($12),Y
		ina 	(bak08),y
		ina 	(fwd08),Y

		.echo **FAIL  INA  zpx

		ina 	$12,X
		ina 	bak08,x
		ina 	fwd08,X

		.echo **FAIL  INA  zpxi

		ina 	($12,X)
		ina 	(bak08,x)
		ina 	(fwd08,X)

		.echo **FAIL  INA  zpy

		ina 	$12,Y
		ina 	bak08,y
		ina 	fwd08,Y


:	; forward ref for INA

; -------------------------------

:	; backward ref for INC

		.echo **PASS  INC  ab

		INC 	$1234
		INC 	bak16
		INC 	fwd16

		.echo **FAIL  INC  abi

		inc 	($1234)
		inc 	(bak16)
		inc 	(fwd16)

		.echo **PASS  INC  abx

		INC 	$1234,X
		INC 	bak16,x
		INC 	fwd16,X

		.echo **FAIL  INC  abxi

		inc 	($1234,X)
		inc 	(bak16,x)
		inc 	(fwd16,X)

		.echo **FAIL  INC  aby

		inc 	$1234,Y
		inc 	bak16,y
		inc 	fwd16,Y

		.echo **PASS  INC  acc

		INC 	A
		INC 	a

		.echo **FAIL  INC  bmv

		inc 	#$12, #$34
		inc 	#bak08, #fwd08
		inc 	$123456, $789ABC
		inc 	bak24, fwd24

		.echo **FAIL  INC  imm

		inc 	#$12
		inc 	#bak08
		inc 	#fwd08

		.echo **PASS  INC  imp

		INC 

		.echo **PASS  INC  lab  (as ab)

		Inc 	$123456
		Inc 	bak24
		Inc 	fwd24

		.echo **FAIL  INC  labi

		inc 	[$123456]
		inc 	[bak24]
		inc 	[fwd24]

		.echo **PASS  INC  labx  (as abx)

		Inc 	$123456,X
		Inc 	bak24,x
		Inc 	fwd24,X

		.echo **PASS  INC  lpcr  (as ab)

		Inc 	:+
		Inc 	-
		Inc 	+
		Inc 	:-

		.echo **FAIL  INC  lzpi

		inc 	[$12]
		inc 	[bak08]
		inc 	[fwd08]

		.echo **FAIL  INC  lzpiy

		inc 	[$12],Y
		inc 	[bak08],y
		inc 	[fwd08],Y

		.echo **PASS  INC  pcr  (as ab)

		Inc 	:+
		Inc 	-
		Inc 	+
		Inc 	:-

		.echo **FAIL  INC  sr

		inc 	$12,S
		inc 	bak08,s
		inc 	fwd08,S

		.echo **FAIL  INC  sriy

		inc 	($12,s),Y
		inc 	(bak08,S),y
		inc 	(fwd08,s),Y

		.echo **PASS  INC  zp

		INC 	$12
		INC 	bak08
		Inc 	fwd08   	; (absolute)

		.echo **FAIL  INC  zpi

		inc 	($12)
		inc 	(bak08)
		inc 	(fwd08)

		.echo **FAIL  INC  zpiy

		inc 	($12),Y
		inc 	(bak08),y
		inc 	(fwd08),Y

		.echo **PASS  INC  zpx

		INC 	$12,X
		INC 	bak08,x
		Inc 	fwd08,X 	; (absolute)

		.echo **FAIL  INC  zpxi

		inc 	($12,X)
		inc 	(bak08,x)
		inc 	(fwd08,X)

		.echo **FAIL  INC  zpy

		inc 	$12,Y
		inc 	bak08,y
		inc 	fwd08,Y


:	; forward ref for INC

; -------------------------------

:	; backward ref for INX

		.echo **FAIL  INX  ab

		inx 	$1234
		inx 	bak16
		inx 	fwd16

		.echo **FAIL  INX  abi

		inx 	($1234)
		inx 	(bak16)
		inx 	(fwd16)

		.echo **FAIL  INX  abx

		inx 	$1234,X
		inx 	bak16,x
		inx 	fwd16,X

		.echo **FAIL  INX  abxi

		inx 	($1234,X)
		inx 	(bak16,x)
		inx 	(fwd16,X)

		.echo **FAIL  INX  aby

		inx 	$1234,Y
		inx 	bak16,y
		inx 	fwd16,Y

		.echo **FAIL  INX  acc

		inx 	A
		inx 	a

		.echo **FAIL  INX  bmv

		inx 	#$12, #$34
		inx 	#bak08, #fwd08
		inx 	$123456, $789ABC
		inx 	bak24, fwd24

		.echo **FAIL  INX  imm

		inx 	#$12
		inx 	#bak08
		inx 	#fwd08

		.echo **PASS  INX  imp

		INX 

		.echo **FAIL  INX  lab

		inx 	$123456
		inx 	bak24
		inx 	fwd24

		.echo **FAIL  INX  labi

		inx 	[$123456]
		inx 	[bak24]
		inx 	[fwd24]

		.echo **FAIL  INX  labx

		inx 	$123456,X
		inx 	bak24,x
		inx 	fwd24,X

		.echo **FAIL  INX  lpcr

		inx 	:+
		inx 	-
		inx 	+
		inx 	:-

		.echo **FAIL  INX  lzpi

		inx 	[$12]
		inx 	[bak08]
		inx 	[fwd08]

		.echo **FAIL  INX  lzpiy

		inx 	[$12],Y
		inx 	[bak08],y
		inx 	[fwd08],Y

		.echo **FAIL  INX  pcr

		inx 	:+
		inx 	-
		inx 	+
		inx 	:-

		.echo **FAIL  INX  sr

		inx 	$12,S
		inx 	bak08,s
		inx 	fwd08,S

		.echo **FAIL  INX  sriy

		inx 	($12,s),Y
		inx 	(bak08,S),y
		inx 	(fwd08,s),Y

		.echo **FAIL  INX  zp

		inx 	$12
		inx 	bak08
		inx 	fwd08

		.echo **FAIL  INX  zpi

		inx 	($12)
		inx 	(bak08)
		inx 	(fwd08)

		.echo **FAIL  INX  zpiy

		inx 	($12),Y
		inx 	(bak08),y
		inx 	(fwd08),Y

		.echo **FAIL  INX  zpx

		inx 	$12,X
		inx 	bak08,x
		inx 	fwd08,X

		.echo **FAIL  INX  zpxi

		inx 	($12,X)
		inx 	(bak08,x)
		inx 	(fwd08,X)

		.echo **FAIL  INX  zpy

		inx 	$12,Y
		inx 	bak08,y
		inx 	fwd08,Y


:	; forward ref for INX

; -------------------------------

:	; backward ref for INY

		.echo **FAIL  INY  ab

		iny 	$1234
		iny 	bak16
		iny 	fwd16

		.echo **FAIL  INY  abi

		iny 	($1234)
		iny 	(bak16)
		iny 	(fwd16)

		.echo **FAIL  INY  abx

		iny 	$1234,X
		iny 	bak16,x
		iny 	fwd16,X

		.echo **FAIL  INY  abxi

		iny 	($1234,X)
		iny 	(bak16,x)
		iny 	(fwd16,X)

		.echo **FAIL  INY  aby

		iny 	$1234,Y
		iny 	bak16,y
		iny 	fwd16,Y

		.echo **FAIL  INY  acc

		iny 	A
		iny 	a

		.echo **FAIL  INY  bmv

		iny 	#$12, #$34
		iny 	#bak08, #fwd08
		iny 	$123456, $789ABC
		iny 	bak24, fwd24

		.echo **FAIL  INY  imm

		iny 	#$12
		iny 	#bak08
		iny 	#fwd08

		.echo **PASS  INY  imp

		INY 

		.echo **FAIL  INY  lab

		iny 	$123456
		iny 	bak24
		iny 	fwd24

		.echo **FAIL  INY  labi

		iny 	[$123456]
		iny 	[bak24]
		iny 	[fwd24]

		.echo **FAIL  INY  labx

		iny 	$123456,X
		iny 	bak24,x
		iny 	fwd24,X

		.echo **FAIL  INY  lpcr

		iny 	:+
		iny 	-
		iny 	+
		iny 	:-

		.echo **FAIL  INY  lzpi

		iny 	[$12]
		iny 	[bak08]
		iny 	[fwd08]

		.echo **FAIL  INY  lzpiy

		iny 	[$12],Y
		iny 	[bak08],y
		iny 	[fwd08],Y

		.echo **FAIL  INY  pcr

		iny 	:+
		iny 	-
		iny 	+
		iny 	:-

		.echo **FAIL  INY  sr

		iny 	$12,S
		iny 	bak08,s
		iny 	fwd08,S

		.echo **FAIL  INY  sriy

		iny 	($12,s),Y
		iny 	(bak08,S),y
		iny 	(fwd08,s),Y

		.echo **FAIL  INY  zp

		iny 	$12
		iny 	bak08
		iny 	fwd08

		.echo **FAIL  INY  zpi

		iny 	($12)
		iny 	(bak08)
		iny 	(fwd08)

		.echo **FAIL  INY  zpiy

		iny 	($12),Y
		iny 	(bak08),y
		iny 	(fwd08),Y

		.echo **FAIL  INY  zpx

		iny 	$12,X
		iny 	bak08,x
		iny 	fwd08,X

		.echo **FAIL  INY  zpxi

		iny 	($12,X)
		iny 	(bak08,x)
		iny 	(fwd08,X)

		.echo **FAIL  INY  zpy

		iny 	$12,Y
		iny 	bak08,y
		iny 	fwd08,Y


:	; forward ref for INY

; -------------------------------

:	; backward ref for JML

		.echo **PASS  JML  ab  (as lab)

		Jml 	$1234
		Jml 	bak16
		Jml 	fwd16

		.echo **PASS  JML  abi

		JML 	($1234)
		JML 	(bak16)
		JML 	(fwd16)

		.echo **FAIL  JML  abx

		jml 	$1234,X
		jml 	bak16,x
		jml 	fwd16,X

		.echo **FAIL  JML  abxi

		jml 	($1234,X)
		jml 	(bak16,x)
		jml 	(fwd16,X)

		.echo **FAIL  JML  aby

		jml 	$1234,Y
		jml 	bak16,y
		jml 	fwd16,Y

		.echo **FAIL  JML  acc

		jml 	A
		jml 	a

		.echo **FAIL  JML  bmv

		jml 	#$12, #$34
		jml 	#bak08, #fwd08
		jml 	$123456, $789ABC
		jml 	bak24, fwd24

		.echo **FAIL  JML  imm

		jml 	#$12
		jml 	#bak08
		jml 	#fwd08

		.echo **FAIL  JML  imp

		jml 

		.echo **PASS  JML  lab

		JML 	$123456
		JML 	bak24
		JML 	fwd24

		.echo **PASS  JML  labi

		JML 	[$123456]
		JML 	[bak24]
		JML 	[fwd24]

		.echo **FAIL  JML  labx

		jml 	$123456,X
		jml 	bak24,x
		jml 	fwd24,X

		.echo **PASS  JML  lpcr  (as lab)

		Jml 	:+
		Jml 	-
		Jml 	+
		Jml 	:-

		.echo **PASS  JML  lzpi  (as labi)

		Jml 	[$12]
		Jml 	[bak08]
		Jml 	[fwd08]

		.echo **FAIL  JML  lzpiy

		jml 	[$12],Y
		jml 	[bak08],y
		jml 	[fwd08],Y

		.echo **PASS  JML  pcr  (as lab)

		Jml 	:+
		Jml 	-
		Jml 	+
		Jml 	:-

		.echo **FAIL  JML  sr

		jml 	$12,S
		jml 	bak08,s
		jml 	fwd08,S

		.echo **FAIL  JML  sriy

		jml 	($12,s),Y
		jml 	(bak08,S),y
		jml 	(fwd08,s),Y

		.echo **PASS  JML  zp  (as lab)

		Jml 	$12
		Jml 	bak08
		Jml 	fwd08

		.echo **PASS  JML  zpi  (as abi)

		Jml 	($12)
		Jml 	(bak08)
		Jml 	(fwd08)

		.echo **FAIL  JML  zpiy

		jml 	($12),Y
		jml 	(bak08),y
		jml 	(fwd08),Y

		.echo **FAIL  JML  zpx

		jml 	$12,X
		jml 	bak08,x
		jml 	fwd08,X

		.echo **FAIL  JML  zpxi

		jml 	($12,X)
		jml 	(bak08,x)
		jml 	(fwd08,X)

		.echo **FAIL  JML  zpy

		jml 	$12,Y
		jml 	bak08,y
		jml 	fwd08,Y


:	; forward ref for JML

; -------------------------------

:	; backward ref for JMP

		.echo **PASS  JMP  ab

		JMP 	$1234
		JMP 	bak16
		JMP 	fwd16

		.echo **PASS  JMP  abi

		JMP 	($1234)
		JMP 	(bak16)
		JMP 	(fwd16)

		.echo **FAIL  JMP  abx

		jmp 	$1234,X
		jmp 	bak16,x
		jmp 	fwd16,X

		.echo **PASS  JMP  abxi

		JMP 	($1234,X)
		JMP 	(bak16,x)
		JMP 	(fwd16,X)

		.echo **FAIL  JMP  aby

		jmp 	$1234,Y
		jmp 	bak16,y
		jmp 	fwd16,Y

		.echo **FAIL  JMP  acc

		jmp 	A
		jmp 	a

		.echo **FAIL  JMP  bmv

		jmp 	#$12, #$34
		jmp 	#bak08, #fwd08
		jmp 	$123456, $789ABC
		jmp 	bak24, fwd24

		.echo **FAIL  JMP  imm

		jmp 	#$12
		jmp 	#bak08
		jmp 	#fwd08

		.echo **FAIL  JMP  imp

		jmp 

		.echo **PASS  JMP  lab  (as ab)

		Jmp 	$123456
		Jmp 	bak24
		Jmp 	fwd24

		.echo **PASS  JMP  labi

		JMP 	[$123456]
		JMP 	[bak24]
		JMP 	[fwd24]

		.echo **FAIL  JMP  labx

		jmp 	$123456,X
		jmp 	bak24,x
		jmp 	fwd24,X

		.echo **PASS  JMP  lpcr  (as ab)

		Jmp 	:+
		Jmp 	-
		Jmp 	+
		Jmp 	:-

		.echo **PASS  JMP  lzpi  (as labi)

		Jmp 	[$12]
		Jmp 	[bak08]
		Jmp 	[fwd08]

		.echo **FAIL  JMP  lzpiy

		jmp 	[$12],Y
		jmp 	[bak08],y
		jmp 	[fwd08],Y

		.echo **PASS  JMP  pcr  (as ab)

		Jmp 	:+
		Jmp 	-
		Jmp 	+
		Jmp 	:-

		.echo **FAIL  JMP  sr

		jmp 	$12,S
		jmp 	bak08,s
		jmp 	fwd08,S

		.echo **FAIL  JMP  sriy

		jmp 	($12,s),Y
		jmp 	(bak08,S),y
		jmp 	(fwd08,s),Y

		.echo **PASS  JMP  zp  (as ab)

		Jmp 	$12
		Jmp 	bak08
		Jmp 	fwd08

		.echo **PASS  JMP  zpi  (as abi)

		Jmp 	($12)
		Jmp 	(bak08)
		Jmp 	(fwd08)

		.echo **FAIL  JMP  zpiy

		jmp 	($12),Y
		jmp 	(bak08),y
		jmp 	(fwd08),Y

		.echo **FAIL  JMP  zpx

		jmp 	$12,X
		jmp 	bak08,x
		jmp 	fwd08,X

		.echo **PASS  JMP  zpxi  (as abxi)

		Jmp 	($12,X)
		Jmp 	(bak08,x)
		Jmp 	(fwd08,X)

		.echo **FAIL  JMP  zpy

		jmp 	$12,Y
		jmp 	bak08,y
		jmp 	fwd08,Y


:	; forward ref for JMP

; -------------------------------

:	; backward ref for JSL

		.echo **PASS  JSL  ab  (as lab)

		Jsl 	$1234
		Jsl 	bak16
		Jsl 	fwd16

		.echo **FAIL  JSL  abi

		jsl 	($1234)
		jsl 	(bak16)
		jsl 	(fwd16)

		.echo **FAIL  JSL  abx

		jsl 	$1234,X
		jsl 	bak16,x
		jsl 	fwd16,X

		.echo **FAIL  JSL  abxi

		jsl 	($1234,X)
		jsl 	(bak16,x)
		jsl 	(fwd16,X)

		.echo **FAIL  JSL  aby

		jsl 	$1234,Y
		jsl 	bak16,y
		jsl 	fwd16,Y

		.echo **FAIL  JSL  acc

		jsl 	A
		jsl 	a

		.echo **FAIL  JSL  bmv

		jsl 	#$12, #$34
		jsl 	#bak08, #fwd08
		jsl 	$123456, $789ABC
		jsl 	bak24, fwd24

		.echo **FAIL  JSL  imm

		jsl 	#$12
		jsl 	#bak08
		jsl 	#fwd08

		.echo **FAIL  JSL  imp

		jsl 

		.echo **PASS  JSL  lab

		JSL 	$123456
		JSL 	bak24
		JSL 	fwd24

		.echo **FAIL  JSL  labi

		jsl 	[$123456]
		jsl 	[bak24]
		jsl 	[fwd24]

		.echo **FAIL  JSL  labx

		jsl 	$123456,X
		jsl 	bak24,x
		jsl 	fwd24,X

		.echo **PASS  JSL  lpcr  (as lab)

		Jsl 	:+
		Jsl 	-
		Jsl 	+
		Jsl 	:-

		.echo **FAIL  JSL  lzpi

		jsl 	[$12]
		jsl 	[bak08]
		jsl 	[fwd08]

		.echo **FAIL  JSL  lzpiy

		jsl 	[$12],Y
		jsl 	[bak08],y
		jsl 	[fwd08],Y

		.echo **PASS  JSL  pcr  (as lab)

		Jsl 	:+
		Jsl 	-
		Jsl 	+
		Jsl 	:-

		.echo **FAIL  JSL  sr

		jsl 	$12,S
		jsl 	bak08,s
		jsl 	fwd08,S

		.echo **FAIL  JSL  sriy

		jsl 	($12,s),Y
		jsl 	(bak08,S),y
		jsl 	(fwd08,s),Y

		.echo **PASS  JSL  zp  (as lab)

		Jsl 	$12
		Jsl 	bak08
		Jsl 	fwd08

		.echo **FAIL  JSL  zpi

		jsl 	($12)
		jsl 	(bak08)
		jsl 	(fwd08)

		.echo **FAIL  JSL  zpiy

		jsl 	($12),Y
		jsl 	(bak08),y
		jsl 	(fwd08),Y

		.echo **FAIL  JSL  zpx

		jsl 	$12,X
		jsl 	bak08,x
		jsl 	fwd08,X

		.echo **FAIL  JSL  zpxi

		jsl 	($12,X)
		jsl 	(bak08,x)
		jsl 	(fwd08,X)

		.echo **FAIL  JSL  zpy

		jsl 	$12,Y
		jsl 	bak08,y
		jsl 	fwd08,Y


:	; forward ref for JSL

; -------------------------------

:	; backward ref for JSR

		.echo **PASS  JSR  ab

		JSR 	$1234
		JSR 	bak16
		JSR 	fwd16

		.echo **FAIL  JSR  abi

		jsr 	($1234)
		jsr 	(bak16)
		jsr 	(fwd16)

		.echo **FAIL  JSR  abx

		jsr 	$1234,X
		jsr 	bak16,x
		jsr 	fwd16,X

		.echo **PASS  JSR  abxi

		JSR 	($1234,X)
		JSR 	(bak16,x)
		JSR 	(fwd16,X)

		.echo **FAIL  JSR  aby

		jsr 	$1234,Y
		jsr 	bak16,y
		jsr 	fwd16,Y

		.echo **FAIL  JSR  acc

		jsr 	A
		jsr 	a

		.echo **FAIL  JSR  bmv

		jsr 	#$12, #$34
		jsr 	#bak08, #fwd08
		jsr 	$123456, $789ABC
		jsr 	bak24, fwd24

		.echo **FAIL  JSR  imm

		jsr 	#$12
		jsr 	#bak08
		jsr 	#fwd08

		.echo **FAIL  JSR  imp

		jsr 

		.echo **PASS  JSR  lab  (as ab)

		Jsr 	$123456
		Jsr 	bak24
		Jsr 	fwd24

		.echo **FAIL  JSR  labi

		jsr 	[$123456]
		jsr 	[bak24]
		jsr 	[fwd24]

		.echo **FAIL  JSR  labx

		jsr 	$123456,X
		jsr 	bak24,x
		jsr 	fwd24,X

		.echo **PASS  JSR  lpcr  (as ab)

		Jsr 	:+
		Jsr 	-
		Jsr 	+
		Jsr 	:-

		.echo **FAIL  JSR  lzpi

		jsr 	[$12]
		jsr 	[bak08]
		jsr 	[fwd08]

		.echo **FAIL  JSR  lzpiy

		jsr 	[$12],Y
		jsr 	[bak08],y
		jsr 	[fwd08],Y

		.echo **PASS  JSR  pcr  (as ab)

		Jsr 	:+
		Jsr 	-
		Jsr 	+
		Jsr 	:-

		.echo **FAIL  JSR  sr

		jsr 	$12,S
		jsr 	bak08,s
		jsr 	fwd08,S

		.echo **FAIL  JSR  sriy

		jsr 	($12,s),Y
		jsr 	(bak08,S),y
		jsr 	(fwd08,s),Y

		.echo **PASS  JSR  zp  (as ab)

		Jsr 	$12
		Jsr 	bak08
		Jsr 	fwd08

		.echo **FAIL  JSR  zpi

		jsr 	($12)
		jsr 	(bak08)
		jsr 	(fwd08)

		.echo **FAIL  JSR  zpiy

		jsr 	($12),Y
		jsr 	(bak08),y
		jsr 	(fwd08),Y

		.echo **FAIL  JSR  zpx

		jsr 	$12,X
		jsr 	bak08,x
		jsr 	fwd08,X

		.echo **PASS  JSR  zpxi  (as abxi)

		Jsr 	($12,X)
		Jsr 	(bak08,x)
		Jsr 	(fwd08,X)

		.echo **FAIL  JSR  zpy

		jsr 	$12,Y
		jsr 	bak08,y
		jsr 	fwd08,Y


:	; forward ref for JSR

; -------------------------------

:	; backward ref for LDA

		.echo **PASS  LDA  ab

		LDA 	$1234
		LDA 	bak16
		LDA 	fwd16

		.echo **PASS  LDA  abi  (as zpi)

		Lda 	($1234)
		Lda 	(bak16)
		Lda 	(fwd16)

		.echo **PASS  LDA  abx

		LDA 	$1234,X
		LDA 	bak16,x
		LDA 	fwd16,X

		.echo **PASS  LDA  abxi  (as zpxi)

		Lda 	($1234,X)
		Lda 	(bak16,x)
		Lda 	(fwd16,X)

		.echo **PASS  LDA  aby

		LDA 	$1234,Y
		LDA 	bak16,y
		LDA 	fwd16,Y

		.echo **FAIL  LDA  acc

		lda 	A
		lda 	a

		.echo **FAIL  LDA  bmv

		lda 	#$12, #$34
		lda 	#bak08, #fwd08
		lda 	$123456, $789ABC
		lda 	bak24, fwd24

		.echo **PASS  LDA  imm

		LDA 	#$12
		LDA 	#bak08
		LDA 	#fwd08

		.echo **FAIL  LDA  imp

		lda 

		.echo **PASS  LDA  lab

		LDA 	$123456
		LDA 	bak24
		LDA 	fwd24

		.echo **PASS  LDA  labi  (as lzpi)

		Lda 	[$123456]
		Lda 	[bak24]
		Lda 	[fwd24]

		.echo **PASS  LDA  labx

		LDA 	$123456,X
		LDA 	bak24,x
		LDA 	fwd24,X

		.echo **PASS  LDA  lpcr  (as ab)

		Lda 	:+
		Lda 	-
		Lda 	+
		Lda 	:-

		.echo **PASS  LDA  lzpi

		LDA 	[$12]
		LDA 	[bak08]
		LDA 	[fwd08]

		.echo **PASS  LDA  lzpiy

		LDA 	[$12],Y
		LDA 	[bak08],y
		LDA 	[fwd08],Y

		.echo **PASS  LDA  pcr  (as ab)

		Lda 	:+
		Lda 	-
		Lda 	+
		Lda 	:-

		.echo **PASS  LDA  sr

		LDA 	$12,S
		LDA 	bak08,s
		LDA 	fwd08,S

		.echo **PASS  LDA  sriy

		LDA 	($12,s),Y
		LDA 	(bak08,S),y
		LDA 	(fwd08,s),Y

		.echo **PASS  LDA  zp

		LDA 	$12
		LDA 	bak08
		Lda 	fwd08   	; (absolute)

		.echo **PASS  LDA  zpi

		LDA 	($12)
		LDA 	(bak08)
		LDA 	(fwd08)

		.echo **PASS  LDA  zpiy

		LDA 	($12),Y
		LDA 	(bak08),y
		LDA 	(fwd08),Y

		.echo **PASS  LDA  zpx

		LDA 	$12,X
		LDA 	bak08,x
		Lda 	fwd08,X 	; (absolute)

		.echo **PASS  LDA  zpxi

		LDA 	($12,X)
		LDA 	(bak08,x)
		LDA 	(fwd08,X)

		.echo **PASS  LDA  zpy  (as aby)

		Lda 	$12,Y
		Lda 	bak08,y
		Lda 	fwd08,Y


:	; forward ref for LDA

; -------------------------------

:	; backward ref for LDX

		.echo **PASS  LDX  ab

		LDX 	$1234
		LDX 	bak16
		LDX 	fwd16

		.echo **FAIL  LDX  abi

		ldx 	($1234)
		ldx 	(bak16)
		ldx 	(fwd16)

		.echo **FAIL  LDX  abx

		ldx 	$1234,X
		ldx 	bak16,x
		ldx 	fwd16,X

		.echo **FAIL  LDX  abxi

		ldx 	($1234,X)
		ldx 	(bak16,x)
		ldx 	(fwd16,X)

		.echo **PASS  LDX  aby

		LDX 	$1234,Y
		LDX 	bak16,y
		LDX 	fwd16,Y

		.echo **FAIL  LDX  acc

		ldx 	A
		ldx 	a

		.echo **FAIL  LDX  bmv

		ldx 	#$12, #$34
		ldx 	#bak08, #fwd08
		ldx 	$123456, $789ABC
		ldx 	bak24, fwd24

		.echo **PASS  LDX  imm

		LDX 	#$12
		LDX 	#bak08
		LDX 	#fwd08

		.echo **FAIL  LDX  imp

		ldx 

		.echo **PASS  LDX  lab  (as ab)

		Ldx 	$123456
		Ldx 	bak24
		Ldx 	fwd24

		.echo **FAIL  LDX  labi

		ldx 	[$123456]
		ldx 	[bak24]
		ldx 	[fwd24]

		.echo **FAIL  LDX  labx

		ldx 	$123456,X
		ldx 	bak24,x
		ldx 	fwd24,X

		.echo **PASS  LDX  lpcr  (as ab)

		Ldx 	:+
		Ldx 	-
		Ldx 	+
		Ldx 	:-

		.echo **FAIL  LDX  lzpi

		ldx 	[$12]
		ldx 	[bak08]
		ldx 	[fwd08]

		.echo **FAIL  LDX  lzpiy

		ldx 	[$12],Y
		ldx 	[bak08],y
		ldx 	[fwd08],Y

		.echo **PASS  LDX  pcr  (as ab)

		Ldx 	:+
		Ldx 	-
		Ldx 	+
		Ldx 	:-

		.echo **FAIL  LDX  sr

		ldx 	$12,S
		ldx 	bak08,s
		ldx 	fwd08,S

		.echo **FAIL  LDX  sriy

		ldx 	($12,s),Y
		ldx 	(bak08,S),y
		ldx 	(fwd08,s),Y

		.echo **PASS  LDX  zp

		LDX 	$12
		LDX 	bak08
		Ldx 	fwd08   	; (absolute)

		.echo **FAIL  LDX  zpi

		ldx 	($12)
		ldx 	(bak08)
		ldx 	(fwd08)

		.echo **FAIL  LDX  zpiy

		ldx 	($12),Y
		ldx 	(bak08),y
		ldx 	(fwd08),Y

		.echo **FAIL  LDX  zpx

		ldx 	$12,X
		ldx 	bak08,x
		ldx 	fwd08,X

		.echo **FAIL  LDX  zpxi

		ldx 	($12,X)
		ldx 	(bak08,x)
		ldx 	(fwd08,X)

		.echo **PASS  LDX  zpy

		LDX 	$12,Y
		LDX 	bak08,y
		Ldx 	fwd08,Y 	; (absolute)


:	; forward ref for LDX

; -------------------------------

:	; backward ref for LDY

		.echo **PASS  LDY  ab

		LDY 	$1234
		LDY 	bak16
		LDY 	fwd16

		.echo **FAIL  LDY  abi

		ldy 	($1234)
		ldy 	(bak16)
		ldy 	(fwd16)

		.echo **PASS  LDY  abx

		LDY 	$1234,X
		LDY 	bak16,x
		LDY 	fwd16,X

		.echo **FAIL  LDY  abxi

		ldy 	($1234,X)
		ldy 	(bak16,x)
		ldy 	(fwd16,X)

		.echo **FAIL  LDY  aby

		ldy 	$1234,Y
		ldy 	bak16,y
		ldy 	fwd16,Y

		.echo **FAIL  LDY  acc

		ldy 	A
		ldy 	a

		.echo **FAIL  LDY  bmv

		ldy 	#$12, #$34
		ldy 	#bak08, #fwd08
		ldy 	$123456, $789ABC
		ldy 	bak24, fwd24

		.echo **PASS  LDY  imm

		LDY 	#$12
		LDY 	#bak08
		LDY 	#fwd08

		.echo **FAIL  LDY  imp

		ldy 

		.echo **PASS  LDY  lab  (as ab)

		Ldy 	$123456
		Ldy 	bak24
		Ldy 	fwd24

		.echo **FAIL  LDY  labi

		ldy 	[$123456]
		ldy 	[bak24]
		ldy 	[fwd24]

		.echo **PASS  LDY  labx  (as abx)

		Ldy 	$123456,X
		Ldy 	bak24,x
		Ldy 	fwd24,X

		.echo **PASS  LDY  lpcr  (as ab)

		Ldy 	:+
		Ldy 	-
		Ldy 	+
		Ldy 	:-

		.echo **FAIL  LDY  lzpi

		ldy 	[$12]
		ldy 	[bak08]
		ldy 	[fwd08]

		.echo **FAIL  LDY  lzpiy

		ldy 	[$12],Y
		ldy 	[bak08],y
		ldy 	[fwd08],Y

		.echo **PASS  LDY  pcr  (as ab)

		Ldy 	:+
		Ldy 	-
		Ldy 	+
		Ldy 	:-

		.echo **FAIL  LDY  sr

		ldy 	$12,S
		ldy 	bak08,s
		ldy 	fwd08,S

		.echo **FAIL  LDY  sriy

		ldy 	($12,s),Y
		ldy 	(bak08,S),y
		ldy 	(fwd08,s),Y

		.echo **PASS  LDY  zp

		LDY 	$12
		LDY 	bak08
		Ldy 	fwd08   	; (absolute)

		.echo **FAIL  LDY  zpi

		ldy 	($12)
		ldy 	(bak08)
		ldy 	(fwd08)

		.echo **FAIL  LDY  zpiy

		ldy 	($12),Y
		ldy 	(bak08),y
		ldy 	(fwd08),Y

		.echo **PASS  LDY  zpx

		LDY 	$12,X
		LDY 	bak08,x
		Ldy 	fwd08,X 	; (absolute)

		.echo **FAIL  LDY  zpxi

		ldy 	($12,X)
		ldy 	(bak08,x)
		ldy 	(fwd08,X)

		.echo **FAIL  LDY  zpy

		ldy 	$12,Y
		ldy 	bak08,y
		ldy 	fwd08,Y


:	; forward ref for LDY

; -------------------------------

:	; backward ref for LSR

		.echo **PASS  LSR  ab

		LSR 	$1234
		LSR 	bak16
		LSR 	fwd16

		.echo **FAIL  LSR  abi

		lsr 	($1234)
		lsr 	(bak16)
		lsr 	(fwd16)

		.echo **PASS  LSR  abx

		LSR 	$1234,X
		LSR 	bak16,x
		LSR 	fwd16,X

		.echo **FAIL  LSR  abxi

		lsr 	($1234,X)
		lsr 	(bak16,x)
		lsr 	(fwd16,X)

		.echo **FAIL  LSR  aby

		lsr 	$1234,Y
		lsr 	bak16,y
		lsr 	fwd16,Y

		.echo **PASS  LSR  acc

		LSR 	A
		LSR 	a

		.echo **FAIL  LSR  bmv

		lsr 	#$12, #$34
		lsr 	#bak08, #fwd08
		lsr 	$123456, $789ABC
		lsr 	bak24, fwd24

		.echo **FAIL  LSR  imm

		lsr 	#$12
		lsr 	#bak08
		lsr 	#fwd08

		.echo **PASS  LSR  imp

		LSR 

		.echo **PASS  LSR  lab  (as ab)

		Lsr 	$123456
		Lsr 	bak24
		Lsr 	fwd24

		.echo **FAIL  LSR  labi

		lsr 	[$123456]
		lsr 	[bak24]
		lsr 	[fwd24]

		.echo **PASS  LSR  labx  (as abx)

		Lsr 	$123456,X
		Lsr 	bak24,x
		Lsr 	fwd24,X

		.echo **PASS  LSR  lpcr  (as ab)

		Lsr 	:+
		Lsr 	-
		Lsr 	+
		Lsr 	:-

		.echo **FAIL  LSR  lzpi

		lsr 	[$12]
		lsr 	[bak08]
		lsr 	[fwd08]

		.echo **FAIL  LSR  lzpiy

		lsr 	[$12],Y
		lsr 	[bak08],y
		lsr 	[fwd08],Y

		.echo **PASS  LSR  pcr  (as ab)

		Lsr 	:+
		Lsr 	-
		Lsr 	+
		Lsr 	:-

		.echo **FAIL  LSR  sr

		lsr 	$12,S
		lsr 	bak08,s
		lsr 	fwd08,S

		.echo **FAIL  LSR  sriy

		lsr 	($12,s),Y
		lsr 	(bak08,S),y
		lsr 	(fwd08,s),Y

		.echo **PASS  LSR  zp

		LSR 	$12
		LSR 	bak08
		Lsr 	fwd08   	; (absolute)

		.echo **FAIL  LSR  zpi

		lsr 	($12)
		lsr 	(bak08)
		lsr 	(fwd08)

		.echo **FAIL  LSR  zpiy

		lsr 	($12),Y
		lsr 	(bak08),y
		lsr 	(fwd08),Y

		.echo **PASS  LSR  zpx

		LSR 	$12,X
		LSR 	bak08,x
		Lsr 	fwd08,X 	; (absolute)

		.echo **FAIL  LSR  zpxi

		lsr 	($12,X)
		lsr 	(bak08,x)
		lsr 	(fwd08,X)

		.echo **FAIL  LSR  zpy

		lsr 	$12,Y
		lsr 	bak08,y
		lsr 	fwd08,Y


:	; forward ref for LSR

; -------------------------------

:	; backward ref for MVN

		.echo **FAIL  MVN  ab

		mvn 	$1234
		mvn 	bak16
		mvn 	fwd16

		.echo **FAIL  MVN  abi

		mvn 	($1234)
		mvn 	(bak16)
		mvn 	(fwd16)

		.echo **FAIL  MVN  abx

		mvn 	$1234,X
		mvn 	bak16,x
		mvn 	fwd16,X

		.echo **FAIL  MVN  abxi

		mvn 	($1234,X)
		mvn 	(bak16,x)
		mvn 	(fwd16,X)

		.echo **FAIL  MVN  aby

		mvn 	$1234,Y
		mvn 	bak16,y
		mvn 	fwd16,Y

		.echo **FAIL  MVN  acc

		mvn 	A
		mvn 	a

		.echo **PASS  MVN  bmv

		MVN 	#$12, #$34
		MVN 	#bak08, #fwd08
		MVN 	$123456, $789ABC
		MVN 	bak24, fwd24

		.echo **FAIL  MVN  imm

		mvn 	#$12
		mvn 	#bak08
		mvn 	#fwd08

		.echo **FAIL  MVN  imp

		mvn 

		.echo **FAIL  MVN  lab

		mvn 	$123456
		mvn 	bak24
		mvn 	fwd24

		.echo **FAIL  MVN  labi

		mvn 	[$123456]
		mvn 	[bak24]
		mvn 	[fwd24]

		.echo **FAIL  MVN  labx

		mvn 	$123456,X
		mvn 	bak24,x
		mvn 	fwd24,X

		.echo **FAIL  MVN  lpcr

		mvn 	:+
		mvn 	-
		mvn 	+
		mvn 	:-

		.echo **FAIL  MVN  lzpi

		mvn 	[$12]
		mvn 	[bak08]
		mvn 	[fwd08]

		.echo **FAIL  MVN  lzpiy

		mvn 	[$12],Y
		mvn 	[bak08],y
		mvn 	[fwd08],Y

		.echo **FAIL  MVN  pcr

		mvn 	:+
		mvn 	-
		mvn 	+
		mvn 	:-

		.echo **FAIL  MVN  sr

		mvn 	$12,S
		mvn 	bak08,s
		mvn 	fwd08,S

		.echo **FAIL  MVN  sriy

		mvn 	($12,s),Y
		mvn 	(bak08,S),y
		mvn 	(fwd08,s),Y

		.echo **FAIL  MVN  zp

		mvn 	$12
		mvn 	bak08
		mvn 	fwd08

		.echo **FAIL  MVN  zpi

		mvn 	($12)
		mvn 	(bak08)
		mvn 	(fwd08)

		.echo **FAIL  MVN  zpiy

		mvn 	($12),Y
		mvn 	(bak08),y
		mvn 	(fwd08),Y

		.echo **FAIL  MVN  zpx

		mvn 	$12,X
		mvn 	bak08,x
		mvn 	fwd08,X

		.echo **FAIL  MVN  zpxi

		mvn 	($12,X)
		mvn 	(bak08,x)
		mvn 	(fwd08,X)

		.echo **FAIL  MVN  zpy

		mvn 	$12,Y
		mvn 	bak08,y
		mvn 	fwd08,Y


:	; forward ref for MVN

; -------------------------------

:	; backward ref for MVP

		.echo **FAIL  MVP  ab

		mvp 	$1234
		mvp 	bak16
		mvp 	fwd16

		.echo **FAIL  MVP  abi

		mvp 	($1234)
		mvp 	(bak16)
		mvp 	(fwd16)

		.echo **FAIL  MVP  abx

		mvp 	$1234,X
		mvp 	bak16,x
		mvp 	fwd16,X

		.echo **FAIL  MVP  abxi

		mvp 	($1234,X)
		mvp 	(bak16,x)
		mvp 	(fwd16,X)

		.echo **FAIL  MVP  aby

		mvp 	$1234,Y
		mvp 	bak16,y
		mvp 	fwd16,Y

		.echo **FAIL  MVP  acc

		mvp 	A
		mvp 	a

		.echo **PASS  MVP  bmv

		MVP 	#$12, #$34
		MVP 	#bak08, #fwd08
		MVP 	$123456, $789ABC
		MVP 	bak24, fwd24

		.echo **FAIL  MVP  imm

		mvp 	#$12
		mvp 	#bak08
		mvp 	#fwd08

		.echo **FAIL  MVP  imp

		mvp 

		.echo **FAIL  MVP  lab

		mvp 	$123456
		mvp 	bak24
		mvp 	fwd24

		.echo **FAIL  MVP  labi

		mvp 	[$123456]
		mvp 	[bak24]
		mvp 	[fwd24]

		.echo **FAIL  MVP  labx

		mvp 	$123456,X
		mvp 	bak24,x
		mvp 	fwd24,X

		.echo **FAIL  MVP  lpcr

		mvp 	:+
		mvp 	-
		mvp 	+
		mvp 	:-

		.echo **FAIL  MVP  lzpi

		mvp 	[$12]
		mvp 	[bak08]
		mvp 	[fwd08]

		.echo **FAIL  MVP  lzpiy

		mvp 	[$12],Y
		mvp 	[bak08],y
		mvp 	[fwd08],Y

		.echo **FAIL  MVP  pcr

		mvp 	:+
		mvp 	-
		mvp 	+
		mvp 	:-

		.echo **FAIL  MVP  sr

		mvp 	$12,S
		mvp 	bak08,s
		mvp 	fwd08,S

		.echo **FAIL  MVP  sriy

		mvp 	($12,s),Y
		mvp 	(bak08,S),y
		mvp 	(fwd08,s),Y

		.echo **FAIL  MVP  zp

		mvp 	$12
		mvp 	bak08
		mvp 	fwd08

		.echo **FAIL  MVP  zpi

		mvp 	($12)
		mvp 	(bak08)
		mvp 	(fwd08)

		.echo **FAIL  MVP  zpiy

		mvp 	($12),Y
		mvp 	(bak08),y
		mvp 	(fwd08),Y

		.echo **FAIL  MVP  zpx

		mvp 	$12,X
		mvp 	bak08,x
		mvp 	fwd08,X

		.echo **FAIL  MVP  zpxi

		mvp 	($12,X)
		mvp 	(bak08,x)
		mvp 	(fwd08,X)

		.echo **FAIL  MVP  zpy

		mvp 	$12,Y
		mvp 	bak08,y
		mvp 	fwd08,Y


:	; forward ref for MVP

; -------------------------------

:	; backward ref for NOP

		.echo **FAIL  NOP  ab

		nop 	$1234
		nop 	bak16
		nop 	fwd16

		.echo **FAIL  NOP  abi

		nop 	($1234)
		nop 	(bak16)
		nop 	(fwd16)

		.echo **FAIL  NOP  abx

		nop 	$1234,X
		nop 	bak16,x
		nop 	fwd16,X

		.echo **FAIL  NOP  abxi

		nop 	($1234,X)
		nop 	(bak16,x)
		nop 	(fwd16,X)

		.echo **FAIL  NOP  aby

		nop 	$1234,Y
		nop 	bak16,y
		nop 	fwd16,Y

		.echo **FAIL  NOP  acc

		nop 	A
		nop 	a

		.echo **FAIL  NOP  bmv

		nop 	#$12, #$34
		nop 	#bak08, #fwd08
		nop 	$123456, $789ABC
		nop 	bak24, fwd24

		.echo **FAIL  NOP  imm

		nop 	#$12
		nop 	#bak08
		nop 	#fwd08

		.echo **PASS  NOP  imp

		NOP 

		.echo **FAIL  NOP  lab

		nop 	$123456
		nop 	bak24
		nop 	fwd24

		.echo **FAIL  NOP  labi

		nop 	[$123456]
		nop 	[bak24]
		nop 	[fwd24]

		.echo **FAIL  NOP  labx

		nop 	$123456,X
		nop 	bak24,x
		nop 	fwd24,X

		.echo **FAIL  NOP  lpcr

		nop 	:+
		nop 	-
		nop 	+
		nop 	:-

		.echo **FAIL  NOP  lzpi

		nop 	[$12]
		nop 	[bak08]
		nop 	[fwd08]

		.echo **FAIL  NOP  lzpiy

		nop 	[$12],Y
		nop 	[bak08],y
		nop 	[fwd08],Y

		.echo **FAIL  NOP  pcr

		nop 	:+
		nop 	-
		nop 	+
		nop 	:-

		.echo **FAIL  NOP  sr

		nop 	$12,S
		nop 	bak08,s
		nop 	fwd08,S

		.echo **FAIL  NOP  sriy

		nop 	($12,s),Y
		nop 	(bak08,S),y
		nop 	(fwd08,s),Y

		.echo **FAIL  NOP  zp

		nop 	$12
		nop 	bak08
		nop 	fwd08

		.echo **FAIL  NOP  zpi

		nop 	($12)
		nop 	(bak08)
		nop 	(fwd08)

		.echo **FAIL  NOP  zpiy

		nop 	($12),Y
		nop 	(bak08),y
		nop 	(fwd08),Y

		.echo **FAIL  NOP  zpx

		nop 	$12,X
		nop 	bak08,x
		nop 	fwd08,X

		.echo **FAIL  NOP  zpxi

		nop 	($12,X)
		nop 	(bak08,x)
		nop 	(fwd08,X)

		.echo **FAIL  NOP  zpy

		nop 	$12,Y
		nop 	bak08,y
		nop 	fwd08,Y


:	; forward ref for NOP

; -------------------------------

:	; backward ref for ORA

		.echo **PASS  ORA  ab

		ORA 	$1234
		ORA 	bak16
		ORA 	fwd16

		.echo **PASS  ORA  abi  (as zpi)

		Ora 	($1234)
		Ora 	(bak16)
		Ora 	(fwd16)

		.echo **PASS  ORA  abx

		ORA 	$1234,X
		ORA 	bak16,x
		ORA 	fwd16,X

		.echo **PASS  ORA  abxi  (as zpxi)

		Ora 	($1234,X)
		Ora 	(bak16,x)
		Ora 	(fwd16,X)

		.echo **PASS  ORA  aby

		ORA 	$1234,Y
		ORA 	bak16,y
		ORA 	fwd16,Y

		.echo **FAIL  ORA  acc

		ora 	A
		ora 	a

		.echo **FAIL  ORA  bmv

		ora 	#$12, #$34
		ora 	#bak08, #fwd08
		ora 	$123456, $789ABC
		ora 	bak24, fwd24

		.echo **PASS  ORA  imm

		ORA 	#$12
		ORA 	#bak08
		ORA 	#fwd08

		.echo **FAIL  ORA  imp

		ora 

		.echo **PASS  ORA  lab

		ORA 	$123456
		ORA 	bak24
		ORA 	fwd24

		.echo **PASS  ORA  labi  (as lzpi)

		Ora 	[$123456]
		Ora 	[bak24]
		Ora 	[fwd24]

		.echo **PASS  ORA  labx

		ORA 	$123456,X
		ORA 	bak24,x
		ORA 	fwd24,X

		.echo **PASS  ORA  lpcr  (as ab)

		Ora 	:+
		Ora 	-
		Ora 	+
		Ora 	:-

		.echo **PASS  ORA  lzpi

		ORA 	[$12]
		ORA 	[bak08]
		ORA 	[fwd08]

		.echo **PASS  ORA  lzpiy

		ORA 	[$12],Y
		ORA 	[bak08],y
		ORA 	[fwd08],Y

		.echo **PASS  ORA  pcr  (as ab)

		Ora 	:+
		Ora 	-
		Ora 	+
		Ora 	:-

		.echo **PASS  ORA  sr

		ORA 	$12,S
		ORA 	bak08,s
		ORA 	fwd08,S

		.echo **PASS  ORA  sriy

		ORA 	($12,s),Y
		ORA 	(bak08,S),y
		ORA 	(fwd08,s),Y

		.echo **PASS  ORA  zp

		ORA 	$12
		ORA 	bak08
		Ora 	fwd08   	; (absolute)

		.echo **PASS  ORA  zpi

		ORA 	($12)
		ORA 	(bak08)
		ORA 	(fwd08)

		.echo **PASS  ORA  zpiy

		ORA 	($12),Y
		ORA 	(bak08),y
		ORA 	(fwd08),Y

		.echo **PASS  ORA  zpx

		ORA 	$12,X
		ORA 	bak08,x
		Ora 	fwd08,X 	; (absolute)

		.echo **PASS  ORA  zpxi

		ORA 	($12,X)
		ORA 	(bak08,x)
		ORA 	(fwd08,X)

		.echo **PASS  ORA  zpy  (as aby)

		Ora 	$12,Y
		Ora 	bak08,y
		Ora 	fwd08,Y


:	; forward ref for ORA

; -------------------------------

:	; backward ref for PEA

		.echo **PASS  PEA  ab

		PEA 	$1234
		PEA 	bak16
		PEA 	fwd16

		.echo **FAIL  PEA  abi

		pea 	($1234)
		pea 	(bak16)
		pea 	(fwd16)

		.echo **FAIL  PEA  abx

		pea 	$1234,X
		pea 	bak16,x
		pea 	fwd16,X

		.echo **FAIL  PEA  abxi

		pea 	($1234,X)
		pea 	(bak16,x)
		pea 	(fwd16,X)

		.echo **FAIL  PEA  aby

		pea 	$1234,Y
		pea 	bak16,y
		pea 	fwd16,Y

		.echo **FAIL  PEA  acc

		pea 	A
		pea 	a

		.echo **FAIL  PEA  bmv

		pea 	#$12, #$34
		pea 	#bak08, #fwd08
		pea 	$123456, $789ABC
		pea 	bak24, fwd24

		.echo **PASS  PEA  imm

		PEA 	#$12
		PEA 	#bak08
		PEA 	#fwd08

		.echo **FAIL  PEA  imp

		pea 

		.echo **PASS  PEA  lab  (as ab)

		Pea 	$123456
		Pea 	bak24
		Pea 	fwd24

		.echo **FAIL  PEA  labi

		pea 	[$123456]
		pea 	[bak24]
		pea 	[fwd24]

		.echo **FAIL  PEA  labx

		pea 	$123456,X
		pea 	bak24,x
		pea 	fwd24,X

		.echo **PASS  PEA  lpcr  (as ab)

		Pea 	:+
		Pea 	-
		Pea 	+
		Pea 	:-

		.echo **FAIL  PEA  lzpi

		pea 	[$12]
		pea 	[bak08]
		pea 	[fwd08]

		.echo **FAIL  PEA  lzpiy

		pea 	[$12],Y
		pea 	[bak08],y
		pea 	[fwd08],Y

		.echo **PASS  PEA  pcr  (as ab)

		Pea 	:+
		Pea 	-
		Pea 	+
		Pea 	:-

		.echo **FAIL  PEA  sr

		pea 	$12,S
		pea 	bak08,s
		pea 	fwd08,S

		.echo **FAIL  PEA  sriy

		pea 	($12,s),Y
		pea 	(bak08,S),y
		pea 	(fwd08,s),Y

		.echo **PASS  PEA  zp  (as ab)

		Pea 	$12
		Pea 	bak08
		Pea 	fwd08

		.echo **FAIL  PEA  zpi

		pea 	($12)
		pea 	(bak08)
		pea 	(fwd08)

		.echo **FAIL  PEA  zpiy

		pea 	($12),Y
		pea 	(bak08),y
		pea 	(fwd08),Y

		.echo **FAIL  PEA  zpx

		pea 	$12,X
		pea 	bak08,x
		pea 	fwd08,X

		.echo **FAIL  PEA  zpxi

		pea 	($12,X)
		pea 	(bak08,x)
		pea 	(fwd08,X)

		.echo **FAIL  PEA  zpy

		pea 	$12,Y
		pea 	bak08,y
		pea 	fwd08,Y


:	; forward ref for PEA

; -------------------------------

:	; backward ref for PEI

		.echo **PASS  PEI  ab  (as zp)

		Pei 	$1234
		Pei 	bak16
		Pei 	fwd16

		.echo **PASS  PEI  abi  (as zpi)

		Pei 	($1234)
		Pei 	(bak16)
		Pei 	(fwd16)

		.echo **FAIL  PEI  abx

		pei 	$1234,X
		pei 	bak16,x
		pei 	fwd16,X

		.echo **FAIL  PEI  abxi

		pei 	($1234,X)
		pei 	(bak16,x)
		pei 	(fwd16,X)

		.echo **FAIL  PEI  aby

		pei 	$1234,Y
		pei 	bak16,y
		pei 	fwd16,Y

		.echo **FAIL  PEI  acc

		pei 	A
		pei 	a

		.echo **FAIL  PEI  bmv

		pei 	#$12, #$34
		pei 	#bak08, #fwd08
		pei 	$123456, $789ABC
		pei 	bak24, fwd24

		.echo **FAIL  PEI  imm

		pei 	#$12
		pei 	#bak08
		pei 	#fwd08

		.echo **FAIL  PEI  imp

		pei 

		.echo **PASS  PEI  lab  (as zp)

		Pei 	$123456
		Pei 	bak24
		Pei 	fwd24

		.echo **FAIL  PEI  labi

		pei 	[$123456]
		pei 	[bak24]
		pei 	[fwd24]

		.echo **FAIL  PEI  labx

		pei 	$123456,X
		pei 	bak24,x
		pei 	fwd24,X

		.echo **PASS  PEI  lpcr  (as zp)

		Pei 	:+
		Pei 	-
		Pei 	+
		Pei 	:-

		.echo **FAIL  PEI  lzpi

		pei 	[$12]
		pei 	[bak08]
		pei 	[fwd08]

		.echo **FAIL  PEI  lzpiy

		pei 	[$12],Y
		pei 	[bak08],y
		pei 	[fwd08],Y

		.echo **PASS  PEI  pcr  (as zp)

		Pei 	:+
		Pei 	-
		Pei 	+
		Pei 	:-

		.echo **FAIL  PEI  sr

		pei 	$12,S
		pei 	bak08,s
		pei 	fwd08,S

		.echo **FAIL  PEI  sriy

		pei 	($12,s),Y
		pei 	(bak08,S),y
		pei 	(fwd08,s),Y

		.echo **PASS  PEI  zp

		PEI 	$12
		PEI 	bak08
		PEI 	fwd08

		.echo **PASS  PEI  zpi

		PEI 	($12)
		PEI 	(bak08)
		PEI 	(fwd08)

		.echo **FAIL  PEI  zpiy

		pei 	($12),Y
		pei 	(bak08),y
		pei 	(fwd08),Y

		.echo **FAIL  PEI  zpx

		pei 	$12,X
		pei 	bak08,x
		pei 	fwd08,X

		.echo **FAIL  PEI  zpxi

		pei 	($12,X)
		pei 	(bak08,x)
		pei 	(fwd08,X)

		.echo **FAIL  PEI  zpy

		pei 	$12,Y
		pei 	bak08,y
		pei 	fwd08,Y


:	; forward ref for PEI

; -------------------------------

:	; backward ref for PER

		.echo **PASS  PER  ab  (as lpcr)

		Per 	$1234
		Per 	bak16
		Per 	fwd16

		.echo **FAIL  PER  abi

		per 	($1234)
		per 	(bak16)
		per 	(fwd16)

		.echo **FAIL  PER  abx

		per 	$1234,X
		per 	bak16,x
		per 	fwd16,X

		.echo **FAIL  PER  abxi

		per 	($1234,X)
		per 	(bak16,x)
		per 	(fwd16,X)

		.echo **FAIL  PER  aby

		per 	$1234,Y
		per 	bak16,y
		per 	fwd16,Y

		.echo **FAIL  PER  acc

		per 	A
		per 	a

		.echo **FAIL  PER  bmv

		per 	#$12, #$34
		per 	#bak08, #fwd08
		per 	$123456, $789ABC
		per 	bak24, fwd24

		.echo **FAIL  PER  imm

		per 	#$12
		per 	#bak08
		per 	#fwd08

		.echo **FAIL  PER  imp

		per 

		.echo **PASS  PER  lab  (as lpcr)

		Per 	$123456
		Per 	bak24
		Per 	fwd24

		.echo **FAIL  PER  labi

		per 	[$123456]
		per 	[bak24]
		per 	[fwd24]

		.echo **FAIL  PER  labx

		per 	$123456,X
		per 	bak24,x
		per 	fwd24,X

		.echo **PASS  PER  lpcr

		PER 	:+
		PER 	-
		PER 	+
		PER 	:-

		.echo **FAIL  PER  lzpi

		per 	[$12]
		per 	[bak08]
		per 	[fwd08]

		.echo **FAIL  PER  lzpiy

		per 	[$12],Y
		per 	[bak08],y
		per 	[fwd08],Y

		.echo **PASS  PER  pcr  (as lpcr)

		Per 	:+
		Per 	-
		Per 	+
		Per 	:-

		.echo **FAIL  PER  sr

		per 	$12,S
		per 	bak08,s
		per 	fwd08,S

		.echo **FAIL  PER  sriy

		per 	($12,s),Y
		per 	(bak08,S),y
		per 	(fwd08,s),Y

		.echo **PASS  PER  zp  (as lpcr)

		Per 	$12
		Per 	bak08
		Per 	fwd08

		.echo **FAIL  PER  zpi

		per 	($12)
		per 	(bak08)
		per 	(fwd08)

		.echo **FAIL  PER  zpiy

		per 	($12),Y
		per 	(bak08),y
		per 	(fwd08),Y

		.echo **FAIL  PER  zpx

		per 	$12,X
		per 	bak08,x
		per 	fwd08,X

		.echo **FAIL  PER  zpxi

		per 	($12,X)
		per 	(bak08,x)
		per 	(fwd08,X)

		.echo **FAIL  PER  zpy

		per 	$12,Y
		per 	bak08,y
		per 	fwd08,Y


:	; forward ref for PER

; -------------------------------

:	; backward ref for PHA

		.echo **FAIL  PHA  ab

		pha 	$1234
		pha 	bak16
		pha 	fwd16

		.echo **FAIL  PHA  abi

		pha 	($1234)
		pha 	(bak16)
		pha 	(fwd16)

		.echo **FAIL  PHA  abx

		pha 	$1234,X
		pha 	bak16,x
		pha 	fwd16,X

		.echo **FAIL  PHA  abxi

		pha 	($1234,X)
		pha 	(bak16,x)
		pha 	(fwd16,X)

		.echo **FAIL  PHA  aby

		pha 	$1234,Y
		pha 	bak16,y
		pha 	fwd16,Y

		.echo **FAIL  PHA  acc

		pha 	A
		pha 	a

		.echo **FAIL  PHA  bmv

		pha 	#$12, #$34
		pha 	#bak08, #fwd08
		pha 	$123456, $789ABC
		pha 	bak24, fwd24

		.echo **FAIL  PHA  imm

		pha 	#$12
		pha 	#bak08
		pha 	#fwd08

		.echo **PASS  PHA  imp

		PHA 

		.echo **FAIL  PHA  lab

		pha 	$123456
		pha 	bak24
		pha 	fwd24

		.echo **FAIL  PHA  labi

		pha 	[$123456]
		pha 	[bak24]
		pha 	[fwd24]

		.echo **FAIL  PHA  labx

		pha 	$123456,X
		pha 	bak24,x
		pha 	fwd24,X

		.echo **FAIL  PHA  lpcr

		pha 	:+
		pha 	-
		pha 	+
		pha 	:-

		.echo **FAIL  PHA  lzpi

		pha 	[$12]
		pha 	[bak08]
		pha 	[fwd08]

		.echo **FAIL  PHA  lzpiy

		pha 	[$12],Y
		pha 	[bak08],y
		pha 	[fwd08],Y

		.echo **FAIL  PHA  pcr

		pha 	:+
		pha 	-
		pha 	+
		pha 	:-

		.echo **FAIL  PHA  sr

		pha 	$12,S
		pha 	bak08,s
		pha 	fwd08,S

		.echo **FAIL  PHA  sriy

		pha 	($12,s),Y
		pha 	(bak08,S),y
		pha 	(fwd08,s),Y

		.echo **FAIL  PHA  zp

		pha 	$12
		pha 	bak08
		pha 	fwd08

		.echo **FAIL  PHA  zpi

		pha 	($12)
		pha 	(bak08)
		pha 	(fwd08)

		.echo **FAIL  PHA  zpiy

		pha 	($12),Y
		pha 	(bak08),y
		pha 	(fwd08),Y

		.echo **FAIL  PHA  zpx

		pha 	$12,X
		pha 	bak08,x
		pha 	fwd08,X

		.echo **FAIL  PHA  zpxi

		pha 	($12,X)
		pha 	(bak08,x)
		pha 	(fwd08,X)

		.echo **FAIL  PHA  zpy

		pha 	$12,Y
		pha 	bak08,y
		pha 	fwd08,Y


:	; forward ref for PHA

; -------------------------------

:	; backward ref for PHB

		.echo **FAIL  PHB  ab

		phb 	$1234
		phb 	bak16
		phb 	fwd16

		.echo **FAIL  PHB  abi

		phb 	($1234)
		phb 	(bak16)
		phb 	(fwd16)

		.echo **FAIL  PHB  abx

		phb 	$1234,X
		phb 	bak16,x
		phb 	fwd16,X

		.echo **FAIL  PHB  abxi

		phb 	($1234,X)
		phb 	(bak16,x)
		phb 	(fwd16,X)

		.echo **FAIL  PHB  aby

		phb 	$1234,Y
		phb 	bak16,y
		phb 	fwd16,Y

		.echo **FAIL  PHB  acc

		phb 	A
		phb 	a

		.echo **FAIL  PHB  bmv

		phb 	#$12, #$34
		phb 	#bak08, #fwd08
		phb 	$123456, $789ABC
		phb 	bak24, fwd24

		.echo **FAIL  PHB  imm

		phb 	#$12
		phb 	#bak08
		phb 	#fwd08

		.echo **PASS  PHB  imp

		PHB 

		.echo **FAIL  PHB  lab

		phb 	$123456
		phb 	bak24
		phb 	fwd24

		.echo **FAIL  PHB  labi

		phb 	[$123456]
		phb 	[bak24]
		phb 	[fwd24]

		.echo **FAIL  PHB  labx

		phb 	$123456,X
		phb 	bak24,x
		phb 	fwd24,X

		.echo **FAIL  PHB  lpcr

		phb 	:+
		phb 	-
		phb 	+
		phb 	:-

		.echo **FAIL  PHB  lzpi

		phb 	[$12]
		phb 	[bak08]
		phb 	[fwd08]

		.echo **FAIL  PHB  lzpiy

		phb 	[$12],Y
		phb 	[bak08],y
		phb 	[fwd08],Y

		.echo **FAIL  PHB  pcr

		phb 	:+
		phb 	-
		phb 	+
		phb 	:-

		.echo **FAIL  PHB  sr

		phb 	$12,S
		phb 	bak08,s
		phb 	fwd08,S

		.echo **FAIL  PHB  sriy

		phb 	($12,s),Y
		phb 	(bak08,S),y
		phb 	(fwd08,s),Y

		.echo **FAIL  PHB  zp

		phb 	$12
		phb 	bak08
		phb 	fwd08

		.echo **FAIL  PHB  zpi

		phb 	($12)
		phb 	(bak08)
		phb 	(fwd08)

		.echo **FAIL  PHB  zpiy

		phb 	($12),Y
		phb 	(bak08),y
		phb 	(fwd08),Y

		.echo **FAIL  PHB  zpx

		phb 	$12,X
		phb 	bak08,x
		phb 	fwd08,X

		.echo **FAIL  PHB  zpxi

		phb 	($12,X)
		phb 	(bak08,x)
		phb 	(fwd08,X)

		.echo **FAIL  PHB  zpy

		phb 	$12,Y
		phb 	bak08,y
		phb 	fwd08,Y


:	; forward ref for PHB

; -------------------------------

:	; backward ref for PHD

		.echo **FAIL  PHD  ab

		phd 	$1234
		phd 	bak16
		phd 	fwd16

		.echo **FAIL  PHD  abi

		phd 	($1234)
		phd 	(bak16)
		phd 	(fwd16)

		.echo **FAIL  PHD  abx

		phd 	$1234,X
		phd 	bak16,x
		phd 	fwd16,X

		.echo **FAIL  PHD  abxi

		phd 	($1234,X)
		phd 	(bak16,x)
		phd 	(fwd16,X)

		.echo **FAIL  PHD  aby

		phd 	$1234,Y
		phd 	bak16,y
		phd 	fwd16,Y

		.echo **FAIL  PHD  acc

		phd 	A
		phd 	a

		.echo **FAIL  PHD  bmv

		phd 	#$12, #$34
		phd 	#bak08, #fwd08
		phd 	$123456, $789ABC
		phd 	bak24, fwd24

		.echo **FAIL  PHD  imm

		phd 	#$12
		phd 	#bak08
		phd 	#fwd08

		.echo **PASS  PHD  imp

		PHD 

		.echo **FAIL  PHD  lab

		phd 	$123456
		phd 	bak24
		phd 	fwd24

		.echo **FAIL  PHD  labi

		phd 	[$123456]
		phd 	[bak24]
		phd 	[fwd24]

		.echo **FAIL  PHD  labx

		phd 	$123456,X
		phd 	bak24,x
		phd 	fwd24,X

		.echo **FAIL  PHD  lpcr

		phd 	:+
		phd 	-
		phd 	+
		phd 	:-

		.echo **FAIL  PHD  lzpi

		phd 	[$12]
		phd 	[bak08]
		phd 	[fwd08]

		.echo **FAIL  PHD  lzpiy

		phd 	[$12],Y
		phd 	[bak08],y
		phd 	[fwd08],Y

		.echo **FAIL  PHD  pcr

		phd 	:+
		phd 	-
		phd 	+
		phd 	:-

		.echo **FAIL  PHD  sr

		phd 	$12,S
		phd 	bak08,s
		phd 	fwd08,S

		.echo **FAIL  PHD  sriy

		phd 	($12,s),Y
		phd 	(bak08,S),y
		phd 	(fwd08,s),Y

		.echo **FAIL  PHD  zp

		phd 	$12
		phd 	bak08
		phd 	fwd08

		.echo **FAIL  PHD  zpi

		phd 	($12)
		phd 	(bak08)
		phd 	(fwd08)

		.echo **FAIL  PHD  zpiy

		phd 	($12),Y
		phd 	(bak08),y
		phd 	(fwd08),Y

		.echo **FAIL  PHD  zpx

		phd 	$12,X
		phd 	bak08,x
		phd 	fwd08,X

		.echo **FAIL  PHD  zpxi

		phd 	($12,X)
		phd 	(bak08,x)
		phd 	(fwd08,X)

		.echo **FAIL  PHD  zpy

		phd 	$12,Y
		phd 	bak08,y
		phd 	fwd08,Y


:	; forward ref for PHD

; -------------------------------

:	; backward ref for PHK

		.echo **FAIL  PHK  ab

		phk 	$1234
		phk 	bak16
		phk 	fwd16

		.echo **FAIL  PHK  abi

		phk 	($1234)
		phk 	(bak16)
		phk 	(fwd16)

		.echo **FAIL  PHK  abx

		phk 	$1234,X
		phk 	bak16,x
		phk 	fwd16,X

		.echo **FAIL  PHK  abxi

		phk 	($1234,X)
		phk 	(bak16,x)
		phk 	(fwd16,X)

		.echo **FAIL  PHK  aby

		phk 	$1234,Y
		phk 	bak16,y
		phk 	fwd16,Y

		.echo **FAIL  PHK  acc

		phk 	A
		phk 	a

		.echo **FAIL  PHK  bmv

		phk 	#$12, #$34
		phk 	#bak08, #fwd08
		phk 	$123456, $789ABC
		phk 	bak24, fwd24

		.echo **FAIL  PHK  imm

		phk 	#$12
		phk 	#bak08
		phk 	#fwd08

		.echo **PASS  PHK  imp

		PHK 

		.echo **FAIL  PHK  lab

		phk 	$123456
		phk 	bak24
		phk 	fwd24

		.echo **FAIL  PHK  labi

		phk 	[$123456]
		phk 	[bak24]
		phk 	[fwd24]

		.echo **FAIL  PHK  labx

		phk 	$123456,X
		phk 	bak24,x
		phk 	fwd24,X

		.echo **FAIL  PHK  lpcr

		phk 	:+
		phk 	-
		phk 	+
		phk 	:-

		.echo **FAIL  PHK  lzpi

		phk 	[$12]
		phk 	[bak08]
		phk 	[fwd08]

		.echo **FAIL  PHK  lzpiy

		phk 	[$12],Y
		phk 	[bak08],y
		phk 	[fwd08],Y

		.echo **FAIL  PHK  pcr

		phk 	:+
		phk 	-
		phk 	+
		phk 	:-

		.echo **FAIL  PHK  sr

		phk 	$12,S
		phk 	bak08,s
		phk 	fwd08,S

		.echo **FAIL  PHK  sriy

		phk 	($12,s),Y
		phk 	(bak08,S),y
		phk 	(fwd08,s),Y

		.echo **FAIL  PHK  zp

		phk 	$12
		phk 	bak08
		phk 	fwd08

		.echo **FAIL  PHK  zpi

		phk 	($12)
		phk 	(bak08)
		phk 	(fwd08)

		.echo **FAIL  PHK  zpiy

		phk 	($12),Y
		phk 	(bak08),y
		phk 	(fwd08),Y

		.echo **FAIL  PHK  zpx

		phk 	$12,X
		phk 	bak08,x
		phk 	fwd08,X

		.echo **FAIL  PHK  zpxi

		phk 	($12,X)
		phk 	(bak08,x)
		phk 	(fwd08,X)

		.echo **FAIL  PHK  zpy

		phk 	$12,Y
		phk 	bak08,y
		phk 	fwd08,Y


:	; forward ref for PHK

; -------------------------------

:	; backward ref for PHP

		.echo **FAIL  PHP  ab

		php 	$1234
		php 	bak16
		php 	fwd16

		.echo **FAIL  PHP  abi

		php 	($1234)
		php 	(bak16)
		php 	(fwd16)

		.echo **FAIL  PHP  abx

		php 	$1234,X
		php 	bak16,x
		php 	fwd16,X

		.echo **FAIL  PHP  abxi

		php 	($1234,X)
		php 	(bak16,x)
		php 	(fwd16,X)

		.echo **FAIL  PHP  aby

		php 	$1234,Y
		php 	bak16,y
		php 	fwd16,Y

		.echo **FAIL  PHP  acc

		php 	A
		php 	a

		.echo **FAIL  PHP  bmv

		php 	#$12, #$34
		php 	#bak08, #fwd08
		php 	$123456, $789ABC
		php 	bak24, fwd24

		.echo **FAIL  PHP  imm

		php 	#$12
		php 	#bak08
		php 	#fwd08

		.echo **PASS  PHP  imp

		PHP 

		.echo **FAIL  PHP  lab

		php 	$123456
		php 	bak24
		php 	fwd24

		.echo **FAIL  PHP  labi

		php 	[$123456]
		php 	[bak24]
		php 	[fwd24]

		.echo **FAIL  PHP  labx

		php 	$123456,X
		php 	bak24,x
		php 	fwd24,X

		.echo **FAIL  PHP  lpcr

		php 	:+
		php 	-
		php 	+
		php 	:-

		.echo **FAIL  PHP  lzpi

		php 	[$12]
		php 	[bak08]
		php 	[fwd08]

		.echo **FAIL  PHP  lzpiy

		php 	[$12],Y
		php 	[bak08],y
		php 	[fwd08],Y

		.echo **FAIL  PHP  pcr

		php 	:+
		php 	-
		php 	+
		php 	:-

		.echo **FAIL  PHP  sr

		php 	$12,S
		php 	bak08,s
		php 	fwd08,S

		.echo **FAIL  PHP  sriy

		php 	($12,s),Y
		php 	(bak08,S),y
		php 	(fwd08,s),Y

		.echo **FAIL  PHP  zp

		php 	$12
		php 	bak08
		php 	fwd08

		.echo **FAIL  PHP  zpi

		php 	($12)
		php 	(bak08)
		php 	(fwd08)

		.echo **FAIL  PHP  zpiy

		php 	($12),Y
		php 	(bak08),y
		php 	(fwd08),Y

		.echo **FAIL  PHP  zpx

		php 	$12,X
		php 	bak08,x
		php 	fwd08,X

		.echo **FAIL  PHP  zpxi

		php 	($12,X)
		php 	(bak08,x)
		php 	(fwd08,X)

		.echo **FAIL  PHP  zpy

		php 	$12,Y
		php 	bak08,y
		php 	fwd08,Y


:	; forward ref for PHP

; -------------------------------

:	; backward ref for PHX

		.echo **FAIL  PHX  ab

		phx 	$1234
		phx 	bak16
		phx 	fwd16

		.echo **FAIL  PHX  abi

		phx 	($1234)
		phx 	(bak16)
		phx 	(fwd16)

		.echo **FAIL  PHX  abx

		phx 	$1234,X
		phx 	bak16,x
		phx 	fwd16,X

		.echo **FAIL  PHX  abxi

		phx 	($1234,X)
		phx 	(bak16,x)
		phx 	(fwd16,X)

		.echo **FAIL  PHX  aby

		phx 	$1234,Y
		phx 	bak16,y
		phx 	fwd16,Y

		.echo **FAIL  PHX  acc

		phx 	A
		phx 	a

		.echo **FAIL  PHX  bmv

		phx 	#$12, #$34
		phx 	#bak08, #fwd08
		phx 	$123456, $789ABC
		phx 	bak24, fwd24

		.echo **FAIL  PHX  imm

		phx 	#$12
		phx 	#bak08
		phx 	#fwd08

		.echo **PASS  PHX  imp

		PHX 

		.echo **FAIL  PHX  lab

		phx 	$123456
		phx 	bak24
		phx 	fwd24

		.echo **FAIL  PHX  labi

		phx 	[$123456]
		phx 	[bak24]
		phx 	[fwd24]

		.echo **FAIL  PHX  labx

		phx 	$123456,X
		phx 	bak24,x
		phx 	fwd24,X

		.echo **FAIL  PHX  lpcr

		phx 	:+
		phx 	-
		phx 	+
		phx 	:-

		.echo **FAIL  PHX  lzpi

		phx 	[$12]
		phx 	[bak08]
		phx 	[fwd08]

		.echo **FAIL  PHX  lzpiy

		phx 	[$12],Y
		phx 	[bak08],y
		phx 	[fwd08],Y

		.echo **FAIL  PHX  pcr

		phx 	:+
		phx 	-
		phx 	+
		phx 	:-

		.echo **FAIL  PHX  sr

		phx 	$12,S
		phx 	bak08,s
		phx 	fwd08,S

		.echo **FAIL  PHX  sriy

		phx 	($12,s),Y
		phx 	(bak08,S),y
		phx 	(fwd08,s),Y

		.echo **FAIL  PHX  zp

		phx 	$12
		phx 	bak08
		phx 	fwd08

		.echo **FAIL  PHX  zpi

		phx 	($12)
		phx 	(bak08)
		phx 	(fwd08)

		.echo **FAIL  PHX  zpiy

		phx 	($12),Y
		phx 	(bak08),y
		phx 	(fwd08),Y

		.echo **FAIL  PHX  zpx

		phx 	$12,X
		phx 	bak08,x
		phx 	fwd08,X

		.echo **FAIL  PHX  zpxi

		phx 	($12,X)
		phx 	(bak08,x)
		phx 	(fwd08,X)

		.echo **FAIL  PHX  zpy

		phx 	$12,Y
		phx 	bak08,y
		phx 	fwd08,Y


:	; forward ref for PHX

; -------------------------------

:	; backward ref for PHY

		.echo **FAIL  PHY  ab

		phy 	$1234
		phy 	bak16
		phy 	fwd16

		.echo **FAIL  PHY  abi

		phy 	($1234)
		phy 	(bak16)
		phy 	(fwd16)

		.echo **FAIL  PHY  abx

		phy 	$1234,X
		phy 	bak16,x
		phy 	fwd16,X

		.echo **FAIL  PHY  abxi

		phy 	($1234,X)
		phy 	(bak16,x)
		phy 	(fwd16,X)

		.echo **FAIL  PHY  aby

		phy 	$1234,Y
		phy 	bak16,y
		phy 	fwd16,Y

		.echo **FAIL  PHY  acc

		phy 	A
		phy 	a

		.echo **FAIL  PHY  bmv

		phy 	#$12, #$34
		phy 	#bak08, #fwd08
		phy 	$123456, $789ABC
		phy 	bak24, fwd24

		.echo **FAIL  PHY  imm

		phy 	#$12
		phy 	#bak08
		phy 	#fwd08

		.echo **PASS  PHY  imp

		PHY 

		.echo **FAIL  PHY  lab

		phy 	$123456
		phy 	bak24
		phy 	fwd24

		.echo **FAIL  PHY  labi

		phy 	[$123456]
		phy 	[bak24]
		phy 	[fwd24]

		.echo **FAIL  PHY  labx

		phy 	$123456,X
		phy 	bak24,x
		phy 	fwd24,X

		.echo **FAIL  PHY  lpcr

		phy 	:+
		phy 	-
		phy 	+
		phy 	:-

		.echo **FAIL  PHY  lzpi

		phy 	[$12]
		phy 	[bak08]
		phy 	[fwd08]

		.echo **FAIL  PHY  lzpiy

		phy 	[$12],Y
		phy 	[bak08],y
		phy 	[fwd08],Y

		.echo **FAIL  PHY  pcr

		phy 	:+
		phy 	-
		phy 	+
		phy 	:-

		.echo **FAIL  PHY  sr

		phy 	$12,S
		phy 	bak08,s
		phy 	fwd08,S

		.echo **FAIL  PHY  sriy

		phy 	($12,s),Y
		phy 	(bak08,S),y
		phy 	(fwd08,s),Y

		.echo **FAIL  PHY  zp

		phy 	$12
		phy 	bak08
		phy 	fwd08

		.echo **FAIL  PHY  zpi

		phy 	($12)
		phy 	(bak08)
		phy 	(fwd08)

		.echo **FAIL  PHY  zpiy

		phy 	($12),Y
		phy 	(bak08),y
		phy 	(fwd08),Y

		.echo **FAIL  PHY  zpx

		phy 	$12,X
		phy 	bak08,x
		phy 	fwd08,X

		.echo **FAIL  PHY  zpxi

		phy 	($12,X)
		phy 	(bak08,x)
		phy 	(fwd08,X)

		.echo **FAIL  PHY  zpy

		phy 	$12,Y
		phy 	bak08,y
		phy 	fwd08,Y


:	; forward ref for PHY

; -------------------------------

:	; backward ref for PLA

		.echo **FAIL  PLA  ab

		pla 	$1234
		pla 	bak16
		pla 	fwd16

		.echo **FAIL  PLA  abi

		pla 	($1234)
		pla 	(bak16)
		pla 	(fwd16)

		.echo **FAIL  PLA  abx

		pla 	$1234,X
		pla 	bak16,x
		pla 	fwd16,X

		.echo **FAIL  PLA  abxi

		pla 	($1234,X)
		pla 	(bak16,x)
		pla 	(fwd16,X)

		.echo **FAIL  PLA  aby

		pla 	$1234,Y
		pla 	bak16,y
		pla 	fwd16,Y

		.echo **FAIL  PLA  acc

		pla 	A
		pla 	a

		.echo **FAIL  PLA  bmv

		pla 	#$12, #$34
		pla 	#bak08, #fwd08
		pla 	$123456, $789ABC
		pla 	bak24, fwd24

		.echo **FAIL  PLA  imm

		pla 	#$12
		pla 	#bak08
		pla 	#fwd08

		.echo **PASS  PLA  imp

		PLA 

		.echo **FAIL  PLA  lab

		pla 	$123456
		pla 	bak24
		pla 	fwd24

		.echo **FAIL  PLA  labi

		pla 	[$123456]
		pla 	[bak24]
		pla 	[fwd24]

		.echo **FAIL  PLA  labx

		pla 	$123456,X
		pla 	bak24,x
		pla 	fwd24,X

		.echo **FAIL  PLA  lpcr

		pla 	:+
		pla 	-
		pla 	+
		pla 	:-

		.echo **FAIL  PLA  lzpi

		pla 	[$12]
		pla 	[bak08]
		pla 	[fwd08]

		.echo **FAIL  PLA  lzpiy

		pla 	[$12],Y
		pla 	[bak08],y
		pla 	[fwd08],Y

		.echo **FAIL  PLA  pcr

		pla 	:+
		pla 	-
		pla 	+
		pla 	:-

		.echo **FAIL  PLA  sr

		pla 	$12,S
		pla 	bak08,s
		pla 	fwd08,S

		.echo **FAIL  PLA  sriy

		pla 	($12,s),Y
		pla 	(bak08,S),y
		pla 	(fwd08,s),Y

		.echo **FAIL  PLA  zp

		pla 	$12
		pla 	bak08
		pla 	fwd08

		.echo **FAIL  PLA  zpi

		pla 	($12)
		pla 	(bak08)
		pla 	(fwd08)

		.echo **FAIL  PLA  zpiy

		pla 	($12),Y
		pla 	(bak08),y
		pla 	(fwd08),Y

		.echo **FAIL  PLA  zpx

		pla 	$12,X
		pla 	bak08,x
		pla 	fwd08,X

		.echo **FAIL  PLA  zpxi

		pla 	($12,X)
		pla 	(bak08,x)
		pla 	(fwd08,X)

		.echo **FAIL  PLA  zpy

		pla 	$12,Y
		pla 	bak08,y
		pla 	fwd08,Y


:	; forward ref for PLA

; -------------------------------

:	; backward ref for PLB

		.echo **FAIL  PLB  ab

		plb 	$1234
		plb 	bak16
		plb 	fwd16

		.echo **FAIL  PLB  abi

		plb 	($1234)
		plb 	(bak16)
		plb 	(fwd16)

		.echo **FAIL  PLB  abx

		plb 	$1234,X
		plb 	bak16,x
		plb 	fwd16,X

		.echo **FAIL  PLB  abxi

		plb 	($1234,X)
		plb 	(bak16,x)
		plb 	(fwd16,X)

		.echo **FAIL  PLB  aby

		plb 	$1234,Y
		plb 	bak16,y
		plb 	fwd16,Y

		.echo **FAIL  PLB  acc

		plb 	A
		plb 	a

		.echo **FAIL  PLB  bmv

		plb 	#$12, #$34
		plb 	#bak08, #fwd08
		plb 	$123456, $789ABC
		plb 	bak24, fwd24

		.echo **FAIL  PLB  imm

		plb 	#$12
		plb 	#bak08
		plb 	#fwd08

		.echo **PASS  PLB  imp

		PLB 

		.echo **FAIL  PLB  lab

		plb 	$123456
		plb 	bak24
		plb 	fwd24

		.echo **FAIL  PLB  labi

		plb 	[$123456]
		plb 	[bak24]
		plb 	[fwd24]

		.echo **FAIL  PLB  labx

		plb 	$123456,X
		plb 	bak24,x
		plb 	fwd24,X

		.echo **FAIL  PLB  lpcr

		plb 	:+
		plb 	-
		plb 	+
		plb 	:-

		.echo **FAIL  PLB  lzpi

		plb 	[$12]
		plb 	[bak08]
		plb 	[fwd08]

		.echo **FAIL  PLB  lzpiy

		plb 	[$12],Y
		plb 	[bak08],y
		plb 	[fwd08],Y

		.echo **FAIL  PLB  pcr

		plb 	:+
		plb 	-
		plb 	+
		plb 	:-

		.echo **FAIL  PLB  sr

		plb 	$12,S
		plb 	bak08,s
		plb 	fwd08,S

		.echo **FAIL  PLB  sriy

		plb 	($12,s),Y
		plb 	(bak08,S),y
		plb 	(fwd08,s),Y

		.echo **FAIL  PLB  zp

		plb 	$12
		plb 	bak08
		plb 	fwd08

		.echo **FAIL  PLB  zpi

		plb 	($12)
		plb 	(bak08)
		plb 	(fwd08)

		.echo **FAIL  PLB  zpiy

		plb 	($12),Y
		plb 	(bak08),y
		plb 	(fwd08),Y

		.echo **FAIL  PLB  zpx

		plb 	$12,X
		plb 	bak08,x
		plb 	fwd08,X

		.echo **FAIL  PLB  zpxi

		plb 	($12,X)
		plb 	(bak08,x)
		plb 	(fwd08,X)

		.echo **FAIL  PLB  zpy

		plb 	$12,Y
		plb 	bak08,y
		plb 	fwd08,Y


:	; forward ref for PLB

; -------------------------------

:	; backward ref for PLD

		.echo **FAIL  PLD  ab

		pld 	$1234
		pld 	bak16
		pld 	fwd16

		.echo **FAIL  PLD  abi

		pld 	($1234)
		pld 	(bak16)
		pld 	(fwd16)

		.echo **FAIL  PLD  abx

		pld 	$1234,X
		pld 	bak16,x
		pld 	fwd16,X

		.echo **FAIL  PLD  abxi

		pld 	($1234,X)
		pld 	(bak16,x)
		pld 	(fwd16,X)

		.echo **FAIL  PLD  aby

		pld 	$1234,Y
		pld 	bak16,y
		pld 	fwd16,Y

		.echo **FAIL  PLD  acc

		pld 	A
		pld 	a

		.echo **FAIL  PLD  bmv

		pld 	#$12, #$34
		pld 	#bak08, #fwd08
		pld 	$123456, $789ABC
		pld 	bak24, fwd24

		.echo **FAIL  PLD  imm

		pld 	#$12
		pld 	#bak08
		pld 	#fwd08

		.echo **PASS  PLD  imp

		PLD 

		.echo **FAIL  PLD  lab

		pld 	$123456
		pld 	bak24
		pld 	fwd24

		.echo **FAIL  PLD  labi

		pld 	[$123456]
		pld 	[bak24]
		pld 	[fwd24]

		.echo **FAIL  PLD  labx

		pld 	$123456,X
		pld 	bak24,x
		pld 	fwd24,X

		.echo **FAIL  PLD  lpcr

		pld 	:+
		pld 	-
		pld 	+
		pld 	:-

		.echo **FAIL  PLD  lzpi

		pld 	[$12]
		pld 	[bak08]
		pld 	[fwd08]

		.echo **FAIL  PLD  lzpiy

		pld 	[$12],Y
		pld 	[bak08],y
		pld 	[fwd08],Y

		.echo **FAIL  PLD  pcr

		pld 	:+
		pld 	-
		pld 	+
		pld 	:-

		.echo **FAIL  PLD  sr

		pld 	$12,S
		pld 	bak08,s
		pld 	fwd08,S

		.echo **FAIL  PLD  sriy

		pld 	($12,s),Y
		pld 	(bak08,S),y
		pld 	(fwd08,s),Y

		.echo **FAIL  PLD  zp

		pld 	$12
		pld 	bak08
		pld 	fwd08

		.echo **FAIL  PLD  zpi

		pld 	($12)
		pld 	(bak08)
		pld 	(fwd08)

		.echo **FAIL  PLD  zpiy

		pld 	($12),Y
		pld 	(bak08),y
		pld 	(fwd08),Y

		.echo **FAIL  PLD  zpx

		pld 	$12,X
		pld 	bak08,x
		pld 	fwd08,X

		.echo **FAIL  PLD  zpxi

		pld 	($12,X)
		pld 	(bak08,x)
		pld 	(fwd08,X)

		.echo **FAIL  PLD  zpy

		pld 	$12,Y
		pld 	bak08,y
		pld 	fwd08,Y


:	; forward ref for PLD

; -------------------------------

:	; backward ref for PLP

		.echo **FAIL  PLP  ab

		plp 	$1234
		plp 	bak16
		plp 	fwd16

		.echo **FAIL  PLP  abi

		plp 	($1234)
		plp 	(bak16)
		plp 	(fwd16)

		.echo **FAIL  PLP  abx

		plp 	$1234,X
		plp 	bak16,x
		plp 	fwd16,X

		.echo **FAIL  PLP  abxi

		plp 	($1234,X)
		plp 	(bak16,x)
		plp 	(fwd16,X)

		.echo **FAIL  PLP  aby

		plp 	$1234,Y
		plp 	bak16,y
		plp 	fwd16,Y

		.echo **FAIL  PLP  acc

		plp 	A
		plp 	a

		.echo **FAIL  PLP  bmv

		plp 	#$12, #$34
		plp 	#bak08, #fwd08
		plp 	$123456, $789ABC
		plp 	bak24, fwd24

		.echo **FAIL  PLP  imm

		plp 	#$12
		plp 	#bak08
		plp 	#fwd08

		.echo **PASS  PLP  imp

		PLP 

		.echo **FAIL  PLP  lab

		plp 	$123456
		plp 	bak24
		plp 	fwd24

		.echo **FAIL  PLP  labi

		plp 	[$123456]
		plp 	[bak24]
		plp 	[fwd24]

		.echo **FAIL  PLP  labx

		plp 	$123456,X
		plp 	bak24,x
		plp 	fwd24,X

		.echo **FAIL  PLP  lpcr

		plp 	:+
		plp 	-
		plp 	+
		plp 	:-

		.echo **FAIL  PLP  lzpi

		plp 	[$12]
		plp 	[bak08]
		plp 	[fwd08]

		.echo **FAIL  PLP  lzpiy

		plp 	[$12],Y
		plp 	[bak08],y
		plp 	[fwd08],Y

		.echo **FAIL  PLP  pcr

		plp 	:+
		plp 	-
		plp 	+
		plp 	:-

		.echo **FAIL  PLP  sr

		plp 	$12,S
		plp 	bak08,s
		plp 	fwd08,S

		.echo **FAIL  PLP  sriy

		plp 	($12,s),Y
		plp 	(bak08,S),y
		plp 	(fwd08,s),Y

		.echo **FAIL  PLP  zp

		plp 	$12
		plp 	bak08
		plp 	fwd08

		.echo **FAIL  PLP  zpi

		plp 	($12)
		plp 	(bak08)
		plp 	(fwd08)

		.echo **FAIL  PLP  zpiy

		plp 	($12),Y
		plp 	(bak08),y
		plp 	(fwd08),Y

		.echo **FAIL  PLP  zpx

		plp 	$12,X
		plp 	bak08,x
		plp 	fwd08,X

		.echo **FAIL  PLP  zpxi

		plp 	($12,X)
		plp 	(bak08,x)
		plp 	(fwd08,X)

		.echo **FAIL  PLP  zpy

		plp 	$12,Y
		plp 	bak08,y
		plp 	fwd08,Y


:	; forward ref for PLP

; -------------------------------

:	; backward ref for PLX

		.echo **FAIL  PLX  ab

		plx 	$1234
		plx 	bak16
		plx 	fwd16

		.echo **FAIL  PLX  abi

		plx 	($1234)
		plx 	(bak16)
		plx 	(fwd16)

		.echo **FAIL  PLX  abx

		plx 	$1234,X
		plx 	bak16,x
		plx 	fwd16,X

		.echo **FAIL  PLX  abxi

		plx 	($1234,X)
		plx 	(bak16,x)
		plx 	(fwd16,X)

		.echo **FAIL  PLX  aby

		plx 	$1234,Y
		plx 	bak16,y
		plx 	fwd16,Y

		.echo **FAIL  PLX  acc

		plx 	A
		plx 	a

		.echo **FAIL  PLX  bmv

		plx 	#$12, #$34
		plx 	#bak08, #fwd08
		plx 	$123456, $789ABC
		plx 	bak24, fwd24

		.echo **FAIL  PLX  imm

		plx 	#$12
		plx 	#bak08
		plx 	#fwd08

		.echo **PASS  PLX  imp

		PLX 

		.echo **FAIL  PLX  lab

		plx 	$123456
		plx 	bak24
		plx 	fwd24

		.echo **FAIL  PLX  labi

		plx 	[$123456]
		plx 	[bak24]
		plx 	[fwd24]

		.echo **FAIL  PLX  labx

		plx 	$123456,X
		plx 	bak24,x
		plx 	fwd24,X

		.echo **FAIL  PLX  lpcr

		plx 	:+
		plx 	-
		plx 	+
		plx 	:-

		.echo **FAIL  PLX  lzpi

		plx 	[$12]
		plx 	[bak08]
		plx 	[fwd08]

		.echo **FAIL  PLX  lzpiy

		plx 	[$12],Y
		plx 	[bak08],y
		plx 	[fwd08],Y

		.echo **FAIL  PLX  pcr

		plx 	:+
		plx 	-
		plx 	+
		plx 	:-

		.echo **FAIL  PLX  sr

		plx 	$12,S
		plx 	bak08,s
		plx 	fwd08,S

		.echo **FAIL  PLX  sriy

		plx 	($12,s),Y
		plx 	(bak08,S),y
		plx 	(fwd08,s),Y

		.echo **FAIL  PLX  zp

		plx 	$12
		plx 	bak08
		plx 	fwd08

		.echo **FAIL  PLX  zpi

		plx 	($12)
		plx 	(bak08)
		plx 	(fwd08)

		.echo **FAIL  PLX  zpiy

		plx 	($12),Y
		plx 	(bak08),y
		plx 	(fwd08),Y

		.echo **FAIL  PLX  zpx

		plx 	$12,X
		plx 	bak08,x
		plx 	fwd08,X

		.echo **FAIL  PLX  zpxi

		plx 	($12,X)
		plx 	(bak08,x)
		plx 	(fwd08,X)

		.echo **FAIL  PLX  zpy

		plx 	$12,Y
		plx 	bak08,y
		plx 	fwd08,Y


:	; forward ref for PLX

; -------------------------------

:	; backward ref for PLY

		.echo **FAIL  PLY  ab

		ply 	$1234
		ply 	bak16
		ply 	fwd16

		.echo **FAIL  PLY  abi

		ply 	($1234)
		ply 	(bak16)
		ply 	(fwd16)

		.echo **FAIL  PLY  abx

		ply 	$1234,X
		ply 	bak16,x
		ply 	fwd16,X

		.echo **FAIL  PLY  abxi

		ply 	($1234,X)
		ply 	(bak16,x)
		ply 	(fwd16,X)

		.echo **FAIL  PLY  aby

		ply 	$1234,Y
		ply 	bak16,y
		ply 	fwd16,Y

		.echo **FAIL  PLY  acc

		ply 	A
		ply 	a

		.echo **FAIL  PLY  bmv

		ply 	#$12, #$34
		ply 	#bak08, #fwd08
		ply 	$123456, $789ABC
		ply 	bak24, fwd24

		.echo **FAIL  PLY  imm

		ply 	#$12
		ply 	#bak08
		ply 	#fwd08

		.echo **PASS  PLY  imp

		PLY 

		.echo **FAIL  PLY  lab

		ply 	$123456
		ply 	bak24
		ply 	fwd24

		.echo **FAIL  PLY  labi

		ply 	[$123456]
		ply 	[bak24]
		ply 	[fwd24]

		.echo **FAIL  PLY  labx

		ply 	$123456,X
		ply 	bak24,x
		ply 	fwd24,X

		.echo **FAIL  PLY  lpcr

		ply 	:+
		ply 	-
		ply 	+
		ply 	:-

		.echo **FAIL  PLY  lzpi

		ply 	[$12]
		ply 	[bak08]
		ply 	[fwd08]

		.echo **FAIL  PLY  lzpiy

		ply 	[$12],Y
		ply 	[bak08],y
		ply 	[fwd08],Y

		.echo **FAIL  PLY  pcr

		ply 	:+
		ply 	-
		ply 	+
		ply 	:-

		.echo **FAIL  PLY  sr

		ply 	$12,S
		ply 	bak08,s
		ply 	fwd08,S

		.echo **FAIL  PLY  sriy

		ply 	($12,s),Y
		ply 	(bak08,S),y
		ply 	(fwd08,s),Y

		.echo **FAIL  PLY  zp

		ply 	$12
		ply 	bak08
		ply 	fwd08

		.echo **FAIL  PLY  zpi

		ply 	($12)
		ply 	(bak08)
		ply 	(fwd08)

		.echo **FAIL  PLY  zpiy

		ply 	($12),Y
		ply 	(bak08),y
		ply 	(fwd08),Y

		.echo **FAIL  PLY  zpx

		ply 	$12,X
		ply 	bak08,x
		ply 	fwd08,X

		.echo **FAIL  PLY  zpxi

		ply 	($12,X)
		ply 	(bak08,x)
		ply 	(fwd08,X)

		.echo **FAIL  PLY  zpy

		ply 	$12,Y
		ply 	bak08,y
		ply 	fwd08,Y


:	; forward ref for PLY

; -------------------------------

:	; backward ref for REP

		.echo **FAIL  REP  ab

		rep 	$1234
		rep 	bak16
		rep 	fwd16

		.echo **FAIL  REP  abi

		rep 	($1234)
		rep 	(bak16)
		rep 	(fwd16)

		.echo **FAIL  REP  abx

		rep 	$1234,X
		rep 	bak16,x
		rep 	fwd16,X

		.echo **FAIL  REP  abxi

		rep 	($1234,X)
		rep 	(bak16,x)
		rep 	(fwd16,X)

		.echo **FAIL  REP  aby

		rep 	$1234,Y
		rep 	bak16,y
		rep 	fwd16,Y

		.echo **FAIL  REP  acc

		rep 	A
		rep 	a

		.echo **FAIL  REP  bmv

		rep 	#$12, #$34
		rep 	#bak08, #fwd08
		rep 	$123456, $789ABC
		rep 	bak24, fwd24

		.echo **PASS  REP  imm

		REP 	#$12
		REP 	#bak08
		REP 	#fwd08

		.echo **FAIL  REP  imp

		rep 

		.echo **FAIL  REP  lab

		rep 	$123456
		rep 	bak24
		rep 	fwd24

		.echo **FAIL  REP  labi

		rep 	[$123456]
		rep 	[bak24]
		rep 	[fwd24]

		.echo **FAIL  REP  labx

		rep 	$123456,X
		rep 	bak24,x
		rep 	fwd24,X

		.echo **FAIL  REP  lpcr

		rep 	:+
		rep 	-
		rep 	+
		rep 	:-

		.echo **FAIL  REP  lzpi

		rep 	[$12]
		rep 	[bak08]
		rep 	[fwd08]

		.echo **FAIL  REP  lzpiy

		rep 	[$12],Y
		rep 	[bak08],y
		rep 	[fwd08],Y

		.echo **FAIL  REP  pcr

		rep 	:+
		rep 	-
		rep 	+
		rep 	:-

		.echo **FAIL  REP  sr

		rep 	$12,S
		rep 	bak08,s
		rep 	fwd08,S

		.echo **FAIL  REP  sriy

		rep 	($12,s),Y
		rep 	(bak08,S),y
		rep 	(fwd08,s),Y

		.echo **FAIL  REP  zp

		rep 	$12
		rep 	bak08
		rep 	fwd08

		.echo **FAIL  REP  zpi

		rep 	($12)
		rep 	(bak08)
		rep 	(fwd08)

		.echo **FAIL  REP  zpiy

		rep 	($12),Y
		rep 	(bak08),y
		rep 	(fwd08),Y

		.echo **FAIL  REP  zpx

		rep 	$12,X
		rep 	bak08,x
		rep 	fwd08,X

		.echo **FAIL  REP  zpxi

		rep 	($12,X)
		rep 	(bak08,x)
		rep 	(fwd08,X)

		.echo **FAIL  REP  zpy

		rep 	$12,Y
		rep 	bak08,y
		rep 	fwd08,Y


:	; forward ref for REP

; -------------------------------

:	; backward ref for ROL

		.echo **PASS  ROL  ab

		ROL 	$1234
		ROL 	bak16
		ROL 	fwd16

		.echo **FAIL  ROL  abi

		rol 	($1234)
		rol 	(bak16)
		rol 	(fwd16)

		.echo **PASS  ROL  abx

		ROL 	$1234,X
		ROL 	bak16,x
		ROL 	fwd16,X

		.echo **FAIL  ROL  abxi

		rol 	($1234,X)
		rol 	(bak16,x)
		rol 	(fwd16,X)

		.echo **FAIL  ROL  aby

		rol 	$1234,Y
		rol 	bak16,y
		rol 	fwd16,Y

		.echo **PASS  ROL  acc

		ROL 	A
		ROL 	a

		.echo **FAIL  ROL  bmv

		rol 	#$12, #$34
		rol 	#bak08, #fwd08
		rol 	$123456, $789ABC
		rol 	bak24, fwd24

		.echo **FAIL  ROL  imm

		rol 	#$12
		rol 	#bak08
		rol 	#fwd08

		.echo **PASS  ROL  imp

		ROL 

		.echo **PASS  ROL  lab  (as ab)

		Rol 	$123456
		Rol 	bak24
		Rol 	fwd24

		.echo **FAIL  ROL  labi

		rol 	[$123456]
		rol 	[bak24]
		rol 	[fwd24]

		.echo **PASS  ROL  labx  (as abx)

		Rol 	$123456,X
		Rol 	bak24,x
		Rol 	fwd24,X

		.echo **PASS  ROL  lpcr  (as ab)

		Rol 	:+
		Rol 	-
		Rol 	+
		Rol 	:-

		.echo **FAIL  ROL  lzpi

		rol 	[$12]
		rol 	[bak08]
		rol 	[fwd08]

		.echo **FAIL  ROL  lzpiy

		rol 	[$12],Y
		rol 	[bak08],y
		rol 	[fwd08],Y

		.echo **PASS  ROL  pcr  (as ab)

		Rol 	:+
		Rol 	-
		Rol 	+
		Rol 	:-

		.echo **FAIL  ROL  sr

		rol 	$12,S
		rol 	bak08,s
		rol 	fwd08,S

		.echo **FAIL  ROL  sriy

		rol 	($12,s),Y
		rol 	(bak08,S),y
		rol 	(fwd08,s),Y

		.echo **PASS  ROL  zp

		ROL 	$12
		ROL 	bak08
		Rol 	fwd08   	; (absolute)

		.echo **FAIL  ROL  zpi

		rol 	($12)
		rol 	(bak08)
		rol 	(fwd08)

		.echo **FAIL  ROL  zpiy

		rol 	($12),Y
		rol 	(bak08),y
		rol 	(fwd08),Y

		.echo **PASS  ROL  zpx

		ROL 	$12,X
		ROL 	bak08,x
		Rol 	fwd08,X 	; (absolute)

		.echo **FAIL  ROL  zpxi

		rol 	($12,X)
		rol 	(bak08,x)
		rol 	(fwd08,X)

		.echo **FAIL  ROL  zpy

		rol 	$12,Y
		rol 	bak08,y
		rol 	fwd08,Y


:	; forward ref for ROL

; -------------------------------

:	; backward ref for ROR

		.echo **PASS  ROR  ab

		ROR 	$1234
		ROR 	bak16
		ROR 	fwd16

		.echo **FAIL  ROR  abi

		ror 	($1234)
		ror 	(bak16)
		ror 	(fwd16)

		.echo **PASS  ROR  abx

		ROR 	$1234,X
		ROR 	bak16,x
		ROR 	fwd16,X

		.echo **FAIL  ROR  abxi

		ror 	($1234,X)
		ror 	(bak16,x)
		ror 	(fwd16,X)

		.echo **FAIL  ROR  aby

		ror 	$1234,Y
		ror 	bak16,y
		ror 	fwd16,Y

		.echo **PASS  ROR  acc

		ROR 	A
		ROR 	a

		.echo **FAIL  ROR  bmv

		ror 	#$12, #$34
		ror 	#bak08, #fwd08
		ror 	$123456, $789ABC
		ror 	bak24, fwd24

		.echo **FAIL  ROR  imm

		ror 	#$12
		ror 	#bak08
		ror 	#fwd08

		.echo **PASS  ROR  imp

		ROR 

		.echo **PASS  ROR  lab  (as ab)

		Ror 	$123456
		Ror 	bak24
		Ror 	fwd24

		.echo **FAIL  ROR  labi

		ror 	[$123456]
		ror 	[bak24]
		ror 	[fwd24]

		.echo **PASS  ROR  labx  (as abx)

		Ror 	$123456,X
		Ror 	bak24,x
		Ror 	fwd24,X

		.echo **PASS  ROR  lpcr  (as ab)

		Ror 	:+
		Ror 	-
		Ror 	+
		Ror 	:-

		.echo **FAIL  ROR  lzpi

		ror 	[$12]
		ror 	[bak08]
		ror 	[fwd08]

		.echo **FAIL  ROR  lzpiy

		ror 	[$12],Y
		ror 	[bak08],y
		ror 	[fwd08],Y

		.echo **PASS  ROR  pcr  (as ab)

		Ror 	:+
		Ror 	-
		Ror 	+
		Ror 	:-

		.echo **FAIL  ROR  sr

		ror 	$12,S
		ror 	bak08,s
		ror 	fwd08,S

		.echo **FAIL  ROR  sriy

		ror 	($12,s),Y
		ror 	(bak08,S),y
		ror 	(fwd08,s),Y

		.echo **PASS  ROR  zp

		ROR 	$12
		ROR 	bak08
		Ror 	fwd08   	; (absolute)

		.echo **FAIL  ROR  zpi

		ror 	($12)
		ror 	(bak08)
		ror 	(fwd08)

		.echo **FAIL  ROR  zpiy

		ror 	($12),Y
		ror 	(bak08),y
		ror 	(fwd08),Y

		.echo **PASS  ROR  zpx

		ROR 	$12,X
		ROR 	bak08,x
		Ror 	fwd08,X 	; (absolute)

		.echo **FAIL  ROR  zpxi

		ror 	($12,X)
		ror 	(bak08,x)
		ror 	(fwd08,X)

		.echo **FAIL  ROR  zpy

		ror 	$12,Y
		ror 	bak08,y
		ror 	fwd08,Y


:	; forward ref for ROR

; -------------------------------

:	; backward ref for RTI

		.echo **FAIL  RTI  ab

		rti 	$1234
		rti 	bak16
		rti 	fwd16

		.echo **FAIL  RTI  abi

		rti 	($1234)
		rti 	(bak16)
		rti 	(fwd16)

		.echo **FAIL  RTI  abx

		rti 	$1234,X
		rti 	bak16,x
		rti 	fwd16,X

		.echo **FAIL  RTI  abxi

		rti 	($1234,X)
		rti 	(bak16,x)
		rti 	(fwd16,X)

		.echo **FAIL  RTI  aby

		rti 	$1234,Y
		rti 	bak16,y
		rti 	fwd16,Y

		.echo **FAIL  RTI  acc

		rti 	A
		rti 	a

		.echo **FAIL  RTI  bmv

		rti 	#$12, #$34
		rti 	#bak08, #fwd08
		rti 	$123456, $789ABC
		rti 	bak24, fwd24

		.echo **FAIL  RTI  imm

		rti 	#$12
		rti 	#bak08
		rti 	#fwd08

		.echo **PASS  RTI  imp

		RTI 

		.echo **FAIL  RTI  lab

		rti 	$123456
		rti 	bak24
		rti 	fwd24

		.echo **FAIL  RTI  labi

		rti 	[$123456]
		rti 	[bak24]
		rti 	[fwd24]

		.echo **FAIL  RTI  labx

		rti 	$123456,X
		rti 	bak24,x
		rti 	fwd24,X

		.echo **FAIL  RTI  lpcr

		rti 	:+
		rti 	-
		rti 	+
		rti 	:-

		.echo **FAIL  RTI  lzpi

		rti 	[$12]
		rti 	[bak08]
		rti 	[fwd08]

		.echo **FAIL  RTI  lzpiy

		rti 	[$12],Y
		rti 	[bak08],y
		rti 	[fwd08],Y

		.echo **FAIL  RTI  pcr

		rti 	:+
		rti 	-
		rti 	+
		rti 	:-

		.echo **FAIL  RTI  sr

		rti 	$12,S
		rti 	bak08,s
		rti 	fwd08,S

		.echo **FAIL  RTI  sriy

		rti 	($12,s),Y
		rti 	(bak08,S),y
		rti 	(fwd08,s),Y

		.echo **FAIL  RTI  zp

		rti 	$12
		rti 	bak08
		rti 	fwd08

		.echo **FAIL  RTI  zpi

		rti 	($12)
		rti 	(bak08)
		rti 	(fwd08)

		.echo **FAIL  RTI  zpiy

		rti 	($12),Y
		rti 	(bak08),y
		rti 	(fwd08),Y

		.echo **FAIL  RTI  zpx

		rti 	$12,X
		rti 	bak08,x
		rti 	fwd08,X

		.echo **FAIL  RTI  zpxi

		rti 	($12,X)
		rti 	(bak08,x)
		rti 	(fwd08,X)

		.echo **FAIL  RTI  zpy

		rti 	$12,Y
		rti 	bak08,y
		rti 	fwd08,Y


:	; forward ref for RTI

; -------------------------------

:	; backward ref for RTL

		.echo **FAIL  RTL  ab

		rtl 	$1234
		rtl 	bak16
		rtl 	fwd16

		.echo **FAIL  RTL  abi

		rtl 	($1234)
		rtl 	(bak16)
		rtl 	(fwd16)

		.echo **FAIL  RTL  abx

		rtl 	$1234,X
		rtl 	bak16,x
		rtl 	fwd16,X

		.echo **FAIL  RTL  abxi

		rtl 	($1234,X)
		rtl 	(bak16,x)
		rtl 	(fwd16,X)

		.echo **FAIL  RTL  aby

		rtl 	$1234,Y
		rtl 	bak16,y
		rtl 	fwd16,Y

		.echo **FAIL  RTL  acc

		rtl 	A
		rtl 	a

		.echo **FAIL  RTL  bmv

		rtl 	#$12, #$34
		rtl 	#bak08, #fwd08
		rtl 	$123456, $789ABC
		rtl 	bak24, fwd24

		.echo **FAIL  RTL  imm

		rtl 	#$12
		rtl 	#bak08
		rtl 	#fwd08

		.echo **PASS  RTL  imp

		RTL 

		.echo **FAIL  RTL  lab

		rtl 	$123456
		rtl 	bak24
		rtl 	fwd24

		.echo **FAIL  RTL  labi

		rtl 	[$123456]
		rtl 	[bak24]
		rtl 	[fwd24]

		.echo **FAIL  RTL  labx

		rtl 	$123456,X
		rtl 	bak24,x
		rtl 	fwd24,X

		.echo **FAIL  RTL  lpcr

		rtl 	:+
		rtl 	-
		rtl 	+
		rtl 	:-

		.echo **FAIL  RTL  lzpi

		rtl 	[$12]
		rtl 	[bak08]
		rtl 	[fwd08]

		.echo **FAIL  RTL  lzpiy

		rtl 	[$12],Y
		rtl 	[bak08],y
		rtl 	[fwd08],Y

		.echo **FAIL  RTL  pcr

		rtl 	:+
		rtl 	-
		rtl 	+
		rtl 	:-

		.echo **FAIL  RTL  sr

		rtl 	$12,S
		rtl 	bak08,s
		rtl 	fwd08,S

		.echo **FAIL  RTL  sriy

		rtl 	($12,s),Y
		rtl 	(bak08,S),y
		rtl 	(fwd08,s),Y

		.echo **FAIL  RTL  zp

		rtl 	$12
		rtl 	bak08
		rtl 	fwd08

		.echo **FAIL  RTL  zpi

		rtl 	($12)
		rtl 	(bak08)
		rtl 	(fwd08)

		.echo **FAIL  RTL  zpiy

		rtl 	($12),Y
		rtl 	(bak08),y
		rtl 	(fwd08),Y

		.echo **FAIL  RTL  zpx

		rtl 	$12,X
		rtl 	bak08,x
		rtl 	fwd08,X

		.echo **FAIL  RTL  zpxi

		rtl 	($12,X)
		rtl 	(bak08,x)
		rtl 	(fwd08,X)

		.echo **FAIL  RTL  zpy

		rtl 	$12,Y
		rtl 	bak08,y
		rtl 	fwd08,Y


:	; forward ref for RTL

; -------------------------------

:	; backward ref for RTS

		.echo **FAIL  RTS  ab

		rts 	$1234
		rts 	bak16
		rts 	fwd16

		.echo **FAIL  RTS  abi

		rts 	($1234)
		rts 	(bak16)
		rts 	(fwd16)

		.echo **FAIL  RTS  abx

		rts 	$1234,X
		rts 	bak16,x
		rts 	fwd16,X

		.echo **FAIL  RTS  abxi

		rts 	($1234,X)
		rts 	(bak16,x)
		rts 	(fwd16,X)

		.echo **FAIL  RTS  aby

		rts 	$1234,Y
		rts 	bak16,y
		rts 	fwd16,Y

		.echo **FAIL  RTS  acc

		rts 	A
		rts 	a

		.echo **FAIL  RTS  bmv

		rts 	#$12, #$34
		rts 	#bak08, #fwd08
		rts 	$123456, $789ABC
		rts 	bak24, fwd24

		.echo **FAIL  RTS  imm

		rts 	#$12
		rts 	#bak08
		rts 	#fwd08

		.echo **PASS  RTS  imp

		RTS 

		.echo **FAIL  RTS  lab

		rts 	$123456
		rts 	bak24
		rts 	fwd24

		.echo **FAIL  RTS  labi

		rts 	[$123456]
		rts 	[bak24]
		rts 	[fwd24]

		.echo **FAIL  RTS  labx

		rts 	$123456,X
		rts 	bak24,x
		rts 	fwd24,X

		.echo **FAIL  RTS  lpcr

		rts 	:+
		rts 	-
		rts 	+
		rts 	:-

		.echo **FAIL  RTS  lzpi

		rts 	[$12]
		rts 	[bak08]
		rts 	[fwd08]

		.echo **FAIL  RTS  lzpiy

		rts 	[$12],Y
		rts 	[bak08],y
		rts 	[fwd08],Y

		.echo **FAIL  RTS  pcr

		rts 	:+
		rts 	-
		rts 	+
		rts 	:-

		.echo **FAIL  RTS  sr

		rts 	$12,S
		rts 	bak08,s
		rts 	fwd08,S

		.echo **FAIL  RTS  sriy

		rts 	($12,s),Y
		rts 	(bak08,S),y
		rts 	(fwd08,s),Y

		.echo **FAIL  RTS  zp

		rts 	$12
		rts 	bak08
		rts 	fwd08

		.echo **FAIL  RTS  zpi

		rts 	($12)
		rts 	(bak08)
		rts 	(fwd08)

		.echo **FAIL  RTS  zpiy

		rts 	($12),Y
		rts 	(bak08),y
		rts 	(fwd08),Y

		.echo **FAIL  RTS  zpx

		rts 	$12,X
		rts 	bak08,x
		rts 	fwd08,X

		.echo **FAIL  RTS  zpxi

		rts 	($12,X)
		rts 	(bak08,x)
		rts 	(fwd08,X)

		.echo **FAIL  RTS  zpy

		rts 	$12,Y
		rts 	bak08,y
		rts 	fwd08,Y


:	; forward ref for RTS

; -------------------------------

:	; backward ref for SBC

		.echo **PASS  SBC  ab

		SBC 	$1234
		SBC 	bak16
		SBC 	fwd16

		.echo **PASS  SBC  abi  (as zpi)

		Sbc 	($1234)
		Sbc 	(bak16)
		Sbc 	(fwd16)

		.echo **PASS  SBC  abx

		SBC 	$1234,X
		SBC 	bak16,x
		SBC 	fwd16,X

		.echo **PASS  SBC  abxi  (as zpxi)

		Sbc 	($1234,X)
		Sbc 	(bak16,x)
		Sbc 	(fwd16,X)

		.echo **PASS  SBC  aby

		SBC 	$1234,Y
		SBC 	bak16,y
		SBC 	fwd16,Y

		.echo **FAIL  SBC  acc

		sbc 	A
		sbc 	a

		.echo **FAIL  SBC  bmv

		sbc 	#$12, #$34
		sbc 	#bak08, #fwd08
		sbc 	$123456, $789ABC
		sbc 	bak24, fwd24

		.echo **PASS  SBC  imm

		SBC 	#$12
		SBC 	#bak08
		SBC 	#fwd08

		.echo **FAIL  SBC  imp

		sbc 

		.echo **PASS  SBC  lab

		SBC 	$123456
		SBC 	bak24
		SBC 	fwd24

		.echo **PASS  SBC  labi  (as lzpi)

		Sbc 	[$123456]
		Sbc 	[bak24]
		Sbc 	[fwd24]

		.echo **PASS  SBC  labx

		SBC 	$123456,X
		SBC 	bak24,x
		SBC 	fwd24,X

		.echo **PASS  SBC  lpcr  (as ab)

		Sbc 	:+
		Sbc 	-
		Sbc 	+
		Sbc 	:-

		.echo **PASS  SBC  lzpi

		SBC 	[$12]
		SBC 	[bak08]
		SBC 	[fwd08]

		.echo **PASS  SBC  lzpiy

		SBC 	[$12],Y
		SBC 	[bak08],y
		SBC 	[fwd08],Y

		.echo **PASS  SBC  pcr  (as ab)

		Sbc 	:+
		Sbc 	-
		Sbc 	+
		Sbc 	:-

		.echo **PASS  SBC  sr

		SBC 	$12,S
		SBC 	bak08,s
		SBC 	fwd08,S

		.echo **PASS  SBC  sriy

		SBC 	($12,s),Y
		SBC 	(bak08,S),y
		SBC 	(fwd08,s),Y

		.echo **PASS  SBC  zp

		SBC 	$12
		SBC 	bak08
		Sbc 	fwd08   	; (absolute)

		.echo **PASS  SBC  zpi

		SBC 	($12)
		SBC 	(bak08)
		SBC 	(fwd08)

		.echo **PASS  SBC  zpiy

		SBC 	($12),Y
		SBC 	(bak08),y
		SBC 	(fwd08),Y

		.echo **PASS  SBC  zpx

		SBC 	$12,X
		SBC 	bak08,x
		Sbc 	fwd08,X 	; (absolute)

		.echo **PASS  SBC  zpxi

		SBC 	($12,X)
		SBC 	(bak08,x)
		SBC 	(fwd08,X)

		.echo **PASS  SBC  zpy  (as aby)

		Sbc 	$12,Y
		Sbc 	bak08,y
		Sbc 	fwd08,Y


:	; forward ref for SBC

; -------------------------------

:	; backward ref for SEC

		.echo **FAIL  SEC  ab

		sec 	$1234
		sec 	bak16
		sec 	fwd16

		.echo **FAIL  SEC  abi

		sec 	($1234)
		sec 	(bak16)
		sec 	(fwd16)

		.echo **FAIL  SEC  abx

		sec 	$1234,X
		sec 	bak16,x
		sec 	fwd16,X

		.echo **FAIL  SEC  abxi

		sec 	($1234,X)
		sec 	(bak16,x)
		sec 	(fwd16,X)

		.echo **FAIL  SEC  aby

		sec 	$1234,Y
		sec 	bak16,y
		sec 	fwd16,Y

		.echo **FAIL  SEC  acc

		sec 	A
		sec 	a

		.echo **FAIL  SEC  bmv

		sec 	#$12, #$34
		sec 	#bak08, #fwd08
		sec 	$123456, $789ABC
		sec 	bak24, fwd24

		.echo **FAIL  SEC  imm

		sec 	#$12
		sec 	#bak08
		sec 	#fwd08

		.echo **PASS  SEC  imp

		SEC 

		.echo **FAIL  SEC  lab

		sec 	$123456
		sec 	bak24
		sec 	fwd24

		.echo **FAIL  SEC  labi

		sec 	[$123456]
		sec 	[bak24]
		sec 	[fwd24]

		.echo **FAIL  SEC  labx

		sec 	$123456,X
		sec 	bak24,x
		sec 	fwd24,X

		.echo **FAIL  SEC  lpcr

		sec 	:+
		sec 	-
		sec 	+
		sec 	:-

		.echo **FAIL  SEC  lzpi

		sec 	[$12]
		sec 	[bak08]
		sec 	[fwd08]

		.echo **FAIL  SEC  lzpiy

		sec 	[$12],Y
		sec 	[bak08],y
		sec 	[fwd08],Y

		.echo **FAIL  SEC  pcr

		sec 	:+
		sec 	-
		sec 	+
		sec 	:-

		.echo **FAIL  SEC  sr

		sec 	$12,S
		sec 	bak08,s
		sec 	fwd08,S

		.echo **FAIL  SEC  sriy

		sec 	($12,s),Y
		sec 	(bak08,S),y
		sec 	(fwd08,s),Y

		.echo **FAIL  SEC  zp

		sec 	$12
		sec 	bak08
		sec 	fwd08

		.echo **FAIL  SEC  zpi

		sec 	($12)
		sec 	(bak08)
		sec 	(fwd08)

		.echo **FAIL  SEC  zpiy

		sec 	($12),Y
		sec 	(bak08),y
		sec 	(fwd08),Y

		.echo **FAIL  SEC  zpx

		sec 	$12,X
		sec 	bak08,x
		sec 	fwd08,X

		.echo **FAIL  SEC  zpxi

		sec 	($12,X)
		sec 	(bak08,x)
		sec 	(fwd08,X)

		.echo **FAIL  SEC  zpy

		sec 	$12,Y
		sec 	bak08,y
		sec 	fwd08,Y


:	; forward ref for SEC

; -------------------------------

:	; backward ref for SED

		.echo **FAIL  SED  ab

		sed 	$1234
		sed 	bak16
		sed 	fwd16

		.echo **FAIL  SED  abi

		sed 	($1234)
		sed 	(bak16)
		sed 	(fwd16)

		.echo **FAIL  SED  abx

		sed 	$1234,X
		sed 	bak16,x
		sed 	fwd16,X

		.echo **FAIL  SED  abxi

		sed 	($1234,X)
		sed 	(bak16,x)
		sed 	(fwd16,X)

		.echo **FAIL  SED  aby

		sed 	$1234,Y
		sed 	bak16,y
		sed 	fwd16,Y

		.echo **FAIL  SED  acc

		sed 	A
		sed 	a

		.echo **FAIL  SED  bmv

		sed 	#$12, #$34
		sed 	#bak08, #fwd08
		sed 	$123456, $789ABC
		sed 	bak24, fwd24

		.echo **FAIL  SED  imm

		sed 	#$12
		sed 	#bak08
		sed 	#fwd08

		.echo **PASS  SED  imp

		SED 

		.echo **FAIL  SED  lab

		sed 	$123456
		sed 	bak24
		sed 	fwd24

		.echo **FAIL  SED  labi

		sed 	[$123456]
		sed 	[bak24]
		sed 	[fwd24]

		.echo **FAIL  SED  labx

		sed 	$123456,X
		sed 	bak24,x
		sed 	fwd24,X

		.echo **FAIL  SED  lpcr

		sed 	:+
		sed 	-
		sed 	+
		sed 	:-

		.echo **FAIL  SED  lzpi

		sed 	[$12]
		sed 	[bak08]
		sed 	[fwd08]

		.echo **FAIL  SED  lzpiy

		sed 	[$12],Y
		sed 	[bak08],y
		sed 	[fwd08],Y

		.echo **FAIL  SED  pcr

		sed 	:+
		sed 	-
		sed 	+
		sed 	:-

		.echo **FAIL  SED  sr

		sed 	$12,S
		sed 	bak08,s
		sed 	fwd08,S

		.echo **FAIL  SED  sriy

		sed 	($12,s),Y
		sed 	(bak08,S),y
		sed 	(fwd08,s),Y

		.echo **FAIL  SED  zp

		sed 	$12
		sed 	bak08
		sed 	fwd08

		.echo **FAIL  SED  zpi

		sed 	($12)
		sed 	(bak08)
		sed 	(fwd08)

		.echo **FAIL  SED  zpiy

		sed 	($12),Y
		sed 	(bak08),y
		sed 	(fwd08),Y

		.echo **FAIL  SED  zpx

		sed 	$12,X
		sed 	bak08,x
		sed 	fwd08,X

		.echo **FAIL  SED  zpxi

		sed 	($12,X)
		sed 	(bak08,x)
		sed 	(fwd08,X)

		.echo **FAIL  SED  zpy

		sed 	$12,Y
		sed 	bak08,y
		sed 	fwd08,Y


:	; forward ref for SED

; -------------------------------

:	; backward ref for SEI

		.echo **FAIL  SEI  ab

		sei 	$1234
		sei 	bak16
		sei 	fwd16

		.echo **FAIL  SEI  abi

		sei 	($1234)
		sei 	(bak16)
		sei 	(fwd16)

		.echo **FAIL  SEI  abx

		sei 	$1234,X
		sei 	bak16,x
		sei 	fwd16,X

		.echo **FAIL  SEI  abxi

		sei 	($1234,X)
		sei 	(bak16,x)
		sei 	(fwd16,X)

		.echo **FAIL  SEI  aby

		sei 	$1234,Y
		sei 	bak16,y
		sei 	fwd16,Y

		.echo **FAIL  SEI  acc

		sei 	A
		sei 	a

		.echo **FAIL  SEI  bmv

		sei 	#$12, #$34
		sei 	#bak08, #fwd08
		sei 	$123456, $789ABC
		sei 	bak24, fwd24

		.echo **FAIL  SEI  imm

		sei 	#$12
		sei 	#bak08
		sei 	#fwd08

		.echo **PASS  SEI  imp

		SEI 

		.echo **FAIL  SEI  lab

		sei 	$123456
		sei 	bak24
		sei 	fwd24

		.echo **FAIL  SEI  labi

		sei 	[$123456]
		sei 	[bak24]
		sei 	[fwd24]

		.echo **FAIL  SEI  labx

		sei 	$123456,X
		sei 	bak24,x
		sei 	fwd24,X

		.echo **FAIL  SEI  lpcr

		sei 	:+
		sei 	-
		sei 	+
		sei 	:-

		.echo **FAIL  SEI  lzpi

		sei 	[$12]
		sei 	[bak08]
		sei 	[fwd08]

		.echo **FAIL  SEI  lzpiy

		sei 	[$12],Y
		sei 	[bak08],y
		sei 	[fwd08],Y

		.echo **FAIL  SEI  pcr

		sei 	:+
		sei 	-
		sei 	+
		sei 	:-

		.echo **FAIL  SEI  sr

		sei 	$12,S
		sei 	bak08,s
		sei 	fwd08,S

		.echo **FAIL  SEI  sriy

		sei 	($12,s),Y
		sei 	(bak08,S),y
		sei 	(fwd08,s),Y

		.echo **FAIL  SEI  zp

		sei 	$12
		sei 	bak08
		sei 	fwd08

		.echo **FAIL  SEI  zpi

		sei 	($12)
		sei 	(bak08)
		sei 	(fwd08)

		.echo **FAIL  SEI  zpiy

		sei 	($12),Y
		sei 	(bak08),y
		sei 	(fwd08),Y

		.echo **FAIL  SEI  zpx

		sei 	$12,X
		sei 	bak08,x
		sei 	fwd08,X

		.echo **FAIL  SEI  zpxi

		sei 	($12,X)
		sei 	(bak08,x)
		sei 	(fwd08,X)

		.echo **FAIL  SEI  zpy

		sei 	$12,Y
		sei 	bak08,y
		sei 	fwd08,Y


:	; forward ref for SEI

; -------------------------------

:	; backward ref for SEP

		.echo **FAIL  SEP  ab

		sep 	$1234
		sep 	bak16
		sep 	fwd16

		.echo **FAIL  SEP  abi

		sep 	($1234)
		sep 	(bak16)
		sep 	(fwd16)

		.echo **FAIL  SEP  abx

		sep 	$1234,X
		sep 	bak16,x
		sep 	fwd16,X

		.echo **FAIL  SEP  abxi

		sep 	($1234,X)
		sep 	(bak16,x)
		sep 	(fwd16,X)

		.echo **FAIL  SEP  aby

		sep 	$1234,Y
		sep 	bak16,y
		sep 	fwd16,Y

		.echo **FAIL  SEP  acc

		sep 	A
		sep 	a

		.echo **FAIL  SEP  bmv

		sep 	#$12, #$34
		sep 	#bak08, #fwd08
		sep 	$123456, $789ABC
		sep 	bak24, fwd24

		.echo **PASS  SEP  imm

		SEP 	#$12
		SEP 	#bak08
		SEP 	#fwd08

		.echo **FAIL  SEP  imp

		sep 

		.echo **FAIL  SEP  lab

		sep 	$123456
		sep 	bak24
		sep 	fwd24

		.echo **FAIL  SEP  labi

		sep 	[$123456]
		sep 	[bak24]
		sep 	[fwd24]

		.echo **FAIL  SEP  labx

		sep 	$123456,X
		sep 	bak24,x
		sep 	fwd24,X

		.echo **FAIL  SEP  lpcr

		sep 	:+
		sep 	-
		sep 	+
		sep 	:-

		.echo **FAIL  SEP  lzpi

		sep 	[$12]
		sep 	[bak08]
		sep 	[fwd08]

		.echo **FAIL  SEP  lzpiy

		sep 	[$12],Y
		sep 	[bak08],y
		sep 	[fwd08],Y

		.echo **FAIL  SEP  pcr

		sep 	:+
		sep 	-
		sep 	+
		sep 	:-

		.echo **FAIL  SEP  sr

		sep 	$12,S
		sep 	bak08,s
		sep 	fwd08,S

		.echo **FAIL  SEP  sriy

		sep 	($12,s),Y
		sep 	(bak08,S),y
		sep 	(fwd08,s),Y

		.echo **FAIL  SEP  zp

		sep 	$12
		sep 	bak08
		sep 	fwd08

		.echo **FAIL  SEP  zpi

		sep 	($12)
		sep 	(bak08)
		sep 	(fwd08)

		.echo **FAIL  SEP  zpiy

		sep 	($12),Y
		sep 	(bak08),y
		sep 	(fwd08),Y

		.echo **FAIL  SEP  zpx

		sep 	$12,X
		sep 	bak08,x
		sep 	fwd08,X

		.echo **FAIL  SEP  zpxi

		sep 	($12,X)
		sep 	(bak08,x)
		sep 	(fwd08,X)

		.echo **FAIL  SEP  zpy

		sep 	$12,Y
		sep 	bak08,y
		sep 	fwd08,Y


:	; forward ref for SEP

; -------------------------------

:	; backward ref for STA

		.echo **PASS  STA  ab

		STA 	$1234
		STA 	bak16
		STA 	fwd16

		.echo **PASS  STA  abi  (as zpi)

		Sta 	($1234)
		Sta 	(bak16)
		Sta 	(fwd16)

		.echo **PASS  STA  abx

		STA 	$1234,X
		STA 	bak16,x
		STA 	fwd16,X

		.echo **PASS  STA  abxi  (as zpxi)

		Sta 	($1234,X)
		Sta 	(bak16,x)
		Sta 	(fwd16,X)

		.echo **PASS  STA  aby

		STA 	$1234,Y
		STA 	bak16,y
		STA 	fwd16,Y

		.echo **FAIL  STA  acc

		sta 	A
		sta 	a

		.echo **FAIL  STA  bmv

		sta 	#$12, #$34
		sta 	#bak08, #fwd08
		sta 	$123456, $789ABC
		sta 	bak24, fwd24

		.echo **FAIL  STA  imm

		sta 	#$12
		sta 	#bak08
		sta 	#fwd08

		.echo **FAIL  STA  imp

		sta 

		.echo **PASS  STA  lab

		STA 	$123456
		STA 	bak24
		STA 	fwd24

		.echo **PASS  STA  labi  (as lzpi)

		Sta 	[$123456]
		Sta 	[bak24]
		Sta 	[fwd24]

		.echo **PASS  STA  labx

		STA 	$123456,X
		STA 	bak24,x
		STA 	fwd24,X

		.echo **PASS  STA  lpcr  (as ab)

		Sta 	:+
		Sta 	-
		Sta 	+
		Sta 	:-

		.echo **PASS  STA  lzpi

		STA 	[$12]
		STA 	[bak08]
		STA 	[fwd08]

		.echo **PASS  STA  lzpiy

		STA 	[$12],Y
		STA 	[bak08],y
		STA 	[fwd08],Y

		.echo **PASS  STA  pcr  (as ab)

		Sta 	:+
		Sta 	-
		Sta 	+
		Sta 	:-

		.echo **PASS  STA  sr

		STA 	$12,S
		STA 	bak08,s
		STA 	fwd08,S

		.echo **PASS  STA  sriy

		STA 	($12,s),Y
		STA 	(bak08,S),y
		STA 	(fwd08,s),Y

		.echo **PASS  STA  zp

		STA 	$12
		STA 	bak08
		Sta 	fwd08   	; (absolute)

		.echo **PASS  STA  zpi

		STA 	($12)
		STA 	(bak08)
		STA 	(fwd08)

		.echo **PASS  STA  zpiy

		STA 	($12),Y
		STA 	(bak08),y
		STA 	(fwd08),Y

		.echo **PASS  STA  zpx

		STA 	$12,X
		STA 	bak08,x
		Sta 	fwd08,X 	; (absolute)

		.echo **PASS  STA  zpxi

		STA 	($12,X)
		STA 	(bak08,x)
		STA 	(fwd08,X)

		.echo **PASS  STA  zpy  (as aby)

		Sta 	$12,Y
		Sta 	bak08,y
		Sta 	fwd08,Y


:	; forward ref for STA

; -------------------------------

:	; backward ref for STP

		.echo **FAIL  STP  ab

		stp 	$1234
		stp 	bak16
		stp 	fwd16

		.echo **FAIL  STP  abi

		stp 	($1234)
		stp 	(bak16)
		stp 	(fwd16)

		.echo **FAIL  STP  abx

		stp 	$1234,X
		stp 	bak16,x
		stp 	fwd16,X

		.echo **FAIL  STP  abxi

		stp 	($1234,X)
		stp 	(bak16,x)
		stp 	(fwd16,X)

		.echo **FAIL  STP  aby

		stp 	$1234,Y
		stp 	bak16,y
		stp 	fwd16,Y

		.echo **FAIL  STP  acc

		stp 	A
		stp 	a

		.echo **FAIL  STP  bmv

		stp 	#$12, #$34
		stp 	#bak08, #fwd08
		stp 	$123456, $789ABC
		stp 	bak24, fwd24

		.echo **FAIL  STP  imm

		stp 	#$12
		stp 	#bak08
		stp 	#fwd08

		.echo **PASS  STP  imp

		STP 

		.echo **FAIL  STP  lab

		stp 	$123456
		stp 	bak24
		stp 	fwd24

		.echo **FAIL  STP  labi

		stp 	[$123456]
		stp 	[bak24]
		stp 	[fwd24]

		.echo **FAIL  STP  labx

		stp 	$123456,X
		stp 	bak24,x
		stp 	fwd24,X

		.echo **FAIL  STP  lpcr

		stp 	:+
		stp 	-
		stp 	+
		stp 	:-

		.echo **FAIL  STP  lzpi

		stp 	[$12]
		stp 	[bak08]
		stp 	[fwd08]

		.echo **FAIL  STP  lzpiy

		stp 	[$12],Y
		stp 	[bak08],y
		stp 	[fwd08],Y

		.echo **FAIL  STP  pcr

		stp 	:+
		stp 	-
		stp 	+
		stp 	:-

		.echo **FAIL  STP  sr

		stp 	$12,S
		stp 	bak08,s
		stp 	fwd08,S

		.echo **FAIL  STP  sriy

		stp 	($12,s),Y
		stp 	(bak08,S),y
		stp 	(fwd08,s),Y

		.echo **FAIL  STP  zp

		stp 	$12
		stp 	bak08
		stp 	fwd08

		.echo **FAIL  STP  zpi

		stp 	($12)
		stp 	(bak08)
		stp 	(fwd08)

		.echo **FAIL  STP  zpiy

		stp 	($12),Y
		stp 	(bak08),y
		stp 	(fwd08),Y

		.echo **FAIL  STP  zpx

		stp 	$12,X
		stp 	bak08,x
		stp 	fwd08,X

		.echo **FAIL  STP  zpxi

		stp 	($12,X)
		stp 	(bak08,x)
		stp 	(fwd08,X)

		.echo **FAIL  STP  zpy

		stp 	$12,Y
		stp 	bak08,y
		stp 	fwd08,Y


:	; forward ref for STP

; -------------------------------

:	; backward ref for STX

		.echo **PASS  STX  ab

		STX 	$1234
		STX 	bak16
		STX 	fwd16

		.echo **FAIL  STX  abi

		stx 	($1234)
		stx 	(bak16)
		stx 	(fwd16)

		.echo **FAIL  STX  abx

		stx 	$1234,X
		stx 	bak16,x
		stx 	fwd16,X

		.echo **FAIL  STX  abxi

		stx 	($1234,X)
		stx 	(bak16,x)
		stx 	(fwd16,X)

		.echo **PASS  STX  aby  (as zpy)

		Stx 	$1234,Y
		Stx 	bak16,y
		Stx 	fwd16,Y

		.echo **FAIL  STX  acc

		stx 	A
		stx 	a

		.echo **FAIL  STX  bmv

		stx 	#$12, #$34
		stx 	#bak08, #fwd08
		stx 	$123456, $789ABC
		stx 	bak24, fwd24

		.echo **FAIL  STX  imm

		stx 	#$12
		stx 	#bak08
		stx 	#fwd08

		.echo **FAIL  STX  imp

		stx 

		.echo **PASS  STX  lab  (as ab)

		Stx 	$123456
		Stx 	bak24
		Stx 	fwd24

		.echo **FAIL  STX  labi

		stx 	[$123456]
		stx 	[bak24]
		stx 	[fwd24]

		.echo **FAIL  STX  labx

		stx 	$123456,X
		stx 	bak24,x
		stx 	fwd24,X

		.echo **PASS  STX  lpcr  (as ab)

		Stx 	:+
		Stx 	-
		Stx 	+
		Stx 	:-

		.echo **FAIL  STX  lzpi

		stx 	[$12]
		stx 	[bak08]
		stx 	[fwd08]

		.echo **FAIL  STX  lzpiy

		stx 	[$12],Y
		stx 	[bak08],y
		stx 	[fwd08],Y

		.echo **PASS  STX  pcr  (as ab)

		Stx 	:+
		Stx 	-
		Stx 	+
		Stx 	:-

		.echo **FAIL  STX  sr

		stx 	$12,S
		stx 	bak08,s
		stx 	fwd08,S

		.echo **FAIL  STX  sriy

		stx 	($12,s),Y
		stx 	(bak08,S),y
		stx 	(fwd08,s),Y

		.echo **PASS  STX  zp

		STX 	$12
		STX 	bak08
		Stx 	fwd08   	; (absolute)

		.echo **FAIL  STX  zpi

		stx 	($12)
		stx 	(bak08)
		stx 	(fwd08)

		.echo **FAIL  STX  zpiy

		stx 	($12),Y
		stx 	(bak08),y
		stx 	(fwd08),Y

		.echo **FAIL  STX  zpx

		stx 	$12,X
		stx 	bak08,x
		stx 	fwd08,X

		.echo **FAIL  STX  zpxi

		stx 	($12,X)
		stx 	(bak08,x)
		stx 	(fwd08,X)

		.echo **PASS  STX  zpy

		STX 	$12,Y
		STX 	bak08,y
		STX 	fwd08,Y


:	; forward ref for STX

; -------------------------------

:	; backward ref for STY

		.echo **PASS  STY  ab

		STY 	$1234
		STY 	bak16
		STY 	fwd16

		.echo **FAIL  STY  abi

		sty 	($1234)
		sty 	(bak16)
		sty 	(fwd16)

		.echo **PASS  STY  abx  (as zpx)

		Sty 	$1234,X
		Sty 	bak16,x
		Sty 	fwd16,X

		.echo **FAIL  STY  abxi

		sty 	($1234,X)
		sty 	(bak16,x)
		sty 	(fwd16,X)

		.echo **FAIL  STY  aby

		sty 	$1234,Y
		sty 	bak16,y
		sty 	fwd16,Y

		.echo **FAIL  STY  acc

		sty 	A
		sty 	a

		.echo **FAIL  STY  bmv

		sty 	#$12, #$34
		sty 	#bak08, #fwd08
		sty 	$123456, $789ABC
		sty 	bak24, fwd24

		.echo **FAIL  STY  imm

		sty 	#$12
		sty 	#bak08
		sty 	#fwd08

		.echo **FAIL  STY  imp

		sty 

		.echo **PASS  STY  lab  (as ab)

		Sty 	$123456
		Sty 	bak24
		Sty 	fwd24

		.echo **FAIL  STY  labi

		sty 	[$123456]
		sty 	[bak24]
		sty 	[fwd24]

		.echo **PASS  STY  labx  (as zpx)

		Sty 	$123456,X
		Sty 	bak24,x
		Sty 	fwd24,X

		.echo **PASS  STY  lpcr  (as ab)

		Sty 	:+
		Sty 	-
		Sty 	+
		Sty 	:-

		.echo **FAIL  STY  lzpi

		sty 	[$12]
		sty 	[bak08]
		sty 	[fwd08]

		.echo **FAIL  STY  lzpiy

		sty 	[$12],Y
		sty 	[bak08],y
		sty 	[fwd08],Y

		.echo **PASS  STY  pcr  (as ab)

		Sty 	:+
		Sty 	-
		Sty 	+
		Sty 	:-

		.echo **FAIL  STY  sr

		sty 	$12,S
		sty 	bak08,s
		sty 	fwd08,S

		.echo **FAIL  STY  sriy

		sty 	($12,s),Y
		sty 	(bak08,S),y
		sty 	(fwd08,s),Y

		.echo **PASS  STY  zp

		STY 	$12
		STY 	bak08
		Sty 	fwd08   	; (absolute)

		.echo **FAIL  STY  zpi

		sty 	($12)
		sty 	(bak08)
		sty 	(fwd08)

		.echo **FAIL  STY  zpiy

		sty 	($12),Y
		sty 	(bak08),y
		sty 	(fwd08),Y

		.echo **PASS  STY  zpx

		STY 	$12,X
		STY 	bak08,x
		STY 	fwd08,X

		.echo **FAIL  STY  zpxi

		sty 	($12,X)
		sty 	(bak08,x)
		sty 	(fwd08,X)

		.echo **FAIL  STY  zpy

		sty 	$12,Y
		sty 	bak08,y
		sty 	fwd08,Y


:	; forward ref for STY

; -------------------------------

:	; backward ref for STZ

		.echo **PASS  STZ  ab

		STZ 	$1234
		STZ 	bak16
		STZ 	fwd16

		.echo **FAIL  STZ  abi

		stz 	($1234)
		stz 	(bak16)
		stz 	(fwd16)

		.echo **PASS  STZ  abx

		STZ 	$1234,X
		STZ 	bak16,x
		STZ 	fwd16,X

		.echo **FAIL  STZ  abxi

		stz 	($1234,X)
		stz 	(bak16,x)
		stz 	(fwd16,X)

		.echo **FAIL  STZ  aby

		stz 	$1234,Y
		stz 	bak16,y
		stz 	fwd16,Y

		.echo **FAIL  STZ  acc

		stz 	A
		stz 	a

		.echo **FAIL  STZ  bmv

		stz 	#$12, #$34
		stz 	#bak08, #fwd08
		stz 	$123456, $789ABC
		stz 	bak24, fwd24

		.echo **FAIL  STZ  imm

		stz 	#$12
		stz 	#bak08
		stz 	#fwd08

		.echo **FAIL  STZ  imp

		stz 

		.echo **PASS  STZ  lab  (as ab)

		Stz 	$123456
		Stz 	bak24
		Stz 	fwd24

		.echo **FAIL  STZ  labi

		stz 	[$123456]
		stz 	[bak24]
		stz 	[fwd24]

		.echo **PASS  STZ  labx  (as abx)

		Stz 	$123456,X
		Stz 	bak24,x
		Stz 	fwd24,X

		.echo **PASS  STZ  lpcr  (as ab)

		Stz 	:+
		Stz 	-
		Stz 	+
		Stz 	:-

		.echo **FAIL  STZ  lzpi

		stz 	[$12]
		stz 	[bak08]
		stz 	[fwd08]

		.echo **FAIL  STZ  lzpiy

		stz 	[$12],Y
		stz 	[bak08],y
		stz 	[fwd08],Y

		.echo **PASS  STZ  pcr  (as ab)

		Stz 	:+
		Stz 	-
		Stz 	+
		Stz 	:-

		.echo **FAIL  STZ  sr

		stz 	$12,S
		stz 	bak08,s
		stz 	fwd08,S

		.echo **FAIL  STZ  sriy

		stz 	($12,s),Y
		stz 	(bak08,S),y
		stz 	(fwd08,s),Y

		.echo **PASS  STZ  zp

		STZ 	$12
		STZ 	bak08
		Stz 	fwd08   	; (absolute)

		.echo **FAIL  STZ  zpi

		stz 	($12)
		stz 	(bak08)
		stz 	(fwd08)

		.echo **FAIL  STZ  zpiy

		stz 	($12),Y
		stz 	(bak08),y
		stz 	(fwd08),Y

		.echo **PASS  STZ  zpx

		STZ 	$12,X
		STZ 	bak08,x
		Stz 	fwd08,X 	; (absolute)

		.echo **FAIL  STZ  zpxi

		stz 	($12,X)
		stz 	(bak08,x)
		stz 	(fwd08,X)

		.echo **FAIL  STZ  zpy

		stz 	$12,Y
		stz 	bak08,y
		stz 	fwd08,Y


:	; forward ref for STZ

; -------------------------------

:	; backward ref for SWP

		.echo **FAIL  SWP  ab

		swp 	$1234
		swp 	bak16
		swp 	fwd16

		.echo **FAIL  SWP  abi

		swp 	($1234)
		swp 	(bak16)
		swp 	(fwd16)

		.echo **FAIL  SWP  abx

		swp 	$1234,X
		swp 	bak16,x
		swp 	fwd16,X

		.echo **FAIL  SWP  abxi

		swp 	($1234,X)
		swp 	(bak16,x)
		swp 	(fwd16,X)

		.echo **FAIL  SWP  aby

		swp 	$1234,Y
		swp 	bak16,y
		swp 	fwd16,Y

		.echo **FAIL  SWP  acc

		swp 	A
		swp 	a

		.echo **FAIL  SWP  bmv

		swp 	#$12, #$34
		swp 	#bak08, #fwd08
		swp 	$123456, $789ABC
		swp 	bak24, fwd24

		.echo **FAIL  SWP  imm

		swp 	#$12
		swp 	#bak08
		swp 	#fwd08

		.echo **PASS  SWP  imp

		SWP 

		.echo **FAIL  SWP  lab

		swp 	$123456
		swp 	bak24
		swp 	fwd24

		.echo **FAIL  SWP  labi

		swp 	[$123456]
		swp 	[bak24]
		swp 	[fwd24]

		.echo **FAIL  SWP  labx

		swp 	$123456,X
		swp 	bak24,x
		swp 	fwd24,X

		.echo **FAIL  SWP  lpcr

		swp 	:+
		swp 	-
		swp 	+
		swp 	:-

		.echo **FAIL  SWP  lzpi

		swp 	[$12]
		swp 	[bak08]
		swp 	[fwd08]

		.echo **FAIL  SWP  lzpiy

		swp 	[$12],Y
		swp 	[bak08],y
		swp 	[fwd08],Y

		.echo **FAIL  SWP  pcr

		swp 	:+
		swp 	-
		swp 	+
		swp 	:-

		.echo **FAIL  SWP  sr

		swp 	$12,S
		swp 	bak08,s
		swp 	fwd08,S

		.echo **FAIL  SWP  sriy

		swp 	($12,s),Y
		swp 	(bak08,S),y
		swp 	(fwd08,s),Y

		.echo **FAIL  SWP  zp

		swp 	$12
		swp 	bak08
		swp 	fwd08

		.echo **FAIL  SWP  zpi

		swp 	($12)
		swp 	(bak08)
		swp 	(fwd08)

		.echo **FAIL  SWP  zpiy

		swp 	($12),Y
		swp 	(bak08),y
		swp 	(fwd08),Y

		.echo **FAIL  SWP  zpx

		swp 	$12,X
		swp 	bak08,x
		swp 	fwd08,X

		.echo **FAIL  SWP  zpxi

		swp 	($12,X)
		swp 	(bak08,x)
		swp 	(fwd08,X)

		.echo **FAIL  SWP  zpy

		swp 	$12,Y
		swp 	bak08,y
		swp 	fwd08,Y


:	; forward ref for SWP

; -------------------------------

:	; backward ref for TAD

		.echo **FAIL  TAD  ab

		tad 	$1234
		tad 	bak16
		tad 	fwd16

		.echo **FAIL  TAD  abi

		tad 	($1234)
		tad 	(bak16)
		tad 	(fwd16)

		.echo **FAIL  TAD  abx

		tad 	$1234,X
		tad 	bak16,x
		tad 	fwd16,X

		.echo **FAIL  TAD  abxi

		tad 	($1234,X)
		tad 	(bak16,x)
		tad 	(fwd16,X)

		.echo **FAIL  TAD  aby

		tad 	$1234,Y
		tad 	bak16,y
		tad 	fwd16,Y

		.echo **FAIL  TAD  acc

		tad 	A
		tad 	a

		.echo **FAIL  TAD  bmv

		tad 	#$12, #$34
		tad 	#bak08, #fwd08
		tad 	$123456, $789ABC
		tad 	bak24, fwd24

		.echo **FAIL  TAD  imm

		tad 	#$12
		tad 	#bak08
		tad 	#fwd08

		.echo **PASS  TAD  imp

		TAD 

		.echo **FAIL  TAD  lab

		tad 	$123456
		tad 	bak24
		tad 	fwd24

		.echo **FAIL  TAD  labi

		tad 	[$123456]
		tad 	[bak24]
		tad 	[fwd24]

		.echo **FAIL  TAD  labx

		tad 	$123456,X
		tad 	bak24,x
		tad 	fwd24,X

		.echo **FAIL  TAD  lpcr

		tad 	:+
		tad 	-
		tad 	+
		tad 	:-

		.echo **FAIL  TAD  lzpi

		tad 	[$12]
		tad 	[bak08]
		tad 	[fwd08]

		.echo **FAIL  TAD  lzpiy

		tad 	[$12],Y
		tad 	[bak08],y
		tad 	[fwd08],Y

		.echo **FAIL  TAD  pcr

		tad 	:+
		tad 	-
		tad 	+
		tad 	:-

		.echo **FAIL  TAD  sr

		tad 	$12,S
		tad 	bak08,s
		tad 	fwd08,S

		.echo **FAIL  TAD  sriy

		tad 	($12,s),Y
		tad 	(bak08,S),y
		tad 	(fwd08,s),Y

		.echo **FAIL  TAD  zp

		tad 	$12
		tad 	bak08
		tad 	fwd08

		.echo **FAIL  TAD  zpi

		tad 	($12)
		tad 	(bak08)
		tad 	(fwd08)

		.echo **FAIL  TAD  zpiy

		tad 	($12),Y
		tad 	(bak08),y
		tad 	(fwd08),Y

		.echo **FAIL  TAD  zpx

		tad 	$12,X
		tad 	bak08,x
		tad 	fwd08,X

		.echo **FAIL  TAD  zpxi

		tad 	($12,X)
		tad 	(bak08,x)
		tad 	(fwd08,X)

		.echo **FAIL  TAD  zpy

		tad 	$12,Y
		tad 	bak08,y
		tad 	fwd08,Y


:	; forward ref for TAD

; -------------------------------

:	; backward ref for TAS

		.echo **FAIL  TAS  ab

		tas 	$1234
		tas 	bak16
		tas 	fwd16

		.echo **FAIL  TAS  abi

		tas 	($1234)
		tas 	(bak16)
		tas 	(fwd16)

		.echo **FAIL  TAS  abx

		tas 	$1234,X
		tas 	bak16,x
		tas 	fwd16,X

		.echo **FAIL  TAS  abxi

		tas 	($1234,X)
		tas 	(bak16,x)
		tas 	(fwd16,X)

		.echo **FAIL  TAS  aby

		tas 	$1234,Y
		tas 	bak16,y
		tas 	fwd16,Y

		.echo **FAIL  TAS  acc

		tas 	A
		tas 	a

		.echo **FAIL  TAS  bmv

		tas 	#$12, #$34
		tas 	#bak08, #fwd08
		tas 	$123456, $789ABC
		tas 	bak24, fwd24

		.echo **FAIL  TAS  imm

		tas 	#$12
		tas 	#bak08
		tas 	#fwd08

		.echo **PASS  TAS  imp

		TAS 

		.echo **FAIL  TAS  lab

		tas 	$123456
		tas 	bak24
		tas 	fwd24

		.echo **FAIL  TAS  labi

		tas 	[$123456]
		tas 	[bak24]
		tas 	[fwd24]

		.echo **FAIL  TAS  labx

		tas 	$123456,X
		tas 	bak24,x
		tas 	fwd24,X

		.echo **FAIL  TAS  lpcr

		tas 	:+
		tas 	-
		tas 	+
		tas 	:-

		.echo **FAIL  TAS  lzpi

		tas 	[$12]
		tas 	[bak08]
		tas 	[fwd08]

		.echo **FAIL  TAS  lzpiy

		tas 	[$12],Y
		tas 	[bak08],y
		tas 	[fwd08],Y

		.echo **FAIL  TAS  pcr

		tas 	:+
		tas 	-
		tas 	+
		tas 	:-

		.echo **FAIL  TAS  sr

		tas 	$12,S
		tas 	bak08,s
		tas 	fwd08,S

		.echo **FAIL  TAS  sriy

		tas 	($12,s),Y
		tas 	(bak08,S),y
		tas 	(fwd08,s),Y

		.echo **FAIL  TAS  zp

		tas 	$12
		tas 	bak08
		tas 	fwd08

		.echo **FAIL  TAS  zpi

		tas 	($12)
		tas 	(bak08)
		tas 	(fwd08)

		.echo **FAIL  TAS  zpiy

		tas 	($12),Y
		tas 	(bak08),y
		tas 	(fwd08),Y

		.echo **FAIL  TAS  zpx

		tas 	$12,X
		tas 	bak08,x
		tas 	fwd08,X

		.echo **FAIL  TAS  zpxi

		tas 	($12,X)
		tas 	(bak08,x)
		tas 	(fwd08,X)

		.echo **FAIL  TAS  zpy

		tas 	$12,Y
		tas 	bak08,y
		tas 	fwd08,Y


:	; forward ref for TAS

; -------------------------------

:	; backward ref for TAX

		.echo **FAIL  TAX  ab

		tax 	$1234
		tax 	bak16
		tax 	fwd16

		.echo **FAIL  TAX  abi

		tax 	($1234)
		tax 	(bak16)
		tax 	(fwd16)

		.echo **FAIL  TAX  abx

		tax 	$1234,X
		tax 	bak16,x
		tax 	fwd16,X

		.echo **FAIL  TAX  abxi

		tax 	($1234,X)
		tax 	(bak16,x)
		tax 	(fwd16,X)

		.echo **FAIL  TAX  aby

		tax 	$1234,Y
		tax 	bak16,y
		tax 	fwd16,Y

		.echo **FAIL  TAX  acc

		tax 	A
		tax 	a

		.echo **FAIL  TAX  bmv

		tax 	#$12, #$34
		tax 	#bak08, #fwd08
		tax 	$123456, $789ABC
		tax 	bak24, fwd24

		.echo **FAIL  TAX  imm

		tax 	#$12
		tax 	#bak08
		tax 	#fwd08

		.echo **PASS  TAX  imp

		TAX 

		.echo **FAIL  TAX  lab

		tax 	$123456
		tax 	bak24
		tax 	fwd24

		.echo **FAIL  TAX  labi

		tax 	[$123456]
		tax 	[bak24]
		tax 	[fwd24]

		.echo **FAIL  TAX  labx

		tax 	$123456,X
		tax 	bak24,x
		tax 	fwd24,X

		.echo **FAIL  TAX  lpcr

		tax 	:+
		tax 	-
		tax 	+
		tax 	:-

		.echo **FAIL  TAX  lzpi

		tax 	[$12]
		tax 	[bak08]
		tax 	[fwd08]

		.echo **FAIL  TAX  lzpiy

		tax 	[$12],Y
		tax 	[bak08],y
		tax 	[fwd08],Y

		.echo **FAIL  TAX  pcr

		tax 	:+
		tax 	-
		tax 	+
		tax 	:-

		.echo **FAIL  TAX  sr

		tax 	$12,S
		tax 	bak08,s
		tax 	fwd08,S

		.echo **FAIL  TAX  sriy

		tax 	($12,s),Y
		tax 	(bak08,S),y
		tax 	(fwd08,s),Y

		.echo **FAIL  TAX  zp

		tax 	$12
		tax 	bak08
		tax 	fwd08

		.echo **FAIL  TAX  zpi

		tax 	($12)
		tax 	(bak08)
		tax 	(fwd08)

		.echo **FAIL  TAX  zpiy

		tax 	($12),Y
		tax 	(bak08),y
		tax 	(fwd08),Y

		.echo **FAIL  TAX  zpx

		tax 	$12,X
		tax 	bak08,x
		tax 	fwd08,X

		.echo **FAIL  TAX  zpxi

		tax 	($12,X)
		tax 	(bak08,x)
		tax 	(fwd08,X)

		.echo **FAIL  TAX  zpy

		tax 	$12,Y
		tax 	bak08,y
		tax 	fwd08,Y


:	; forward ref for TAX

; -------------------------------

:	; backward ref for TAY

		.echo **FAIL  TAY  ab

		tay 	$1234
		tay 	bak16
		tay 	fwd16

		.echo **FAIL  TAY  abi

		tay 	($1234)
		tay 	(bak16)
		tay 	(fwd16)

		.echo **FAIL  TAY  abx

		tay 	$1234,X
		tay 	bak16,x
		tay 	fwd16,X

		.echo **FAIL  TAY  abxi

		tay 	($1234,X)
		tay 	(bak16,x)
		tay 	(fwd16,X)

		.echo **FAIL  TAY  aby

		tay 	$1234,Y
		tay 	bak16,y
		tay 	fwd16,Y

		.echo **FAIL  TAY  acc

		tay 	A
		tay 	a

		.echo **FAIL  TAY  bmv

		tay 	#$12, #$34
		tay 	#bak08, #fwd08
		tay 	$123456, $789ABC
		tay 	bak24, fwd24

		.echo **FAIL  TAY  imm

		tay 	#$12
		tay 	#bak08
		tay 	#fwd08

		.echo **PASS  TAY  imp

		TAY 

		.echo **FAIL  TAY  lab

		tay 	$123456
		tay 	bak24
		tay 	fwd24

		.echo **FAIL  TAY  labi

		tay 	[$123456]
		tay 	[bak24]
		tay 	[fwd24]

		.echo **FAIL  TAY  labx

		tay 	$123456,X
		tay 	bak24,x
		tay 	fwd24,X

		.echo **FAIL  TAY  lpcr

		tay 	:+
		tay 	-
		tay 	+
		tay 	:-

		.echo **FAIL  TAY  lzpi

		tay 	[$12]
		tay 	[bak08]
		tay 	[fwd08]

		.echo **FAIL  TAY  lzpiy

		tay 	[$12],Y
		tay 	[bak08],y
		tay 	[fwd08],Y

		.echo **FAIL  TAY  pcr

		tay 	:+
		tay 	-
		tay 	+
		tay 	:-

		.echo **FAIL  TAY  sr

		tay 	$12,S
		tay 	bak08,s
		tay 	fwd08,S

		.echo **FAIL  TAY  sriy

		tay 	($12,s),Y
		tay 	(bak08,S),y
		tay 	(fwd08,s),Y

		.echo **FAIL  TAY  zp

		tay 	$12
		tay 	bak08
		tay 	fwd08

		.echo **FAIL  TAY  zpi

		tay 	($12)
		tay 	(bak08)
		tay 	(fwd08)

		.echo **FAIL  TAY  zpiy

		tay 	($12),Y
		tay 	(bak08),y
		tay 	(fwd08),Y

		.echo **FAIL  TAY  zpx

		tay 	$12,X
		tay 	bak08,x
		tay 	fwd08,X

		.echo **FAIL  TAY  zpxi

		tay 	($12,X)
		tay 	(bak08,x)
		tay 	(fwd08,X)

		.echo **FAIL  TAY  zpy

		tay 	$12,Y
		tay 	bak08,y
		tay 	fwd08,Y


:	; forward ref for TAY

; -------------------------------

:	; backward ref for TCD

		.echo **FAIL  TCD  ab

		tcd 	$1234
		tcd 	bak16
		tcd 	fwd16

		.echo **FAIL  TCD  abi

		tcd 	($1234)
		tcd 	(bak16)
		tcd 	(fwd16)

		.echo **FAIL  TCD  abx

		tcd 	$1234,X
		tcd 	bak16,x
		tcd 	fwd16,X

		.echo **FAIL  TCD  abxi

		tcd 	($1234,X)
		tcd 	(bak16,x)
		tcd 	(fwd16,X)

		.echo **FAIL  TCD  aby

		tcd 	$1234,Y
		tcd 	bak16,y
		tcd 	fwd16,Y

		.echo **FAIL  TCD  acc

		tcd 	A
		tcd 	a

		.echo **FAIL  TCD  bmv

		tcd 	#$12, #$34
		tcd 	#bak08, #fwd08
		tcd 	$123456, $789ABC
		tcd 	bak24, fwd24

		.echo **FAIL  TCD  imm

		tcd 	#$12
		tcd 	#bak08
		tcd 	#fwd08

		.echo **PASS  TCD  imp

		TCD 

		.echo **FAIL  TCD  lab

		tcd 	$123456
		tcd 	bak24
		tcd 	fwd24

		.echo **FAIL  TCD  labi

		tcd 	[$123456]
		tcd 	[bak24]
		tcd 	[fwd24]

		.echo **FAIL  TCD  labx

		tcd 	$123456,X
		tcd 	bak24,x
		tcd 	fwd24,X

		.echo **FAIL  TCD  lpcr

		tcd 	:+
		tcd 	-
		tcd 	+
		tcd 	:-

		.echo **FAIL  TCD  lzpi

		tcd 	[$12]
		tcd 	[bak08]
		tcd 	[fwd08]

		.echo **FAIL  TCD  lzpiy

		tcd 	[$12],Y
		tcd 	[bak08],y
		tcd 	[fwd08],Y

		.echo **FAIL  TCD  pcr

		tcd 	:+
		tcd 	-
		tcd 	+
		tcd 	:-

		.echo **FAIL  TCD  sr

		tcd 	$12,S
		tcd 	bak08,s
		tcd 	fwd08,S

		.echo **FAIL  TCD  sriy

		tcd 	($12,s),Y
		tcd 	(bak08,S),y
		tcd 	(fwd08,s),Y

		.echo **FAIL  TCD  zp

		tcd 	$12
		tcd 	bak08
		tcd 	fwd08

		.echo **FAIL  TCD  zpi

		tcd 	($12)
		tcd 	(bak08)
		tcd 	(fwd08)

		.echo **FAIL  TCD  zpiy

		tcd 	($12),Y
		tcd 	(bak08),y
		tcd 	(fwd08),Y

		.echo **FAIL  TCD  zpx

		tcd 	$12,X
		tcd 	bak08,x
		tcd 	fwd08,X

		.echo **FAIL  TCD  zpxi

		tcd 	($12,X)
		tcd 	(bak08,x)
		tcd 	(fwd08,X)

		.echo **FAIL  TCD  zpy

		tcd 	$12,Y
		tcd 	bak08,y
		tcd 	fwd08,Y


:	; forward ref for TCD

; -------------------------------

:	; backward ref for TCS

		.echo **FAIL  TCS  ab

		tcs 	$1234
		tcs 	bak16
		tcs 	fwd16

		.echo **FAIL  TCS  abi

		tcs 	($1234)
		tcs 	(bak16)
		tcs 	(fwd16)

		.echo **FAIL  TCS  abx

		tcs 	$1234,X
		tcs 	bak16,x
		tcs 	fwd16,X

		.echo **FAIL  TCS  abxi

		tcs 	($1234,X)
		tcs 	(bak16,x)
		tcs 	(fwd16,X)

		.echo **FAIL  TCS  aby

		tcs 	$1234,Y
		tcs 	bak16,y
		tcs 	fwd16,Y

		.echo **FAIL  TCS  acc

		tcs 	A
		tcs 	a

		.echo **FAIL  TCS  bmv

		tcs 	#$12, #$34
		tcs 	#bak08, #fwd08
		tcs 	$123456, $789ABC
		tcs 	bak24, fwd24

		.echo **FAIL  TCS  imm

		tcs 	#$12
		tcs 	#bak08
		tcs 	#fwd08

		.echo **PASS  TCS  imp

		TCS 

		.echo **FAIL  TCS  lab

		tcs 	$123456
		tcs 	bak24
		tcs 	fwd24

		.echo **FAIL  TCS  labi

		tcs 	[$123456]
		tcs 	[bak24]
		tcs 	[fwd24]

		.echo **FAIL  TCS  labx

		tcs 	$123456,X
		tcs 	bak24,x
		tcs 	fwd24,X

		.echo **FAIL  TCS  lpcr

		tcs 	:+
		tcs 	-
		tcs 	+
		tcs 	:-

		.echo **FAIL  TCS  lzpi

		tcs 	[$12]
		tcs 	[bak08]
		tcs 	[fwd08]

		.echo **FAIL  TCS  lzpiy

		tcs 	[$12],Y
		tcs 	[bak08],y
		tcs 	[fwd08],Y

		.echo **FAIL  TCS  pcr

		tcs 	:+
		tcs 	-
		tcs 	+
		tcs 	:-

		.echo **FAIL  TCS  sr

		tcs 	$12,S
		tcs 	bak08,s
		tcs 	fwd08,S

		.echo **FAIL  TCS  sriy

		tcs 	($12,s),Y
		tcs 	(bak08,S),y
		tcs 	(fwd08,s),Y

		.echo **FAIL  TCS  zp

		tcs 	$12
		tcs 	bak08
		tcs 	fwd08

		.echo **FAIL  TCS  zpi

		tcs 	($12)
		tcs 	(bak08)
		tcs 	(fwd08)

		.echo **FAIL  TCS  zpiy

		tcs 	($12),Y
		tcs 	(bak08),y
		tcs 	(fwd08),Y

		.echo **FAIL  TCS  zpx

		tcs 	$12,X
		tcs 	bak08,x
		tcs 	fwd08,X

		.echo **FAIL  TCS  zpxi

		tcs 	($12,X)
		tcs 	(bak08,x)
		tcs 	(fwd08,X)

		.echo **FAIL  TCS  zpy

		tcs 	$12,Y
		tcs 	bak08,y
		tcs 	fwd08,Y


:	; forward ref for TCS

; -------------------------------

:	; backward ref for TDA

		.echo **FAIL  TDA  ab

		tda 	$1234
		tda 	bak16
		tda 	fwd16

		.echo **FAIL  TDA  abi

		tda 	($1234)
		tda 	(bak16)
		tda 	(fwd16)

		.echo **FAIL  TDA  abx

		tda 	$1234,X
		tda 	bak16,x
		tda 	fwd16,X

		.echo **FAIL  TDA  abxi

		tda 	($1234,X)
		tda 	(bak16,x)
		tda 	(fwd16,X)

		.echo **FAIL  TDA  aby

		tda 	$1234,Y
		tda 	bak16,y
		tda 	fwd16,Y

		.echo **FAIL  TDA  acc

		tda 	A
		tda 	a

		.echo **FAIL  TDA  bmv

		tda 	#$12, #$34
		tda 	#bak08, #fwd08
		tda 	$123456, $789ABC
		tda 	bak24, fwd24

		.echo **FAIL  TDA  imm

		tda 	#$12
		tda 	#bak08
		tda 	#fwd08

		.echo **PASS  TDA  imp

		TDA 

		.echo **FAIL  TDA  lab

		tda 	$123456
		tda 	bak24
		tda 	fwd24

		.echo **FAIL  TDA  labi

		tda 	[$123456]
		tda 	[bak24]
		tda 	[fwd24]

		.echo **FAIL  TDA  labx

		tda 	$123456,X
		tda 	bak24,x
		tda 	fwd24,X

		.echo **FAIL  TDA  lpcr

		tda 	:+
		tda 	-
		tda 	+
		tda 	:-

		.echo **FAIL  TDA  lzpi

		tda 	[$12]
		tda 	[bak08]
		tda 	[fwd08]

		.echo **FAIL  TDA  lzpiy

		tda 	[$12],Y
		tda 	[bak08],y
		tda 	[fwd08],Y

		.echo **FAIL  TDA  pcr

		tda 	:+
		tda 	-
		tda 	+
		tda 	:-

		.echo **FAIL  TDA  sr

		tda 	$12,S
		tda 	bak08,s
		tda 	fwd08,S

		.echo **FAIL  TDA  sriy

		tda 	($12,s),Y
		tda 	(bak08,S),y
		tda 	(fwd08,s),Y

		.echo **FAIL  TDA  zp

		tda 	$12
		tda 	bak08
		tda 	fwd08

		.echo **FAIL  TDA  zpi

		tda 	($12)
		tda 	(bak08)
		tda 	(fwd08)

		.echo **FAIL  TDA  zpiy

		tda 	($12),Y
		tda 	(bak08),y
		tda 	(fwd08),Y

		.echo **FAIL  TDA  zpx

		tda 	$12,X
		tda 	bak08,x
		tda 	fwd08,X

		.echo **FAIL  TDA  zpxi

		tda 	($12,X)
		tda 	(bak08,x)
		tda 	(fwd08,X)

		.echo **FAIL  TDA  zpy

		tda 	$12,Y
		tda 	bak08,y
		tda 	fwd08,Y


:	; forward ref for TDA

; -------------------------------

:	; backward ref for TDC

		.echo **FAIL  TDC  ab

		tdc 	$1234
		tdc 	bak16
		tdc 	fwd16

		.echo **FAIL  TDC  abi

		tdc 	($1234)
		tdc 	(bak16)
		tdc 	(fwd16)

		.echo **FAIL  TDC  abx

		tdc 	$1234,X
		tdc 	bak16,x
		tdc 	fwd16,X

		.echo **FAIL  TDC  abxi

		tdc 	($1234,X)
		tdc 	(bak16,x)
		tdc 	(fwd16,X)

		.echo **FAIL  TDC  aby

		tdc 	$1234,Y
		tdc 	bak16,y
		tdc 	fwd16,Y

		.echo **FAIL  TDC  acc

		tdc 	A
		tdc 	a

		.echo **FAIL  TDC  bmv

		tdc 	#$12, #$34
		tdc 	#bak08, #fwd08
		tdc 	$123456, $789ABC
		tdc 	bak24, fwd24

		.echo **FAIL  TDC  imm

		tdc 	#$12
		tdc 	#bak08
		tdc 	#fwd08

		.echo **PASS  TDC  imp

		TDC 

		.echo **FAIL  TDC  lab

		tdc 	$123456
		tdc 	bak24
		tdc 	fwd24

		.echo **FAIL  TDC  labi

		tdc 	[$123456]
		tdc 	[bak24]
		tdc 	[fwd24]

		.echo **FAIL  TDC  labx

		tdc 	$123456,X
		tdc 	bak24,x
		tdc 	fwd24,X

		.echo **FAIL  TDC  lpcr

		tdc 	:+
		tdc 	-
		tdc 	+
		tdc 	:-

		.echo **FAIL  TDC  lzpi

		tdc 	[$12]
		tdc 	[bak08]
		tdc 	[fwd08]

		.echo **FAIL  TDC  lzpiy

		tdc 	[$12],Y
		tdc 	[bak08],y
		tdc 	[fwd08],Y

		.echo **FAIL  TDC  pcr

		tdc 	:+
		tdc 	-
		tdc 	+
		tdc 	:-

		.echo **FAIL  TDC  sr

		tdc 	$12,S
		tdc 	bak08,s
		tdc 	fwd08,S

		.echo **FAIL  TDC  sriy

		tdc 	($12,s),Y
		tdc 	(bak08,S),y
		tdc 	(fwd08,s),Y

		.echo **FAIL  TDC  zp

		tdc 	$12
		tdc 	bak08
		tdc 	fwd08

		.echo **FAIL  TDC  zpi

		tdc 	($12)
		tdc 	(bak08)
		tdc 	(fwd08)

		.echo **FAIL  TDC  zpiy

		tdc 	($12),Y
		tdc 	(bak08),y
		tdc 	(fwd08),Y

		.echo **FAIL  TDC  zpx

		tdc 	$12,X
		tdc 	bak08,x
		tdc 	fwd08,X

		.echo **FAIL  TDC  zpxi

		tdc 	($12,X)
		tdc 	(bak08,x)
		tdc 	(fwd08,X)

		.echo **FAIL  TDC  zpy

		tdc 	$12,Y
		tdc 	bak08,y
		tdc 	fwd08,Y


:	; forward ref for TDC

; -------------------------------

:	; backward ref for TRB

		.echo **PASS  TRB  ab

		TRB 	$1234
		TRB 	bak16
		TRB 	fwd16

		.echo **FAIL  TRB  abi

		trb 	($1234)
		trb 	(bak16)
		trb 	(fwd16)

		.echo **FAIL  TRB  abx

		trb 	$1234,X
		trb 	bak16,x
		trb 	fwd16,X

		.echo **FAIL  TRB  abxi

		trb 	($1234,X)
		trb 	(bak16,x)
		trb 	(fwd16,X)

		.echo **FAIL  TRB  aby

		trb 	$1234,Y
		trb 	bak16,y
		trb 	fwd16,Y

		.echo **FAIL  TRB  acc

		trb 	A
		trb 	a

		.echo **FAIL  TRB  bmv

		trb 	#$12, #$34
		trb 	#bak08, #fwd08
		trb 	$123456, $789ABC
		trb 	bak24, fwd24

		.echo **FAIL  TRB  imm

		trb 	#$12
		trb 	#bak08
		trb 	#fwd08

		.echo **FAIL  TRB  imp

		trb 

		.echo **PASS  TRB  lab  (as ab)

		Trb 	$123456
		Trb 	bak24
		Trb 	fwd24

		.echo **FAIL  TRB  labi

		trb 	[$123456]
		trb 	[bak24]
		trb 	[fwd24]

		.echo **FAIL  TRB  labx

		trb 	$123456,X
		trb 	bak24,x
		trb 	fwd24,X

		.echo **PASS  TRB  lpcr  (as ab)

		Trb 	:+
		Trb 	-
		Trb 	+
		Trb 	:-

		.echo **FAIL  TRB  lzpi

		trb 	[$12]
		trb 	[bak08]
		trb 	[fwd08]

		.echo **FAIL  TRB  lzpiy

		trb 	[$12],Y
		trb 	[bak08],y
		trb 	[fwd08],Y

		.echo **PASS  TRB  pcr  (as ab)

		Trb 	:+
		Trb 	-
		Trb 	+
		Trb 	:-

		.echo **FAIL  TRB  sr

		trb 	$12,S
		trb 	bak08,s
		trb 	fwd08,S

		.echo **FAIL  TRB  sriy

		trb 	($12,s),Y
		trb 	(bak08,S),y
		trb 	(fwd08,s),Y

		.echo **PASS  TRB  zp

		TRB 	$12
		TRB 	bak08
		Trb 	fwd08   	; (absolute)

		.echo **FAIL  TRB  zpi

		trb 	($12)
		trb 	(bak08)
		trb 	(fwd08)

		.echo **FAIL  TRB  zpiy

		trb 	($12),Y
		trb 	(bak08),y
		trb 	(fwd08),Y

		.echo **FAIL  TRB  zpx

		trb 	$12,X
		trb 	bak08,x
		trb 	fwd08,X

		.echo **FAIL  TRB  zpxi

		trb 	($12,X)
		trb 	(bak08,x)
		trb 	(fwd08,X)

		.echo **FAIL  TRB  zpy

		trb 	$12,Y
		trb 	bak08,y
		trb 	fwd08,Y


:	; forward ref for TRB

; -------------------------------

:	; backward ref for TSA

		.echo **FAIL  TSA  ab

		tsa 	$1234
		tsa 	bak16
		tsa 	fwd16

		.echo **FAIL  TSA  abi

		tsa 	($1234)
		tsa 	(bak16)
		tsa 	(fwd16)

		.echo **FAIL  TSA  abx

		tsa 	$1234,X
		tsa 	bak16,x
		tsa 	fwd16,X

		.echo **FAIL  TSA  abxi

		tsa 	($1234,X)
		tsa 	(bak16,x)
		tsa 	(fwd16,X)

		.echo **FAIL  TSA  aby

		tsa 	$1234,Y
		tsa 	bak16,y
		tsa 	fwd16,Y

		.echo **FAIL  TSA  acc

		tsa 	A
		tsa 	a

		.echo **FAIL  TSA  bmv

		tsa 	#$12, #$34
		tsa 	#bak08, #fwd08
		tsa 	$123456, $789ABC
		tsa 	bak24, fwd24

		.echo **FAIL  TSA  imm

		tsa 	#$12
		tsa 	#bak08
		tsa 	#fwd08

		.echo **PASS  TSA  imp

		TSA 

		.echo **FAIL  TSA  lab

		tsa 	$123456
		tsa 	bak24
		tsa 	fwd24

		.echo **FAIL  TSA  labi

		tsa 	[$123456]
		tsa 	[bak24]
		tsa 	[fwd24]

		.echo **FAIL  TSA  labx

		tsa 	$123456,X
		tsa 	bak24,x
		tsa 	fwd24,X

		.echo **FAIL  TSA  lpcr

		tsa 	:+
		tsa 	-
		tsa 	+
		tsa 	:-

		.echo **FAIL  TSA  lzpi

		tsa 	[$12]
		tsa 	[bak08]
		tsa 	[fwd08]

		.echo **FAIL  TSA  lzpiy

		tsa 	[$12],Y
		tsa 	[bak08],y
		tsa 	[fwd08],Y

		.echo **FAIL  TSA  pcr

		tsa 	:+
		tsa 	-
		tsa 	+
		tsa 	:-

		.echo **FAIL  TSA  sr

		tsa 	$12,S
		tsa 	bak08,s
		tsa 	fwd08,S

		.echo **FAIL  TSA  sriy

		tsa 	($12,s),Y
		tsa 	(bak08,S),y
		tsa 	(fwd08,s),Y

		.echo **FAIL  TSA  zp

		tsa 	$12
		tsa 	bak08
		tsa 	fwd08

		.echo **FAIL  TSA  zpi

		tsa 	($12)
		tsa 	(bak08)
		tsa 	(fwd08)

		.echo **FAIL  TSA  zpiy

		tsa 	($12),Y
		tsa 	(bak08),y
		tsa 	(fwd08),Y

		.echo **FAIL  TSA  zpx

		tsa 	$12,X
		tsa 	bak08,x
		tsa 	fwd08,X

		.echo **FAIL  TSA  zpxi

		tsa 	($12,X)
		tsa 	(bak08,x)
		tsa 	(fwd08,X)

		.echo **FAIL  TSA  zpy

		tsa 	$12,Y
		tsa 	bak08,y
		tsa 	fwd08,Y


:	; forward ref for TSA

; -------------------------------

:	; backward ref for TSB

		.echo **PASS  TSB  ab

		TSB 	$1234
		TSB 	bak16
		TSB 	fwd16

		.echo **FAIL  TSB  abi

		tsb 	($1234)
		tsb 	(bak16)
		tsb 	(fwd16)

		.echo **FAIL  TSB  abx

		tsb 	$1234,X
		tsb 	bak16,x
		tsb 	fwd16,X

		.echo **FAIL  TSB  abxi

		tsb 	($1234,X)
		tsb 	(bak16,x)
		tsb 	(fwd16,X)

		.echo **FAIL  TSB  aby

		tsb 	$1234,Y
		tsb 	bak16,y
		tsb 	fwd16,Y

		.echo **FAIL  TSB  acc

		tsb 	A
		tsb 	a

		.echo **FAIL  TSB  bmv

		tsb 	#$12, #$34
		tsb 	#bak08, #fwd08
		tsb 	$123456, $789ABC
		tsb 	bak24, fwd24

		.echo **FAIL  TSB  imm

		tsb 	#$12
		tsb 	#bak08
		tsb 	#fwd08

		.echo **FAIL  TSB  imp

		tsb 

		.echo **PASS  TSB  lab  (as ab)

		Tsb 	$123456
		Tsb 	bak24
		Tsb 	fwd24

		.echo **FAIL  TSB  labi

		tsb 	[$123456]
		tsb 	[bak24]
		tsb 	[fwd24]

		.echo **FAIL  TSB  labx

		tsb 	$123456,X
		tsb 	bak24,x
		tsb 	fwd24,X

		.echo **PASS  TSB  lpcr  (as ab)

		Tsb 	:+
		Tsb 	-
		Tsb 	+
		Tsb 	:-

		.echo **FAIL  TSB  lzpi

		tsb 	[$12]
		tsb 	[bak08]
		tsb 	[fwd08]

		.echo **FAIL  TSB  lzpiy

		tsb 	[$12],Y
		tsb 	[bak08],y
		tsb 	[fwd08],Y

		.echo **PASS  TSB  pcr  (as ab)

		Tsb 	:+
		Tsb 	-
		Tsb 	+
		Tsb 	:-

		.echo **FAIL  TSB  sr

		tsb 	$12,S
		tsb 	bak08,s
		tsb 	fwd08,S

		.echo **FAIL  TSB  sriy

		tsb 	($12,s),Y
		tsb 	(bak08,S),y
		tsb 	(fwd08,s),Y

		.echo **PASS  TSB  zp

		TSB 	$12
		TSB 	bak08
		Tsb 	fwd08   	; (absolute)

		.echo **FAIL  TSB  zpi

		tsb 	($12)
		tsb 	(bak08)
		tsb 	(fwd08)

		.echo **FAIL  TSB  zpiy

		tsb 	($12),Y
		tsb 	(bak08),y
		tsb 	(fwd08),Y

		.echo **FAIL  TSB  zpx

		tsb 	$12,X
		tsb 	bak08,x
		tsb 	fwd08,X

		.echo **FAIL  TSB  zpxi

		tsb 	($12,X)
		tsb 	(bak08,x)
		tsb 	(fwd08,X)

		.echo **FAIL  TSB  zpy

		tsb 	$12,Y
		tsb 	bak08,y
		tsb 	fwd08,Y


:	; forward ref for TSB

; -------------------------------

:	; backward ref for TSC

		.echo **FAIL  TSC  ab

		tsc 	$1234
		tsc 	bak16
		tsc 	fwd16

		.echo **FAIL  TSC  abi

		tsc 	($1234)
		tsc 	(bak16)
		tsc 	(fwd16)

		.echo **FAIL  TSC  abx

		tsc 	$1234,X
		tsc 	bak16,x
		tsc 	fwd16,X

		.echo **FAIL  TSC  abxi

		tsc 	($1234,X)
		tsc 	(bak16,x)
		tsc 	(fwd16,X)

		.echo **FAIL  TSC  aby

		tsc 	$1234,Y
		tsc 	bak16,y
		tsc 	fwd16,Y

		.echo **FAIL  TSC  acc

		tsc 	A
		tsc 	a

		.echo **FAIL  TSC  bmv

		tsc 	#$12, #$34
		tsc 	#bak08, #fwd08
		tsc 	$123456, $789ABC
		tsc 	bak24, fwd24

		.echo **FAIL  TSC  imm

		tsc 	#$12
		tsc 	#bak08
		tsc 	#fwd08

		.echo **PASS  TSC  imp

		TSC 

		.echo **FAIL  TSC  lab

		tsc 	$123456
		tsc 	bak24
		tsc 	fwd24

		.echo **FAIL  TSC  labi

		tsc 	[$123456]
		tsc 	[bak24]
		tsc 	[fwd24]

		.echo **FAIL  TSC  labx

		tsc 	$123456,X
		tsc 	bak24,x
		tsc 	fwd24,X

		.echo **FAIL  TSC  lpcr

		tsc 	:+
		tsc 	-
		tsc 	+
		tsc 	:-

		.echo **FAIL  TSC  lzpi

		tsc 	[$12]
		tsc 	[bak08]
		tsc 	[fwd08]

		.echo **FAIL  TSC  lzpiy

		tsc 	[$12],Y
		tsc 	[bak08],y
		tsc 	[fwd08],Y

		.echo **FAIL  TSC  pcr

		tsc 	:+
		tsc 	-
		tsc 	+
		tsc 	:-

		.echo **FAIL  TSC  sr

		tsc 	$12,S
		tsc 	bak08,s
		tsc 	fwd08,S

		.echo **FAIL  TSC  sriy

		tsc 	($12,s),Y
		tsc 	(bak08,S),y
		tsc 	(fwd08,s),Y

		.echo **FAIL  TSC  zp

		tsc 	$12
		tsc 	bak08
		tsc 	fwd08

		.echo **FAIL  TSC  zpi

		tsc 	($12)
		tsc 	(bak08)
		tsc 	(fwd08)

		.echo **FAIL  TSC  zpiy

		tsc 	($12),Y
		tsc 	(bak08),y
		tsc 	(fwd08),Y

		.echo **FAIL  TSC  zpx

		tsc 	$12,X
		tsc 	bak08,x
		tsc 	fwd08,X

		.echo **FAIL  TSC  zpxi

		tsc 	($12,X)
		tsc 	(bak08,x)
		tsc 	(fwd08,X)

		.echo **FAIL  TSC  zpy

		tsc 	$12,Y
		tsc 	bak08,y
		tsc 	fwd08,Y


:	; forward ref for TSC

; -------------------------------

:	; backward ref for TSX

		.echo **FAIL  TSX  ab

		tsx 	$1234
		tsx 	bak16
		tsx 	fwd16

		.echo **FAIL  TSX  abi

		tsx 	($1234)
		tsx 	(bak16)
		tsx 	(fwd16)

		.echo **FAIL  TSX  abx

		tsx 	$1234,X
		tsx 	bak16,x
		tsx 	fwd16,X

		.echo **FAIL  TSX  abxi

		tsx 	($1234,X)
		tsx 	(bak16,x)
		tsx 	(fwd16,X)

		.echo **FAIL  TSX  aby

		tsx 	$1234,Y
		tsx 	bak16,y
		tsx 	fwd16,Y

		.echo **FAIL  TSX  acc

		tsx 	A
		tsx 	a

		.echo **FAIL  TSX  bmv

		tsx 	#$12, #$34
		tsx 	#bak08, #fwd08
		tsx 	$123456, $789ABC
		tsx 	bak24, fwd24

		.echo **FAIL  TSX  imm

		tsx 	#$12
		tsx 	#bak08
		tsx 	#fwd08

		.echo **PASS  TSX  imp

		TSX 

		.echo **FAIL  TSX  lab

		tsx 	$123456
		tsx 	bak24
		tsx 	fwd24

		.echo **FAIL  TSX  labi

		tsx 	[$123456]
		tsx 	[bak24]
		tsx 	[fwd24]

		.echo **FAIL  TSX  labx

		tsx 	$123456,X
		tsx 	bak24,x
		tsx 	fwd24,X

		.echo **FAIL  TSX  lpcr

		tsx 	:+
		tsx 	-
		tsx 	+
		tsx 	:-

		.echo **FAIL  TSX  lzpi

		tsx 	[$12]
		tsx 	[bak08]
		tsx 	[fwd08]

		.echo **FAIL  TSX  lzpiy

		tsx 	[$12],Y
		tsx 	[bak08],y
		tsx 	[fwd08],Y

		.echo **FAIL  TSX  pcr

		tsx 	:+
		tsx 	-
		tsx 	+
		tsx 	:-

		.echo **FAIL  TSX  sr

		tsx 	$12,S
		tsx 	bak08,s
		tsx 	fwd08,S

		.echo **FAIL  TSX  sriy

		tsx 	($12,s),Y
		tsx 	(bak08,S),y
		tsx 	(fwd08,s),Y

		.echo **FAIL  TSX  zp

		tsx 	$12
		tsx 	bak08
		tsx 	fwd08

		.echo **FAIL  TSX  zpi

		tsx 	($12)
		tsx 	(bak08)
		tsx 	(fwd08)

		.echo **FAIL  TSX  zpiy

		tsx 	($12),Y
		tsx 	(bak08),y
		tsx 	(fwd08),Y

		.echo **FAIL  TSX  zpx

		tsx 	$12,X
		tsx 	bak08,x
		tsx 	fwd08,X

		.echo **FAIL  TSX  zpxi

		tsx 	($12,X)
		tsx 	(bak08,x)
		tsx 	(fwd08,X)

		.echo **FAIL  TSX  zpy

		tsx 	$12,Y
		tsx 	bak08,y
		tsx 	fwd08,Y


:	; forward ref for TSX

; -------------------------------

:	; backward ref for TXA

		.echo **FAIL  TXA  ab

		txa 	$1234
		txa 	bak16
		txa 	fwd16

		.echo **FAIL  TXA  abi

		txa 	($1234)
		txa 	(bak16)
		txa 	(fwd16)

		.echo **FAIL  TXA  abx

		txa 	$1234,X
		txa 	bak16,x
		txa 	fwd16,X

		.echo **FAIL  TXA  abxi

		txa 	($1234,X)
		txa 	(bak16,x)
		txa 	(fwd16,X)

		.echo **FAIL  TXA  aby

		txa 	$1234,Y
		txa 	bak16,y
		txa 	fwd16,Y

		.echo **FAIL  TXA  acc

		txa 	A
		txa 	a

		.echo **FAIL  TXA  bmv

		txa 	#$12, #$34
		txa 	#bak08, #fwd08
		txa 	$123456, $789ABC
		txa 	bak24, fwd24

		.echo **FAIL  TXA  imm

		txa 	#$12
		txa 	#bak08
		txa 	#fwd08

		.echo **PASS  TXA  imp

		TXA 

		.echo **FAIL  TXA  lab

		txa 	$123456
		txa 	bak24
		txa 	fwd24

		.echo **FAIL  TXA  labi

		txa 	[$123456]
		txa 	[bak24]
		txa 	[fwd24]

		.echo **FAIL  TXA  labx

		txa 	$123456,X
		txa 	bak24,x
		txa 	fwd24,X

		.echo **FAIL  TXA  lpcr

		txa 	:+
		txa 	-
		txa 	+
		txa 	:-

		.echo **FAIL  TXA  lzpi

		txa 	[$12]
		txa 	[bak08]
		txa 	[fwd08]

		.echo **FAIL  TXA  lzpiy

		txa 	[$12],Y
		txa 	[bak08],y
		txa 	[fwd08],Y

		.echo **FAIL  TXA  pcr

		txa 	:+
		txa 	-
		txa 	+
		txa 	:-

		.echo **FAIL  TXA  sr

		txa 	$12,S
		txa 	bak08,s
		txa 	fwd08,S

		.echo **FAIL  TXA  sriy

		txa 	($12,s),Y
		txa 	(bak08,S),y
		txa 	(fwd08,s),Y

		.echo **FAIL  TXA  zp

		txa 	$12
		txa 	bak08
		txa 	fwd08

		.echo **FAIL  TXA  zpi

		txa 	($12)
		txa 	(bak08)
		txa 	(fwd08)

		.echo **FAIL  TXA  zpiy

		txa 	($12),Y
		txa 	(bak08),y
		txa 	(fwd08),Y

		.echo **FAIL  TXA  zpx

		txa 	$12,X
		txa 	bak08,x
		txa 	fwd08,X

		.echo **FAIL  TXA  zpxi

		txa 	($12,X)
		txa 	(bak08,x)
		txa 	(fwd08,X)

		.echo **FAIL  TXA  zpy

		txa 	$12,Y
		txa 	bak08,y
		txa 	fwd08,Y


:	; forward ref for TXA

; -------------------------------

:	; backward ref for TXS

		.echo **FAIL  TXS  ab

		txs 	$1234
		txs 	bak16
		txs 	fwd16

		.echo **FAIL  TXS  abi

		txs 	($1234)
		txs 	(bak16)
		txs 	(fwd16)

		.echo **FAIL  TXS  abx

		txs 	$1234,X
		txs 	bak16,x
		txs 	fwd16,X

		.echo **FAIL  TXS  abxi

		txs 	($1234,X)
		txs 	(bak16,x)
		txs 	(fwd16,X)

		.echo **FAIL  TXS  aby

		txs 	$1234,Y
		txs 	bak16,y
		txs 	fwd16,Y

		.echo **FAIL  TXS  acc

		txs 	A
		txs 	a

		.echo **FAIL  TXS  bmv

		txs 	#$12, #$34
		txs 	#bak08, #fwd08
		txs 	$123456, $789ABC
		txs 	bak24, fwd24

		.echo **FAIL  TXS  imm

		txs 	#$12
		txs 	#bak08
		txs 	#fwd08

		.echo **PASS  TXS  imp

		TXS 

		.echo **FAIL  TXS  lab

		txs 	$123456
		txs 	bak24
		txs 	fwd24

		.echo **FAIL  TXS  labi

		txs 	[$123456]
		txs 	[bak24]
		txs 	[fwd24]

		.echo **FAIL  TXS  labx

		txs 	$123456,X
		txs 	bak24,x
		txs 	fwd24,X

		.echo **FAIL  TXS  lpcr

		txs 	:+
		txs 	-
		txs 	+
		txs 	:-

		.echo **FAIL  TXS  lzpi

		txs 	[$12]
		txs 	[bak08]
		txs 	[fwd08]

		.echo **FAIL  TXS  lzpiy

		txs 	[$12],Y
		txs 	[bak08],y
		txs 	[fwd08],Y

		.echo **FAIL  TXS  pcr

		txs 	:+
		txs 	-
		txs 	+
		txs 	:-

		.echo **FAIL  TXS  sr

		txs 	$12,S
		txs 	bak08,s
		txs 	fwd08,S

		.echo **FAIL  TXS  sriy

		txs 	($12,s),Y
		txs 	(bak08,S),y
		txs 	(fwd08,s),Y

		.echo **FAIL  TXS  zp

		txs 	$12
		txs 	bak08
		txs 	fwd08

		.echo **FAIL  TXS  zpi

		txs 	($12)
		txs 	(bak08)
		txs 	(fwd08)

		.echo **FAIL  TXS  zpiy

		txs 	($12),Y
		txs 	(bak08),y
		txs 	(fwd08),Y

		.echo **FAIL  TXS  zpx

		txs 	$12,X
		txs 	bak08,x
		txs 	fwd08,X

		.echo **FAIL  TXS  zpxi

		txs 	($12,X)
		txs 	(bak08,x)
		txs 	(fwd08,X)

		.echo **FAIL  TXS  zpy

		txs 	$12,Y
		txs 	bak08,y
		txs 	fwd08,Y


:	; forward ref for TXS

; -------------------------------

:	; backward ref for TXY

		.echo **FAIL  TXY  ab

		txy 	$1234
		txy 	bak16
		txy 	fwd16

		.echo **FAIL  TXY  abi

		txy 	($1234)
		txy 	(bak16)
		txy 	(fwd16)

		.echo **FAIL  TXY  abx

		txy 	$1234,X
		txy 	bak16,x
		txy 	fwd16,X

		.echo **FAIL  TXY  abxi

		txy 	($1234,X)
		txy 	(bak16,x)
		txy 	(fwd16,X)

		.echo **FAIL  TXY  aby

		txy 	$1234,Y
		txy 	bak16,y
		txy 	fwd16,Y

		.echo **FAIL  TXY  acc

		txy 	A
		txy 	a

		.echo **FAIL  TXY  bmv

		txy 	#$12, #$34
		txy 	#bak08, #fwd08
		txy 	$123456, $789ABC
		txy 	bak24, fwd24

		.echo **FAIL  TXY  imm

		txy 	#$12
		txy 	#bak08
		txy 	#fwd08

		.echo **PASS  TXY  imp

		TXY 

		.echo **FAIL  TXY  lab

		txy 	$123456
		txy 	bak24
		txy 	fwd24

		.echo **FAIL  TXY  labi

		txy 	[$123456]
		txy 	[bak24]
		txy 	[fwd24]

		.echo **FAIL  TXY  labx

		txy 	$123456,X
		txy 	bak24,x
		txy 	fwd24,X

		.echo **FAIL  TXY  lpcr

		txy 	:+
		txy 	-
		txy 	+
		txy 	:-

		.echo **FAIL  TXY  lzpi

		txy 	[$12]
		txy 	[bak08]
		txy 	[fwd08]

		.echo **FAIL  TXY  lzpiy

		txy 	[$12],Y
		txy 	[bak08],y
		txy 	[fwd08],Y

		.echo **FAIL  TXY  pcr

		txy 	:+
		txy 	-
		txy 	+
		txy 	:-

		.echo **FAIL  TXY  sr

		txy 	$12,S
		txy 	bak08,s
		txy 	fwd08,S

		.echo **FAIL  TXY  sriy

		txy 	($12,s),Y
		txy 	(bak08,S),y
		txy 	(fwd08,s),Y

		.echo **FAIL  TXY  zp

		txy 	$12
		txy 	bak08
		txy 	fwd08

		.echo **FAIL  TXY  zpi

		txy 	($12)
		txy 	(bak08)
		txy 	(fwd08)

		.echo **FAIL  TXY  zpiy

		txy 	($12),Y
		txy 	(bak08),y
		txy 	(fwd08),Y

		.echo **FAIL  TXY  zpx

		txy 	$12,X
		txy 	bak08,x
		txy 	fwd08,X

		.echo **FAIL  TXY  zpxi

		txy 	($12,X)
		txy 	(bak08,x)
		txy 	(fwd08,X)

		.echo **FAIL  TXY  zpy

		txy 	$12,Y
		txy 	bak08,y
		txy 	fwd08,Y


:	; forward ref for TXY

; -------------------------------

:	; backward ref for TYA

		.echo **FAIL  TYA  ab

		tya 	$1234
		tya 	bak16
		tya 	fwd16

		.echo **FAIL  TYA  abi

		tya 	($1234)
		tya 	(bak16)
		tya 	(fwd16)

		.echo **FAIL  TYA  abx

		tya 	$1234,X
		tya 	bak16,x
		tya 	fwd16,X

		.echo **FAIL  TYA  abxi

		tya 	($1234,X)
		tya 	(bak16,x)
		tya 	(fwd16,X)

		.echo **FAIL  TYA  aby

		tya 	$1234,Y
		tya 	bak16,y
		tya 	fwd16,Y

		.echo **FAIL  TYA  acc

		tya 	A
		tya 	a

		.echo **FAIL  TYA  bmv

		tya 	#$12, #$34
		tya 	#bak08, #fwd08
		tya 	$123456, $789ABC
		tya 	bak24, fwd24

		.echo **FAIL  TYA  imm

		tya 	#$12
		tya 	#bak08
		tya 	#fwd08

		.echo **PASS  TYA  imp

		TYA 

		.echo **FAIL  TYA  lab

		tya 	$123456
		tya 	bak24
		tya 	fwd24

		.echo **FAIL  TYA  labi

		tya 	[$123456]
		tya 	[bak24]
		tya 	[fwd24]

		.echo **FAIL  TYA  labx

		tya 	$123456,X
		tya 	bak24,x
		tya 	fwd24,X

		.echo **FAIL  TYA  lpcr

		tya 	:+
		tya 	-
		tya 	+
		tya 	:-

		.echo **FAIL  TYA  lzpi

		tya 	[$12]
		tya 	[bak08]
		tya 	[fwd08]

		.echo **FAIL  TYA  lzpiy

		tya 	[$12],Y
		tya 	[bak08],y
		tya 	[fwd08],Y

		.echo **FAIL  TYA  pcr

		tya 	:+
		tya 	-
		tya 	+
		tya 	:-

		.echo **FAIL  TYA  sr

		tya 	$12,S
		tya 	bak08,s
		tya 	fwd08,S

		.echo **FAIL  TYA  sriy

		tya 	($12,s),Y
		tya 	(bak08,S),y
		tya 	(fwd08,s),Y

		.echo **FAIL  TYA  zp

		tya 	$12
		tya 	bak08
		tya 	fwd08

		.echo **FAIL  TYA  zpi

		tya 	($12)
		tya 	(bak08)
		tya 	(fwd08)

		.echo **FAIL  TYA  zpiy

		tya 	($12),Y
		tya 	(bak08),y
		tya 	(fwd08),Y

		.echo **FAIL  TYA  zpx

		tya 	$12,X
		tya 	bak08,x
		tya 	fwd08,X

		.echo **FAIL  TYA  zpxi

		tya 	($12,X)
		tya 	(bak08,x)
		tya 	(fwd08,X)

		.echo **FAIL  TYA  zpy

		tya 	$12,Y
		tya 	bak08,y
		tya 	fwd08,Y


:	; forward ref for TYA

; -------------------------------

:	; backward ref for TYX

		.echo **FAIL  TYX  ab

		tyx 	$1234
		tyx 	bak16
		tyx 	fwd16

		.echo **FAIL  TYX  abi

		tyx 	($1234)
		tyx 	(bak16)
		tyx 	(fwd16)

		.echo **FAIL  TYX  abx

		tyx 	$1234,X
		tyx 	bak16,x
		tyx 	fwd16,X

		.echo **FAIL  TYX  abxi

		tyx 	($1234,X)
		tyx 	(bak16,x)
		tyx 	(fwd16,X)

		.echo **FAIL  TYX  aby

		tyx 	$1234,Y
		tyx 	bak16,y
		tyx 	fwd16,Y

		.echo **FAIL  TYX  acc

		tyx 	A
		tyx 	a

		.echo **FAIL  TYX  bmv

		tyx 	#$12, #$34
		tyx 	#bak08, #fwd08
		tyx 	$123456, $789ABC
		tyx 	bak24, fwd24

		.echo **FAIL  TYX  imm

		tyx 	#$12
		tyx 	#bak08
		tyx 	#fwd08

		.echo **PASS  TYX  imp

		TYX 

		.echo **FAIL  TYX  lab

		tyx 	$123456
		tyx 	bak24
		tyx 	fwd24

		.echo **FAIL  TYX  labi

		tyx 	[$123456]
		tyx 	[bak24]
		tyx 	[fwd24]

		.echo **FAIL  TYX  labx

		tyx 	$123456,X
		tyx 	bak24,x
		tyx 	fwd24,X

		.echo **FAIL  TYX  lpcr

		tyx 	:+
		tyx 	-
		tyx 	+
		tyx 	:-

		.echo **FAIL  TYX  lzpi

		tyx 	[$12]
		tyx 	[bak08]
		tyx 	[fwd08]

		.echo **FAIL  TYX  lzpiy

		tyx 	[$12],Y
		tyx 	[bak08],y
		tyx 	[fwd08],Y

		.echo **FAIL  TYX  pcr

		tyx 	:+
		tyx 	-
		tyx 	+
		tyx 	:-

		.echo **FAIL  TYX  sr

		tyx 	$12,S
		tyx 	bak08,s
		tyx 	fwd08,S

		.echo **FAIL  TYX  sriy

		tyx 	($12,s),Y
		tyx 	(bak08,S),y
		tyx 	(fwd08,s),Y

		.echo **FAIL  TYX  zp

		tyx 	$12
		tyx 	bak08
		tyx 	fwd08

		.echo **FAIL  TYX  zpi

		tyx 	($12)
		tyx 	(bak08)
		tyx 	(fwd08)

		.echo **FAIL  TYX  zpiy

		tyx 	($12),Y
		tyx 	(bak08),y
		tyx 	(fwd08),Y

		.echo **FAIL  TYX  zpx

		tyx 	$12,X
		tyx 	bak08,x
		tyx 	fwd08,X

		.echo **FAIL  TYX  zpxi

		tyx 	($12,X)
		tyx 	(bak08,x)
		tyx 	(fwd08,X)

		.echo **FAIL  TYX  zpy

		tyx 	$12,Y
		tyx 	bak08,y
		tyx 	fwd08,Y


:	; forward ref for TYX

; -------------------------------

:	; backward ref for WAI

		.echo **FAIL  WAI  ab

		wai 	$1234
		wai 	bak16
		wai 	fwd16

		.echo **FAIL  WAI  abi

		wai 	($1234)
		wai 	(bak16)
		wai 	(fwd16)

		.echo **FAIL  WAI  abx

		wai 	$1234,X
		wai 	bak16,x
		wai 	fwd16,X

		.echo **FAIL  WAI  abxi

		wai 	($1234,X)
		wai 	(bak16,x)
		wai 	(fwd16,X)

		.echo **FAIL  WAI  aby

		wai 	$1234,Y
		wai 	bak16,y
		wai 	fwd16,Y

		.echo **FAIL  WAI  acc

		wai 	A
		wai 	a

		.echo **FAIL  WAI  bmv

		wai 	#$12, #$34
		wai 	#bak08, #fwd08
		wai 	$123456, $789ABC
		wai 	bak24, fwd24

		.echo **FAIL  WAI  imm

		wai 	#$12
		wai 	#bak08
		wai 	#fwd08

		.echo **PASS  WAI  imp

		WAI 

		.echo **FAIL  WAI  lab

		wai 	$123456
		wai 	bak24
		wai 	fwd24

		.echo **FAIL  WAI  labi

		wai 	[$123456]
		wai 	[bak24]
		wai 	[fwd24]

		.echo **FAIL  WAI  labx

		wai 	$123456,X
		wai 	bak24,x
		wai 	fwd24,X

		.echo **FAIL  WAI  lpcr

		wai 	:+
		wai 	-
		wai 	+
		wai 	:-

		.echo **FAIL  WAI  lzpi

		wai 	[$12]
		wai 	[bak08]
		wai 	[fwd08]

		.echo **FAIL  WAI  lzpiy

		wai 	[$12],Y
		wai 	[bak08],y
		wai 	[fwd08],Y

		.echo **FAIL  WAI  pcr

		wai 	:+
		wai 	-
		wai 	+
		wai 	:-

		.echo **FAIL  WAI  sr

		wai 	$12,S
		wai 	bak08,s
		wai 	fwd08,S

		.echo **FAIL  WAI  sriy

		wai 	($12,s),Y
		wai 	(bak08,S),y
		wai 	(fwd08,s),Y

		.echo **FAIL  WAI  zp

		wai 	$12
		wai 	bak08
		wai 	fwd08

		.echo **FAIL  WAI  zpi

		wai 	($12)
		wai 	(bak08)
		wai 	(fwd08)

		.echo **FAIL  WAI  zpiy

		wai 	($12),Y
		wai 	(bak08),y
		wai 	(fwd08),Y

		.echo **FAIL  WAI  zpx

		wai 	$12,X
		wai 	bak08,x
		wai 	fwd08,X

		.echo **FAIL  WAI  zpxi

		wai 	($12,X)
		wai 	(bak08,x)
		wai 	(fwd08,X)

		.echo **FAIL  WAI  zpy

		wai 	$12,Y
		wai 	bak08,y
		wai 	fwd08,Y


:	; forward ref for WAI

; -------------------------------

:	; backward ref for WDM

		.echo **PASS  WDM  ab  (as zp)

		Wdm 	$1234
		Wdm 	bak16
		Wdm 	fwd16

		.echo **FAIL  WDM  abi

		wdm 	($1234)
		wdm 	(bak16)
		wdm 	(fwd16)

		.echo **FAIL  WDM  abx

		wdm 	$1234,X
		wdm 	bak16,x
		wdm 	fwd16,X

		.echo **FAIL  WDM  abxi

		wdm 	($1234,X)
		wdm 	(bak16,x)
		wdm 	(fwd16,X)

		.echo **FAIL  WDM  aby

		wdm 	$1234,Y
		wdm 	bak16,y
		wdm 	fwd16,Y

		.echo **FAIL  WDM  acc

		wdm 	A
		wdm 	a

		.echo **FAIL  WDM  bmv

		wdm 	#$12, #$34
		wdm 	#bak08, #fwd08
		wdm 	$123456, $789ABC
		wdm 	bak24, fwd24

		.echo **PASS  WDM  imm

		WDM 	#$12
		WDM 	#bak08
		WDM 	#fwd08

		.echo **PASS  WDM  imp

		WDM 

		.echo **PASS  WDM  lab  (as zp)

		Wdm 	$123456
		Wdm 	bak24
		Wdm 	fwd24

		.echo **FAIL  WDM  labi

		wdm 	[$123456]
		wdm 	[bak24]
		wdm 	[fwd24]

		.echo **FAIL  WDM  labx

		wdm 	$123456,X
		wdm 	bak24,x
		wdm 	fwd24,X

		.echo **PASS  WDM  lpcr  (as zp)

		Wdm 	:+
		Wdm 	-
		Wdm 	+
		Wdm 	:-

		.echo **FAIL  WDM  lzpi

		wdm 	[$12]
		wdm 	[bak08]
		wdm 	[fwd08]

		.echo **FAIL  WDM  lzpiy

		wdm 	[$12],Y
		wdm 	[bak08],y
		wdm 	[fwd08],Y

		.echo **PASS  WDM  pcr  (as zp)

		Wdm 	:+
		Wdm 	-
		Wdm 	+
		Wdm 	:-

		.echo **FAIL  WDM  sr

		wdm 	$12,S
		wdm 	bak08,s
		wdm 	fwd08,S

		.echo **FAIL  WDM  sriy

		wdm 	($12,s),Y
		wdm 	(bak08,S),y
		wdm 	(fwd08,s),Y

		.echo **PASS  WDM  zp

		WDM 	$12
		WDM 	bak08
		WDM 	fwd08

		.echo **FAIL  WDM  zpi

		wdm 	($12)
		wdm 	(bak08)
		wdm 	(fwd08)

		.echo **FAIL  WDM  zpiy

		wdm 	($12),Y
		wdm 	(bak08),y
		wdm 	(fwd08),Y

		.echo **FAIL  WDM  zpx

		wdm 	$12,X
		wdm 	bak08,x
		wdm 	fwd08,X

		.echo **FAIL  WDM  zpxi

		wdm 	($12,X)
		wdm 	(bak08,x)
		wdm 	(fwd08,X)

		.echo **FAIL  WDM  zpy

		wdm 	$12,Y
		wdm 	bak08,y
		wdm 	fwd08,Y


:	; forward ref for WDM

; -------------------------------

:	; backward ref for XBA

		.echo **FAIL  XBA  ab

		xba 	$1234
		xba 	bak16
		xba 	fwd16

		.echo **FAIL  XBA  abi

		xba 	($1234)
		xba 	(bak16)
		xba 	(fwd16)

		.echo **FAIL  XBA  abx

		xba 	$1234,X
		xba 	bak16,x
		xba 	fwd16,X

		.echo **FAIL  XBA  abxi

		xba 	($1234,X)
		xba 	(bak16,x)
		xba 	(fwd16,X)

		.echo **FAIL  XBA  aby

		xba 	$1234,Y
		xba 	bak16,y
		xba 	fwd16,Y

		.echo **FAIL  XBA  acc

		xba 	A
		xba 	a

		.echo **FAIL  XBA  bmv

		xba 	#$12, #$34
		xba 	#bak08, #fwd08
		xba 	$123456, $789ABC
		xba 	bak24, fwd24

		.echo **FAIL  XBA  imm

		xba 	#$12
		xba 	#bak08
		xba 	#fwd08

		.echo **PASS  XBA  imp

		XBA 

		.echo **FAIL  XBA  lab

		xba 	$123456
		xba 	bak24
		xba 	fwd24

		.echo **FAIL  XBA  labi

		xba 	[$123456]
		xba 	[bak24]
		xba 	[fwd24]

		.echo **FAIL  XBA  labx

		xba 	$123456,X
		xba 	bak24,x
		xba 	fwd24,X

		.echo **FAIL  XBA  lpcr

		xba 	:+
		xba 	-
		xba 	+
		xba 	:-

		.echo **FAIL  XBA  lzpi

		xba 	[$12]
		xba 	[bak08]
		xba 	[fwd08]

		.echo **FAIL  XBA  lzpiy

		xba 	[$12],Y
		xba 	[bak08],y
		xba 	[fwd08],Y

		.echo **FAIL  XBA  pcr

		xba 	:+
		xba 	-
		xba 	+
		xba 	:-

		.echo **FAIL  XBA  sr

		xba 	$12,S
		xba 	bak08,s
		xba 	fwd08,S

		.echo **FAIL  XBA  sriy

		xba 	($12,s),Y
		xba 	(bak08,S),y
		xba 	(fwd08,s),Y

		.echo **FAIL  XBA  zp

		xba 	$12
		xba 	bak08
		xba 	fwd08

		.echo **FAIL  XBA  zpi

		xba 	($12)
		xba 	(bak08)
		xba 	(fwd08)

		.echo **FAIL  XBA  zpiy

		xba 	($12),Y
		xba 	(bak08),y
		xba 	(fwd08),Y

		.echo **FAIL  XBA  zpx

		xba 	$12,X
		xba 	bak08,x
		xba 	fwd08,X

		.echo **FAIL  XBA  zpxi

		xba 	($12,X)
		xba 	(bak08,x)
		xba 	(fwd08,X)

		.echo **FAIL  XBA  zpy

		xba 	$12,Y
		xba 	bak08,y
		xba 	fwd08,Y


:	; forward ref for XBA

; -------------------------------

:	; backward ref for XCE

		.echo **FAIL  XCE  ab

		xce 	$1234
		xce 	bak16
		xce 	fwd16

		.echo **FAIL  XCE  abi

		xce 	($1234)
		xce 	(bak16)
		xce 	(fwd16)

		.echo **FAIL  XCE  abx

		xce 	$1234,X
		xce 	bak16,x
		xce 	fwd16,X

		.echo **FAIL  XCE  abxi

		xce 	($1234,X)
		xce 	(bak16,x)
		xce 	(fwd16,X)

		.echo **FAIL  XCE  aby

		xce 	$1234,Y
		xce 	bak16,y
		xce 	fwd16,Y

		.echo **FAIL  XCE  acc

		xce 	A
		xce 	a

		.echo **FAIL  XCE  bmv

		xce 	#$12, #$34
		xce 	#bak08, #fwd08
		xce 	$123456, $789ABC
		xce 	bak24, fwd24

		.echo **FAIL  XCE  imm

		xce 	#$12
		xce 	#bak08
		xce 	#fwd08

		.echo **PASS  XCE  imp

		XCE 

		.echo **FAIL  XCE  lab

		xce 	$123456
		xce 	bak24
		xce 	fwd24

		.echo **FAIL  XCE  labi

		xce 	[$123456]
		xce 	[bak24]
		xce 	[fwd24]

		.echo **FAIL  XCE  labx

		xce 	$123456,X
		xce 	bak24,x
		xce 	fwd24,X

		.echo **FAIL  XCE  lpcr

		xce 	:+
		xce 	-
		xce 	+
		xce 	:-

		.echo **FAIL  XCE  lzpi

		xce 	[$12]
		xce 	[bak08]
		xce 	[fwd08]

		.echo **FAIL  XCE  lzpiy

		xce 	[$12],Y
		xce 	[bak08],y
		xce 	[fwd08],Y

		.echo **FAIL  XCE  pcr

		xce 	:+
		xce 	-
		xce 	+
		xce 	:-

		.echo **FAIL  XCE  sr

		xce 	$12,S
		xce 	bak08,s
		xce 	fwd08,S

		.echo **FAIL  XCE  sriy

		xce 	($12,s),Y
		xce 	(bak08,S),y
		xce 	(fwd08,s),Y

		.echo **FAIL  XCE  zp

		xce 	$12
		xce 	bak08
		xce 	fwd08

		.echo **FAIL  XCE  zpi

		xce 	($12)
		xce 	(bak08)
		xce 	(fwd08)

		.echo **FAIL  XCE  zpiy

		xce 	($12),Y
		xce 	(bak08),y
		xce 	(fwd08),Y

		.echo **FAIL  XCE  zpx

		xce 	$12,X
		xce 	bak08,x
		xce 	fwd08,X

		.echo **FAIL  XCE  zpxi

		xce 	($12,X)
		xce 	(bak08,x)
		xce 	(fwd08,X)

		.echo **FAIL  XCE  zpy

		xce 	$12,Y
		xce 	bak08,y
		xce 	fwd08,Y


:	; forward ref for XCE

; -------------------------------

; forward reference

fwd32	.equ	$89ABCDEF
fwd24	.equ	$456789
fwd16	.equ	$1234
fwd08	.equ	$12

; -------------------------------

		.end

; -------------------------------

; 1420 pass
; 5852 fail
