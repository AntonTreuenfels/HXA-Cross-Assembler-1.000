; Hobby Cross-Assembler HXA65 Test 65C02
; 65C02\Instruction Set
; ok: 65C02 Instruction Set

; generated by MODE65.PY - Fri Nov 29 14:29:53 2024

; no errors to detect

; -------------------------------

		.listfile
		.errfile

		.maxerr	10000		; increase default count

; -------------------------------

		.cpu	65C02
		.org	$1000

; -------------------------------

; backward reference

bak08	.equ	$12
bak16	.equ	$1234
bak24	.equ	$456789
bak32	.equ	$89ABCDEF

; -------------------------------

:	; backward ref for ADC

		; **PASS  ADC  ab

		ADC 	$1234
		ADC 	bak16
		ADC 	fwd16

		; **PASS  ADC  abx

		ADC 	$1234,X
		ADC 	bak16,x
		ADC 	fwd16,X

		; **PASS  ADC  aby

		ADC 	$1234,Y
		ADC 	bak16,y
		ADC 	fwd16,Y

		; **PASS  ADC  imm

		ADC 	#$12
		ADC 	#bak08
		ADC 	#fwd08

		; **PASS  ADC  zp

		ADC 	$12
		ADC 	bak08
		Adc 	fwd08   	; (absolute)

		; **PASS  ADC  zpi

		ADC 	($12)
		ADC 	(bak08)
		ADC 	(fwd08)

		; **PASS  ADC  zpiy

		ADC 	($12),Y
		ADC 	(bak08),y
		ADC 	(fwd08),Y

		; **PASS  ADC  zpx

		ADC 	$12,X
		ADC 	bak08,x
		Adc 	fwd08,X 	; (absolute)

		; **PASS  ADC  zpxi

		ADC 	($12,X)
		ADC 	(bak08,x)
		ADC 	(fwd08,X)


:	; forward ref for ADC

; -------------------------------

:	; backward ref for AND

		; **PASS  AND  ab

		AND 	$1234
		AND 	bak16
		AND 	fwd16

		; **PASS  AND  abx

		AND 	$1234,X
		AND 	bak16,x
		AND 	fwd16,X

		; **PASS  AND  aby

		AND 	$1234,Y
		AND 	bak16,y
		AND 	fwd16,Y

		; **PASS  AND  imm

		AND 	#$12
		AND 	#bak08
		AND 	#fwd08

		; **PASS  AND  zp

		AND 	$12
		AND 	bak08
		And 	fwd08   	; (absolute)

		; **PASS  AND  zpi

		AND 	($12)
		AND 	(bak08)
		AND 	(fwd08)

		; **PASS  AND  zpiy

		AND 	($12),Y
		AND 	(bak08),y
		AND 	(fwd08),Y

		; **PASS  AND  zpx

		AND 	$12,X
		AND 	bak08,x
		And 	fwd08,X 	; (absolute)

		; **PASS  AND  zpxi

		AND 	($12,X)
		AND 	(bak08,x)
		AND 	(fwd08,X)


:	; forward ref for AND

; -------------------------------

:	; backward ref for ASL

		; **PASS  ASL  ab

		ASL 	$1234
		ASL 	bak16
		ASL 	fwd16

		; **PASS  ASL  abx

		ASL 	$1234,X
		ASL 	bak16,x
		ASL 	fwd16,X

		; **PASS  ASL  acc

		ASL 	A
		ASL 	a

		; **PASS  ASL  imp

		ASL 

		; **PASS  ASL  zp

		ASL 	$12
		ASL 	bak08
		Asl 	fwd08   	; (absolute)

		; **PASS  ASL  zpx

		ASL 	$12,X
		ASL 	bak08,x
		Asl 	fwd08,X 	; (absolute)


:	; forward ref for ASL

; -------------------------------

:	; backward ref for BCC

		; **PASS  BCC  pcr

		BCC 	:+
		BCC 	-
		BCC 	+
		BCC 	:-


:	; forward ref for BCC

; -------------------------------

:	; backward ref for BCS

		; **PASS  BCS  pcr

		BCS 	:+
		BCS 	-
		BCS 	+
		BCS 	:-


:	; forward ref for BCS

; -------------------------------

:	; backward ref for BEQ

		; **PASS  BEQ  pcr

		BEQ 	:+
		BEQ 	-
		BEQ 	+
		BEQ 	:-


:	; forward ref for BEQ

; -------------------------------

:	; backward ref for BGE

		; **PASS  BGE  pcr

		BGE 	:+
		BGE 	-
		BGE 	+
		BGE 	:-


:	; forward ref for BGE

; -------------------------------

:	; backward ref for BIT

		; **PASS  BIT  ab

		BIT 	$1234
		BIT 	bak16
		BIT 	fwd16

		; **PASS  BIT  abx

		BIT 	$1234,X
		BIT 	bak16,x
		BIT 	fwd16,X

		; **PASS  BIT  imm

		BIT 	#$12
		BIT 	#bak08
		BIT 	#fwd08

		; **PASS  BIT  zp

		BIT 	$12
		BIT 	bak08
		Bit 	fwd08   	; (absolute)

		; **PASS  BIT  zpx

		BIT 	$12,X
		BIT 	bak08,x
		Bit 	fwd08,X 	; (absolute)


:	; forward ref for BIT

; -------------------------------

:	; backward ref for BLT

		; **PASS  BLT  pcr

		BLT 	:+
		BLT 	-
		BLT 	+
		BLT 	:-


:	; forward ref for BLT

; -------------------------------

:	; backward ref for BMI

		; **PASS  BMI  pcr

		BMI 	:+
		BMI 	-
		BMI 	+
		BMI 	:-


:	; forward ref for BMI

; -------------------------------

:	; backward ref for BNE

		; **PASS  BNE  pcr

		BNE 	:+
		BNE 	-
		BNE 	+
		BNE 	:-


:	; forward ref for BNE

; -------------------------------

:	; backward ref for BPL

		; **PASS  BPL  pcr

		BPL 	:+
		BPL 	-
		BPL 	+
		BPL 	:-


:	; forward ref for BPL

; -------------------------------

:	; backward ref for BRA

		; **PASS  BRA  pcr

		BRA 	:+
		BRA 	-
		BRA 	+
		BRA 	:-


:	; forward ref for BRA

; -------------------------------

:	; backward ref for BRK

		; **PASS  BRK  imm

		BRK 	#$12
		BRK 	#bak08
		BRK 	#fwd08

		; **PASS  BRK  imp

		BRK 

		; **PASS  BRK  zp

		BRK 	$12
		BRK 	bak08
		BRK 	fwd08


:	; forward ref for BRK

; -------------------------------

:	; backward ref for BVC

		; **PASS  BVC  pcr

		BVC 	:+
		BVC 	-
		BVC 	+
		BVC 	:-


:	; forward ref for BVC

; -------------------------------

:	; backward ref for BVS

		; **PASS  BVS  pcr

		BVS 	:+
		BVS 	-
		BVS 	+
		BVS 	:-


:	; forward ref for BVS

; -------------------------------

:	; backward ref for CLC

		; **PASS  CLC  imp

		CLC 


:	; forward ref for CLC

; -------------------------------

:	; backward ref for CLD

		; **PASS  CLD  imp

		CLD 


:	; forward ref for CLD

; -------------------------------

:	; backward ref for CLI

		; **PASS  CLI  imp

		CLI 


:	; forward ref for CLI

; -------------------------------

:	; backward ref for CLV

		; **PASS  CLV  imp

		CLV 


:	; forward ref for CLV

; -------------------------------

:	; backward ref for CMP

		; **PASS  CMP  ab

		CMP 	$1234
		CMP 	bak16
		CMP 	fwd16

		; **PASS  CMP  abx

		CMP 	$1234,X
		CMP 	bak16,x
		CMP 	fwd16,X

		; **PASS  CMP  aby

		CMP 	$1234,Y
		CMP 	bak16,y
		CMP 	fwd16,Y

		; **PASS  CMP  imm

		CMP 	#$12
		CMP 	#bak08
		CMP 	#fwd08

		; **PASS  CMP  zp

		CMP 	$12
		CMP 	bak08
		Cmp 	fwd08   	; (absolute)

		; **PASS  CMP  zpi

		CMP 	($12)
		CMP 	(bak08)
		CMP 	(fwd08)

		; **PASS  CMP  zpiy

		CMP 	($12),Y
		CMP 	(bak08),y
		CMP 	(fwd08),Y

		; **PASS  CMP  zpx

		CMP 	$12,X
		CMP 	bak08,x
		Cmp 	fwd08,X 	; (absolute)

		; **PASS  CMP  zpxi

		CMP 	($12,X)
		CMP 	(bak08,x)
		CMP 	(fwd08,X)


:	; forward ref for CMP

; -------------------------------

:	; backward ref for CPX

		; **PASS  CPX  ab

		CPX 	$1234
		CPX 	bak16
		CPX 	fwd16

		; **PASS  CPX  imm

		CPX 	#$12
		CPX 	#bak08
		CPX 	#fwd08

		; **PASS  CPX  zp

		CPX 	$12
		CPX 	bak08
		Cpx 	fwd08   	; (absolute)


:	; forward ref for CPX

; -------------------------------

:	; backward ref for CPY

		; **PASS  CPY  ab

		CPY 	$1234
		CPY 	bak16
		CPY 	fwd16

		; **PASS  CPY  imm

		CPY 	#$12
		CPY 	#bak08
		CPY 	#fwd08

		; **PASS  CPY  zp

		CPY 	$12
		CPY 	bak08
		Cpy 	fwd08   	; (absolute)


:	; forward ref for CPY

; -------------------------------

:	; backward ref for DEA

		; **PASS  DEA  imp

		DEA 


:	; forward ref for DEA

; -------------------------------

:	; backward ref for DEC

		; **PASS  DEC  ab

		DEC 	$1234
		DEC 	bak16
		DEC 	fwd16

		; **PASS  DEC  abx

		DEC 	$1234,X
		DEC 	bak16,x
		DEC 	fwd16,X

		; **PASS  DEC  acc

		DEC 	A
		DEC 	a

		; **PASS  DEC  imp

		DEC 

		; **PASS  DEC  zp

		DEC 	$12
		DEC 	bak08
		Dec 	fwd08   	; (absolute)

		; **PASS  DEC  zpx

		DEC 	$12,X
		DEC 	bak08,x
		Dec 	fwd08,X 	; (absolute)


:	; forward ref for DEC

; -------------------------------

:	; backward ref for DEX

		; **PASS  DEX  imp

		DEX 


:	; forward ref for DEX

; -------------------------------

:	; backward ref for DEY

		; **PASS  DEY  imp

		DEY 


:	; forward ref for DEY

; -------------------------------

:	; backward ref for EOR

		; **PASS  EOR  ab

		EOR 	$1234
		EOR 	bak16
		EOR 	fwd16

		; **PASS  EOR  abx

		EOR 	$1234,X
		EOR 	bak16,x
		EOR 	fwd16,X

		; **PASS  EOR  aby

		EOR 	$1234,Y
		EOR 	bak16,y
		EOR 	fwd16,Y

		; **PASS  EOR  imm

		EOR 	#$12
		EOR 	#bak08
		EOR 	#fwd08

		; **PASS  EOR  zp

		EOR 	$12
		EOR 	bak08
		Eor 	fwd08   	; (absolute)

		; **PASS  EOR  zpi

		EOR 	($12)
		EOR 	(bak08)
		EOR 	(fwd08)

		; **PASS  EOR  zpiy

		EOR 	($12),Y
		EOR 	(bak08),y
		EOR 	(fwd08),Y

		; **PASS  EOR  zpx

		EOR 	$12,X
		EOR 	bak08,x
		Eor 	fwd08,X 	; (absolute)

		; **PASS  EOR  zpxi

		EOR 	($12,X)
		EOR 	(bak08,x)
		EOR 	(fwd08,X)


:	; forward ref for EOR

; -------------------------------

:	; backward ref for INA

		; **PASS  INA  imp

		INA 


:	; forward ref for INA

; -------------------------------

:	; backward ref for INC

		; **PASS  INC  ab

		INC 	$1234
		INC 	bak16
		INC 	fwd16

		; **PASS  INC  abx

		INC 	$1234,X
		INC 	bak16,x
		INC 	fwd16,X

		; **PASS  INC  acc

		INC 	A
		INC 	a

		; **PASS  INC  imp

		INC 

		; **PASS  INC  zp

		INC 	$12
		INC 	bak08
		Inc 	fwd08   	; (absolute)

		; **PASS  INC  zpx

		INC 	$12,X
		INC 	bak08,x
		Inc 	fwd08,X 	; (absolute)


:	; forward ref for INC

; -------------------------------

:	; backward ref for INX

		; **PASS  INX  imp

		INX 


:	; forward ref for INX

; -------------------------------

:	; backward ref for INY

		; **PASS  INY  imp

		INY 


:	; forward ref for INY

; -------------------------------

:	; backward ref for JMP

		; **PASS  JMP  ab

		JMP 	$1234
		JMP 	bak16
		JMP 	fwd16

		; **PASS  JMP  abi

		JMP 	($1234)
		JMP 	(bak16)
		JMP 	(fwd16)

		; **PASS  JMP  abxi

		JMP 	($1234,X)
		JMP 	(bak16,x)
		JMP 	(fwd16,X)


:	; forward ref for JMP

; -------------------------------

:	; backward ref for JSR

		; **PASS  JSR  ab

		JSR 	$1234
		JSR 	bak16
		JSR 	fwd16


:	; forward ref for JSR

; -------------------------------

:	; backward ref for LDA

		; **PASS  LDA  ab

		LDA 	$1234
		LDA 	bak16
		LDA 	fwd16

		; **PASS  LDA  abx

		LDA 	$1234,X
		LDA 	bak16,x
		LDA 	fwd16,X

		; **PASS  LDA  aby

		LDA 	$1234,Y
		LDA 	bak16,y
		LDA 	fwd16,Y

		; **PASS  LDA  imm

		LDA 	#$12
		LDA 	#bak08
		LDA 	#fwd08

		; **PASS  LDA  zp

		LDA 	$12
		LDA 	bak08
		Lda 	fwd08   	; (absolute)

		; **PASS  LDA  zpi

		LDA 	($12)
		LDA 	(bak08)
		LDA 	(fwd08)

		; **PASS  LDA  zpiy

		LDA 	($12),Y
		LDA 	(bak08),y
		LDA 	(fwd08),Y

		; **PASS  LDA  zpx

		LDA 	$12,X
		LDA 	bak08,x
		Lda 	fwd08,X 	; (absolute)

		; **PASS  LDA  zpxi

		LDA 	($12,X)
		LDA 	(bak08,x)
		LDA 	(fwd08,X)


:	; forward ref for LDA

; -------------------------------

:	; backward ref for LDX

		; **PASS  LDX  ab

		LDX 	$1234
		LDX 	bak16
		LDX 	fwd16

		; **PASS  LDX  aby

		LDX 	$1234,Y
		LDX 	bak16,y
		LDX 	fwd16,Y

		; **PASS  LDX  imm

		LDX 	#$12
		LDX 	#bak08
		LDX 	#fwd08

		; **PASS  LDX  zp

		LDX 	$12
		LDX 	bak08
		Ldx 	fwd08   	; (absolute)

		; **PASS  LDX  zpy

		LDX 	$12,Y
		LDX 	bak08,y
		Ldx 	fwd08,Y 	; (absolute)


:	; forward ref for LDX

; -------------------------------

:	; backward ref for LDY

		; **PASS  LDY  ab

		LDY 	$1234
		LDY 	bak16
		LDY 	fwd16

		; **PASS  LDY  abx

		LDY 	$1234,X
		LDY 	bak16,x
		LDY 	fwd16,X

		; **PASS  LDY  imm

		LDY 	#$12
		LDY 	#bak08
		LDY 	#fwd08

		; **PASS  LDY  zp

		LDY 	$12
		LDY 	bak08
		Ldy 	fwd08   	; (absolute)

		; **PASS  LDY  zpx

		LDY 	$12,X
		LDY 	bak08,x
		Ldy 	fwd08,X 	; (absolute)


:	; forward ref for LDY

; -------------------------------

:	; backward ref for LSR

		; **PASS  LSR  ab

		LSR 	$1234
		LSR 	bak16
		LSR 	fwd16

		; **PASS  LSR  abx

		LSR 	$1234,X
		LSR 	bak16,x
		LSR 	fwd16,X

		; **PASS  LSR  acc

		LSR 	A
		LSR 	a

		; **PASS  LSR  imp

		LSR 

		; **PASS  LSR  zp

		LSR 	$12
		LSR 	bak08
		Lsr 	fwd08   	; (absolute)

		; **PASS  LSR  zpx

		LSR 	$12,X
		LSR 	bak08,x
		Lsr 	fwd08,X 	; (absolute)


:	; forward ref for LSR

; -------------------------------

:	; backward ref for NOP

		; **PASS  NOP  imp

		NOP 


:	; forward ref for NOP

; -------------------------------

:	; backward ref for ORA

		; **PASS  ORA  ab

		ORA 	$1234
		ORA 	bak16
		ORA 	fwd16

		; **PASS  ORA  abx

		ORA 	$1234,X
		ORA 	bak16,x
		ORA 	fwd16,X

		; **PASS  ORA  aby

		ORA 	$1234,Y
		ORA 	bak16,y
		ORA 	fwd16,Y

		; **PASS  ORA  imm

		ORA 	#$12
		ORA 	#bak08
		ORA 	#fwd08

		; **PASS  ORA  zp

		ORA 	$12
		ORA 	bak08
		Ora 	fwd08   	; (absolute)

		; **PASS  ORA  zpi

		ORA 	($12)
		ORA 	(bak08)
		ORA 	(fwd08)

		; **PASS  ORA  zpiy

		ORA 	($12),Y
		ORA 	(bak08),y
		ORA 	(fwd08),Y

		; **PASS  ORA  zpx

		ORA 	$12,X
		ORA 	bak08,x
		Ora 	fwd08,X 	; (absolute)

		; **PASS  ORA  zpxi

		ORA 	($12,X)
		ORA 	(bak08,x)
		ORA 	(fwd08,X)


:	; forward ref for ORA

; -------------------------------

:	; backward ref for PHA

		; **PASS  PHA  imp

		PHA 


:	; forward ref for PHA

; -------------------------------

:	; backward ref for PHP

		; **PASS  PHP  imp

		PHP 


:	; forward ref for PHP

; -------------------------------

:	; backward ref for PHX

		; **PASS  PHX  imp

		PHX 


:	; forward ref for PHX

; -------------------------------

:	; backward ref for PHY

		; **PASS  PHY  imp

		PHY 


:	; forward ref for PHY

; -------------------------------

:	; backward ref for PLA

		; **PASS  PLA  imp

		PLA 


:	; forward ref for PLA

; -------------------------------

:	; backward ref for PLP

		; **PASS  PLP  imp

		PLP 


:	; forward ref for PLP

; -------------------------------

:	; backward ref for PLX

		; **PASS  PLX  imp

		PLX 


:	; forward ref for PLX

; -------------------------------

:	; backward ref for PLY

		; **PASS  PLY  imp

		PLY 


:	; forward ref for PLY

; -------------------------------

:	; backward ref for ROL

		; **PASS  ROL  ab

		ROL 	$1234
		ROL 	bak16
		ROL 	fwd16

		; **PASS  ROL  abx

		ROL 	$1234,X
		ROL 	bak16,x
		ROL 	fwd16,X

		; **PASS  ROL  acc

		ROL 	A
		ROL 	a

		; **PASS  ROL  imp

		ROL 

		; **PASS  ROL  zp

		ROL 	$12
		ROL 	bak08
		Rol 	fwd08   	; (absolute)

		; **PASS  ROL  zpx

		ROL 	$12,X
		ROL 	bak08,x
		Rol 	fwd08,X 	; (absolute)


:	; forward ref for ROL

; -------------------------------

:	; backward ref for ROR

		; **PASS  ROR  ab

		ROR 	$1234
		ROR 	bak16
		ROR 	fwd16

		; **PASS  ROR  abx

		ROR 	$1234,X
		ROR 	bak16,x
		ROR 	fwd16,X

		; **PASS  ROR  acc

		ROR 	A
		ROR 	a

		; **PASS  ROR  imp

		ROR 

		; **PASS  ROR  zp

		ROR 	$12
		ROR 	bak08
		Ror 	fwd08   	; (absolute)

		; **PASS  ROR  zpx

		ROR 	$12,X
		ROR 	bak08,x
		Ror 	fwd08,X 	; (absolute)


:	; forward ref for ROR

; -------------------------------

:	; backward ref for RTI

		; **PASS  RTI  imp

		RTI 


:	; forward ref for RTI

; -------------------------------

:	; backward ref for RTS

		; **PASS  RTS  imp

		RTS 


:	; forward ref for RTS

; -------------------------------

:	; backward ref for SBC

		; **PASS  SBC  ab

		SBC 	$1234
		SBC 	bak16
		SBC 	fwd16

		; **PASS  SBC  abx

		SBC 	$1234,X
		SBC 	bak16,x
		SBC 	fwd16,X

		; **PASS  SBC  aby

		SBC 	$1234,Y
		SBC 	bak16,y
		SBC 	fwd16,Y

		; **PASS  SBC  imm

		SBC 	#$12
		SBC 	#bak08
		SBC 	#fwd08

		; **PASS  SBC  zp

		SBC 	$12
		SBC 	bak08
		Sbc 	fwd08   	; (absolute)

		; **PASS  SBC  zpi

		SBC 	($12)
		SBC 	(bak08)
		SBC 	(fwd08)

		; **PASS  SBC  zpiy

		SBC 	($12),Y
		SBC 	(bak08),y
		SBC 	(fwd08),Y

		; **PASS  SBC  zpx

		SBC 	$12,X
		SBC 	bak08,x
		Sbc 	fwd08,X 	; (absolute)

		; **PASS  SBC  zpxi

		SBC 	($12,X)
		SBC 	(bak08,x)
		SBC 	(fwd08,X)


:	; forward ref for SBC

; -------------------------------

:	; backward ref for SEC

		; **PASS  SEC  imp

		SEC 


:	; forward ref for SEC

; -------------------------------

:	; backward ref for SED

		; **PASS  SED  imp

		SED 


:	; forward ref for SED

; -------------------------------

:	; backward ref for SEI

		; **PASS  SEI  imp

		SEI 


:	; forward ref for SEI

; -------------------------------

:	; backward ref for STA

		; **PASS  STA  ab

		STA 	$1234
		STA 	bak16
		STA 	fwd16

		; **PASS  STA  abx

		STA 	$1234,X
		STA 	bak16,x
		STA 	fwd16,X

		; **PASS  STA  aby

		STA 	$1234,Y
		STA 	bak16,y
		STA 	fwd16,Y

		; **PASS  STA  zp

		STA 	$12
		STA 	bak08
		Sta 	fwd08   	; (absolute)

		; **PASS  STA  zpi

		STA 	($12)
		STA 	(bak08)
		STA 	(fwd08)

		; **PASS  STA  zpiy

		STA 	($12),Y
		STA 	(bak08),y
		STA 	(fwd08),Y

		; **PASS  STA  zpx

		STA 	$12,X
		STA 	bak08,x
		Sta 	fwd08,X 	; (absolute)

		; **PASS  STA  zpxi

		STA 	($12,X)
		STA 	(bak08,x)
		STA 	(fwd08,X)


:	; forward ref for STA

; -------------------------------

:	; backward ref for STX

		; **PASS  STX  ab

		STX 	$1234
		STX 	bak16
		STX 	fwd16

		; **PASS  STX  zp

		STX 	$12
		STX 	bak08
		Stx 	fwd08   	; (absolute)

		; **PASS  STX  zpy

		STX 	$12,Y
		STX 	bak08,y
		STX 	fwd08,Y


:	; forward ref for STX

; -------------------------------

:	; backward ref for STY

		; **PASS  STY  ab

		STY 	$1234
		STY 	bak16
		STY 	fwd16

		; **PASS  STY  zp

		STY 	$12
		STY 	bak08
		Sty 	fwd08   	; (absolute)

		; **PASS  STY  zpx

		STY 	$12,X
		STY 	bak08,x
		STY 	fwd08,X


:	; forward ref for STY

; -------------------------------

:	; backward ref for STZ

		; **PASS  STZ  ab

		STZ 	$1234
		STZ 	bak16
		STZ 	fwd16

		; **PASS  STZ  abx

		STZ 	$1234,X
		STZ 	bak16,x
		STZ 	fwd16,X

		; **PASS  STZ  zp

		STZ 	$12
		STZ 	bak08
		Stz 	fwd08   	; (absolute)

		; **PASS  STZ  zpx

		STZ 	$12,X
		STZ 	bak08,x
		Stz 	fwd08,X 	; (absolute)


:	; forward ref for STZ

; -------------------------------

:	; backward ref for TAX

		; **PASS  TAX  imp

		TAX 


:	; forward ref for TAX

; -------------------------------

:	; backward ref for TAY

		; **PASS  TAY  imp

		TAY 


:	; forward ref for TAY

; -------------------------------

:	; backward ref for TRB

		; **PASS  TRB  ab

		TRB 	$1234
		TRB 	bak16
		TRB 	fwd16

		; **PASS  TRB  zp

		TRB 	$12
		TRB 	bak08
		Trb 	fwd08   	; (absolute)


:	; forward ref for TRB

; -------------------------------

:	; backward ref for TSB

		; **PASS  TSB  ab

		TSB 	$1234
		TSB 	bak16
		TSB 	fwd16

		; **PASS  TSB  zp

		TSB 	$12
		TSB 	bak08
		Tsb 	fwd08   	; (absolute)


:	; forward ref for TSB

; -------------------------------

:	; backward ref for TSX

		; **PASS  TSX  imp

		TSX 


:	; forward ref for TSX

; -------------------------------

:	; backward ref for TXA

		; **PASS  TXA  imp

		TXA 


:	; forward ref for TXA

; -------------------------------

:	; backward ref for TXS

		; **PASS  TXS  imp

		TXS 


:	; forward ref for TXS

; -------------------------------

:	; backward ref for TYA

		; **PASS  TYA  imp

		TYA 


:	; forward ref for TYA

; -------------------------------

; forward reference

fwd32	.equ	$89ABCDEF
fwd24	.equ	$456789
fwd16	.equ	$1234
fwd08	.equ	$12

; -------------------------------

		.end

; -------------------------------

; 501 pass
; 0 fail
