; Hobby Cross-Assembler HXA65 Error Test 6502g
; 6502\Instruction Set
; error: 6502 Group Rep Instructions, Caught Second Pass

; generated by MODE65.PY - Fri Nov 29 14:25:08 2024


; warning(s):

; errors(s):

; fatal:

; -------------------------------

		.listfile
		.errfile

		.maxerr	10000		; increase default count

; -------------------------------

		.cpu	6502
		.org	$1000

; -------------------------------

; backward reference

bak08	.equ	$12
bak16	.equ	$1234
bak24	.equ	$456789
bak32	.equ	$89ABCDEF

; -------------------------------

:	; backward ref for ADC

		; check ADC
		; 7 mnemonics with modes ['ab', 'abx', 'aby', 'imm', 'zp', 'zpiy', 'zpx', 'zpxi']
		; AND
		; CMP
		; EOR
		; LDA
		; ORA
		; SBC

		.echo **PASS  ADC  pcr  (as ab)

		Adc 	:+
		Adc 	-
		Adc 	+
		Adc 	:-

		.echo **PASS  ADC  zpy  (as aby)

		Adc 	$12,Y
		Adc 	bak08,y
		Adc 	fwd08,Y


:	; forward ref for ADC

; -------------------------------

:	; backward ref for ASL

		; check ASL
		; 4 mnemonics with modes ['ab', 'abx', 'acc', 'imp', 'zp', 'zpx']
		; LSR
		; ROL
		; ROR

		.echo **PASS  ASL  pcr  (as ab)

		Asl 	:+
		Asl 	-
		Asl 	+
		Asl 	:-


:	; forward ref for ASL

; -------------------------------

:	; backward ref for BCC

		; check BCC
		; 10 mnemonics with modes ['pcr']
		; BCS
		; BEQ
		; BGE
		; BLT
		; BMI
		; BNE
		; BPL
		; BVC
		; BVS

		.echo **FAIL  BCC  ab

		bcc 	$1234
		bcc 	bak16
		bcc 	fwd16

		.echo **FAIL  BCC  zp

		bcc 	$12
		bcc 	bak08
		bcc 	fwd08


:	; forward ref for BCC

; -------------------------------

:	; backward ref for BIT

		; check BIT
		; 1 mnemonics with modes ['ab', 'zp']

		.echo **PASS  BIT  pcr  (as ab)

		Bit 	:+
		Bit 	-
		Bit 	+
		Bit 	:-


:	; forward ref for BIT

; -------------------------------

:	; backward ref for BRK

		; check BRK
		; 1 mnemonics with modes ['imm', 'imp', 'zp']

		.echo **FAIL  BRK  ab

		brk 	$1234
		brk 	bak16
		brk 	fwd16

		.echo **FAIL  BRK  pcr

		brk 	:+
		brk 	-
		brk 	+
		brk 	:-


:	; forward ref for BRK

; -------------------------------

:	; backward ref for CPX

		; check CPX
		; 2 mnemonics with modes ['ab', 'imm', 'zp']
		; CPY

		.echo **PASS  CPX  pcr  (as ab)

		Cpx 	:+
		Cpx 	-
		Cpx 	+
		Cpx 	:-


:	; forward ref for CPX

; -------------------------------

:	; backward ref for DEC

		; check DEC
		; 2 mnemonics with modes ['ab', 'abx', 'zp', 'zpx']
		; INC

		.echo **PASS  DEC  pcr  (as ab)

		Dec 	:+
		Dec 	-
		Dec 	+
		Dec 	:-


:	; forward ref for DEC

; -------------------------------

:	; backward ref for JMP

		; check JMP
		; 1 mnemonics with modes ['ab', 'abi']

		.echo **PASS  JMP  pcr  (as ab)

		Jmp 	:+
		Jmp 	-
		Jmp 	+
		Jmp 	:-

		.echo **PASS  JMP  zp  (as ab)

		Jmp 	$12
		Jmp 	bak08
		Jmp 	fwd08


:	; forward ref for JMP

; -------------------------------

:	; backward ref for JSR

		; check JSR
		; 1 mnemonics with modes ['ab']

		.echo **PASS  JSR  pcr  (as ab)

		Jsr 	:+
		Jsr 	-
		Jsr 	+
		Jsr 	:-

		.echo **PASS  JSR  zp  (as ab)

		Jsr 	$12
		Jsr 	bak08
		Jsr 	fwd08


:	; forward ref for JSR

; -------------------------------

:	; backward ref for LDX

		; check LDX
		; 1 mnemonics with modes ['ab', 'aby', 'imm', 'zp', 'zpy']

		.echo **PASS  LDX  pcr  (as ab)

		Ldx 	:+
		Ldx 	-
		Ldx 	+
		Ldx 	:-


:	; forward ref for LDX

; -------------------------------

:	; backward ref for LDY

		; check LDY
		; 1 mnemonics with modes ['ab', 'abx', 'imm', 'zp', 'zpx']

		.echo **PASS  LDY  pcr  (as ab)

		Ldy 	:+
		Ldy 	-
		Ldy 	+
		Ldy 	:-


:	; forward ref for LDY

; -------------------------------

:	; backward ref for STA

		; check STA
		; 1 mnemonics with modes ['ab', 'abx', 'aby', 'zp', 'zpiy', 'zpx', 'zpxi']

		.echo **PASS  STA  pcr  (as ab)

		Sta 	:+
		Sta 	-
		Sta 	+
		Sta 	:-

		.echo **PASS  STA  zpy  (as aby)

		Sta 	$12,Y
		Sta 	bak08,y
		Sta 	fwd08,Y


:	; forward ref for STA

; -------------------------------

:	; backward ref for STX

		; check STX
		; 1 mnemonics with modes ['ab', 'zp', 'zpy']

		.echo **FAIL  STX  aby

		stx 	$1234,Y
		stx 	bak16,y
		stx 	fwd16,Y

		.echo **PASS  STX  pcr  (as ab)

		Stx 	:+
		Stx 	-
		Stx 	+
		Stx 	:-


:	; forward ref for STX

; -------------------------------

:	; backward ref for STY

		; check STY
		; 1 mnemonics with modes ['ab', 'zp', 'zpx']

		.echo **FAIL  STY  abx

		sty 	$1234,X
		sty 	bak16,x
		sty 	fwd16,X

		.echo **PASS  STY  pcr  (as ab)

		Sty 	:+
		Sty 	-
		Sty 	+
		Sty 	:-


:	; forward ref for STY

; -------------------------------

; forward reference

fwd32	.equ	$89ABCDEF
fwd24	.equ	$456789
fwd16	.equ	$1234
fwd08	.equ	$12

; -------------------------------

		.end

; -------------------------------

; 60 pass
; 19 fail
